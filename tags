!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
%	vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	vim/bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
.	vim/bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> .     :<C-U>call repeat#run(v:count)<CR>$/;"	m
<C-G>S	vim/bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	vim/bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-R>	vim/bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <C-R> :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<C-S>	vim/bundle/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-F>	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>f	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<Esc>OA	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OA <Up>$/;"	m
<Esc>OB	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OB <Down>$/;"	m
<Esc>OC	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OC <Right>$/;"	m
<Esc>OD	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OD <Left>$/;"	m
<Esc>OF	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OF <End>$/;"	m
<Esc>OH	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>OH <Home>$/;"	m
<Esc>[5~	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>[5~ <PageUp>$/;"	m
<Esc>[6~	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^        imap <silent> <Esc>[6~ <PageDown>$/;"	m
<Plug	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^augroup <Plug>(autoclose)$/;"	a
<Plug>(a)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(a) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(a)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(a) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(d)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(d) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(d)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(d) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(i)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(i) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(i)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(i) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(n)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(n) :<C-u>call multiple_cursors#new('v')<CR>$/;"	m
<Plug>(p)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(p) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(s)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(s) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(unite_source_outline_loop_cursor_down)	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^nmap <Plug>(unite_source_outline_loop_cursor_down) <Plug>(unite_skip_cursor_down)$/;"	m
<Plug>(unite_source_outline_loop_cursor_up)	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^nmap <Plug>(unite_source_outline_loop_cursor_up) <Plug>(unite_skip_cursor_up)$/;"	m
<Plug>(w)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(w) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(w)	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(w) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>Commentary	vim/bundle/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>Commentary     :<C-U>set opfunc=<SID>go<CR>g@$/;"	m
<Plug>CommentaryLine	vim/bundle/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryLine :<C-U>set opfunc=<SID>go<Bar>exe 'norm! 'v:count1.'g@_'<CR>$/;"	m
<Plug>CommentaryUndo	vim/bundle/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>CommentaryUndo :<C-U>call <SID>undo()<CR>$/;"	m
<Plug>Csurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterNextHunk :<C-U>execute v:count1 . "GitGutterNextHunk"<CR>$/;"	m
<Plug>GitGutterPrevHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPrevHunk :<C-U>execute v:count1 . "GitGutterPrevHunk"<CR>$/;"	m
<Plug>ISurround	vim/bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	vim/bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>NormalModeSendToTmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^nmap <unique> <Plug>NormalModeSendToTmux vip <Plug>SendSelectionToTmux$/;"	m
<Plug>SendSelectionToTmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^vmap <unique> <Plug>SendSelectionToTmux "ry :call Send_to_Tmux(@r)<CR>$/;"	m
<Plug>SetTmuxVars	vim/bundle/tslime.vim/plugin/tslime.vim	/^nmap <unique> <Plug>SetTmuxVars :call <SID>Tmux_Vars()<CR>$/;"	m
<Plug>SuperTabBackward	vim/bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	vim/bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>VSurround	vim/bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	vim/bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<SID>TogBG	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<c-\>	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-\\> :TmuxNavigatePrevious<cr>$/;"	m
<c-h>	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>$/;"	m
<c-j>	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-j> :TmuxNavigateDown<cr>$/;"	m
<c-k>	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-k> :TmuxNavigateUp<cr>$/;"	m
<c-l>	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-l> :TmuxNavigateRight<cr>$/;"	m
<c-x>	vim/bundle/supertab/plugin/supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	vim/bundle/supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
APPVER	vim/bundle/vimproc/make_msvc.mak	/^APPVER = 5.0$/;"	m
ARCHIVE	vim/bundle/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	vim/bundle/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after autoload compiler doc ftdetect ftplugin indent syntax$/;"	m
ARCHS	vim/bundle/vimproc/make_mac.mak	/^ARCHS=i386 x86_64$/;"	m
ARR_D	vim/bundle/ultisnips/test.py	/^ARR_D = '\\x1bOB'$/;"	v
ARR_L	vim/bundle/ultisnips/test.py	/^ARR_L = '\\x1bOD'$/;"	v
ARR_R	vim/bundle/ultisnips/test.py	/^ARR_R = '\\x1bOC'$/;"	v
ARR_U	vim/bundle/ultisnips/test.py	/^ARR_U = '\\x1bOA'$/;"	v
Action_preview	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Action_preview(candidate)$/;"	f
AdaptCursorOffsetIfNeeded	vim/bundle/MatchTagAlways/python/mta_core.py	/^def AdaptCursorOffsetIfNeeded( sanitized_html, cursor_offset ):$/;"	f
AddFunc_Opt	vim/bundle/ultisnips/test.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	vim/bundle/ultisnips/test.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddTabularPattern	vim/bundle/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	vim/bundle/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	vim/bundle/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	vim/bundle/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AdjustPrinter	emacs.d/sml-mode/print.sml	/^structure AdjustPrinter$/;"	r
AirlineRefresh	vim/bundle/vim-airline/plugin/airline.vim	/^command! AirlineRefresh call airline#load_theme()$/;"	c
AirlineTheme	vim/bundle/vim-airline/plugin/airline.vim	/^command! -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	vim/bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggle call <sid>airline_toggle()$/;"	c
AirlineToggleWhitespace	vim/bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AllowQuote	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:AllowQuote(char, isBS)$/;"	f
Anon_NoTrigger_AfterSpace	vim/bundle/ultisnips/test.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	vim/bundle/ultisnips/test.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	vim/bundle/ultisnips/test.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	vim/bundle/ultisnips/test.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	vim/bundle/ultisnips/test.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	vim/bundle/ultisnips/test.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	vim/bundle/ultisnips/test.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	vim/bundle/ultisnips/test.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	vim/bundle/ultisnips/test.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AutoClose#DefaultPairs	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! AutoClose#DefaultPairs()$/;"	f
AutoClose#DefaultPairsModified	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! AutoClose#DefaultPairsModified(pairsToAdd,openersToRemove)$/;"	f
AutoClose#ParsePairs	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! AutoClose#ParsePairs(string)$/;"	f
AutoCloseOff	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^command! AutoCloseOff :let b:AutoCloseOn = 0$/;"	c
AutoCloseOn	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^command! AutoCloseOn :let b:AutoCloseOn = 1$/;"	c
AutoCloseToggle	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^command! AutoCloseToggle :call s:ToggleAutoClose()$/;"	c
BRACES	vim/bundle/ultisnips/test.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	vim/bundle/ultisnips/test.py	/^BS = '\\x7f'$/;"	v
Backspace	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:Backspace()$/;"	f
Backspace_TabStop_NotZero	vim/bundle/ultisnips/test.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	vim/bundle/ultisnips/test.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BackupDir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
Blame	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Browse	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufWriteIndexFile	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
CC	vim/bundle/vimproc/make_mac.mak	/^CC=$(LLVMCC)$/;"	m
CC	vim/bundle/vimproc/make_mac.mak	/^CC=gcc$/;"	m
CC	vim/bundle/vimproc/make_sunos.mak	/^CC=gcc$/;"	m
CFLAGS	vim/bundle/vimproc/make_cygwin.mak	/^CFLAGS=-O2 -W -Wall -Wno-unused -Wno-unused-parameter -use=gnu99 -shared$/;"	m
CFLAGS	vim/bundle/vimproc/make_mac.mak	/^CFLAGS=-O2 -W -Wall -Wno-unused -Wno-unused-parameter -bundle -fPIC $(foreach ARCH,$(ARCHS),-arch $(ARCH))$/;"	m
CFLAGS	vim/bundle/vimproc/make_mingw32.mak	/^CFLAGS=-O2 -Wall -shared -m32$/;"	m
CFLAGS	vim/bundle/vimproc/make_mingw64.mak	/^CFLAGS=-O2 -Wall -shared -m64$/;"	m
CFLAGS	vim/bundle/vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/O2$/;"	m
CFLAGS	vim/bundle/vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	vim/bundle/vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
CFLAGS	vim/bundle/vimproc/make_sunos.mak	/^CFLAGS=-W -Wall -Wno-unused -Wno-unused-parameter -std=c99 -O2 -fPIC -pedantic -D__EXTENSIONS__$/;"	m
CFLAGS	vim/bundle/vimproc/make_sunos.mak	/^CFLAGS=-errwarn -xc99 -xO3 -native -KPIC -D__EXTENSIONS__$/;"	m
CFLAGS	vim/bundle/vimproc/make_unix.mak	/^CFLAGS=-W -O2 -Wall -Wno-unused -Wno-unused-parameter -std=gnu99 -pedantic -shared$/;"	m
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r'^\\$\\d+')$/;"	v	class:MirrorToken
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+[:}]')$/;"	v	class:TabStopToken
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+\\\/')$/;"	v	class:TransformationToken
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r'^`!p\\s')$/;"	v	class:PythonCodeToken
CHECK	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    CHECK = re.compile(r'^`!v\\s')$/;"	v	class:VimLCodeToken
CLOSING	vim/bundle/MatchTagAlways/python/mta_core.py	/^  CLOSING = 2$/;"	v	class:TagType
COMMENT_REGEX	vim/bundle/MatchTagAlways/python/mta_core.py	/^COMMENT_REGEX = re.compile( '<!--.*?-->', re.DOTALL )$/;"	v
COMPLETION_OPTIONS	vim/bundle/ultisnips/test.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	vim/bundle/ultisnips/test.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	vim/bundle/ultisnips/test.py	/^COMPL_KW = chr(24)+chr(14)$/;"	v
CSI_WndCols	vim/bundle/vimproc/autoload/proc_w32.c	/^#define CSI_WndCols(/;"	d	file:
CSI_WndRows	vim/bundle/vimproc/autoload/proc_w32.c	/^#define CSI_WndRows(/;"	d	file:
CanAccessCursorColumn	vim/bundle/MatchTagAlways/python/mta_vim.py	/^def CanAccessCursorColumn( cursor_column ):$/;"	f
CaptureKeyPresses	vim/bundle/supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Center	vim/bundle/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
Choose	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseCommandMap	vim/bundle/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
CleanUp	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClosePair	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:ClosePair(closer)$/;"	f
ClosePreview	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CoffeeBufNew	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
CommandLineCompletion	vim/bundle/supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
Commit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompensateForPUM	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! CompensateForPUM()$/;"	f
CompilerSet	vim/bundle/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/bundle/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/bundle/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/bundle/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/bundle/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteTabularizeCommand	vim/bundle/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
CompletionReset	vim/bundle/supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	vim/bundle/ultisnips/test.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	vim/bundle/ultisnips/test.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	vim/bundle/ultisnips/test.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ContextCompletion	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextText	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
Count	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountQuotes	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:CountQuotes(char)$/;"	f
CreateExtraMaps	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:CreateExtraMaps()$/;"	f
CreateMaps	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:CreateMaps()$/;"	f
CreatePairsMaps	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:CreatePairsMaps()$/;"	f
Ctags.lang_info.cpp.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:Ctags.lang_info.cpp.create_heading(tag, context)$/;"	f
Ctags_exists	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:Ctags_exists()$/;"	f
Ctags_extract_headings	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:Ctags_extract_headings(context)$/;"	f
Ctags_supports	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:Ctags_supports(filetype)$/;"	f
CurrentLineAndColumn	vim/bundle/MatchTagAlways/python/mta_vim.py	/^def CurrentLineAndColumn():$/;"	f
Cursor.column	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
Cursor.line	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
Cursor.move	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
Cursor.new	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
Cursor.remove_visual_selection	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
Cursor.update_highlight	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
Cursor.update_line_length	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
Cursor.update_position	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
Cursor.update_visual_selection	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
CursorManager.add	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
CursorManager.debug	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
CursorManager.delete_current	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
CursorManager.get	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
CursorManager.get_current	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
CursorManager.initialize	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
CursorManager.is_empty	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
CursorManager.loop_done	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
CursorManager.new	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
CursorManager.next	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
CursorManager.reapply_visual_selection	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
CursorManager.remove_highlight	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
CursorManager.reset	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting) dict$/;"	f
CursorManager.restore_user_settings	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
CursorManager.size	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
CursorManager.start_loop	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
CursorManager.update_current	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
CursorMovement_BS_InEditMode	vim/bundle/ultisnips/test.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	vim/bundle/ultisnips/test.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
DEFINES	vim/bundle/vimproc/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
DefRuby	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineVariables	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:DefineVariables()$/;"	f
Delete	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:Delete()$/;"	f
DeleteCurrentTabStop1_JumpBack	vim/bundle/ultisnips/test.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	vim/bundle/ultisnips/test.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	vim/bundle/ultisnips/test.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	vim/bundle/ultisnips/test.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	vim/bundle/ultisnips/test.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	vim/bundle/ultisnips/test.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
DetectCoffee	vim/bundle/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
Diff	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...)$/;"	f
DirComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DoNotExpandAfterSpace_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class DoNotExpandAfterSpace_ExceptCorrectResult(_SimpleExpands):$/;"	c
E2T	vim/colors/vividchalk.vim	/^function! E2T(a)$/;"	f
EA	vim/bundle/ultisnips/test.py	/^EA = "#" # Expand anonymous$/;"	v
ESC	vim/bundle/ultisnips/test.py	/^ESC = '\\x1b'$/;"	v
EX	vim/bundle/ultisnips/test.py	/^EX = "\\t" # EXPAND$/;"	v
EXPORT	vim/bundle/vimproc/autoload/proc_w32.c	/^# define EXPORT /;"	d	file:
EXPORT	vim/bundle/vimproc/autoload/proc_w32.c	/^# define EXPORT$/;"	d	file:
Edit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
EditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.text_objects._base import EditableTextObject, NoneditableTextObject$/;"	i
EditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^from UltiSnips.text_objects._base import EditableTextObject$/;"	i
ElementTree	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^from xml.etree import ElementTree$/;"	i
Emmet	vim/bundle/Emmet.vim/plugin/emmet.vim	/^command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmptyBuffer	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:EmptyBuffer()$/;"	f
EnableLongestEnhancement	vim/bundle/supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EndOfTextToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
Enter	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:Enter()$/;"	f
Env	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
EraseNCharsAtCursor	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:EraseNCharsAtCursor(len)$/;"	f
ErrMsg	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
EscapeCharToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapeCharToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
EscapedChar	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
EscapedChar	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._escaped_char import EscapedChar$/;"	i
ExclusiveSelection_RealWorldCase_Test	vim/bundle/ultisnips/test.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	vim/bundle/ultisnips/test.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExecuteInTree	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitRemoteProcess	vim/bundle/vimproc/autoload/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	file:
ExitSnippetModeAfterTabstopZero	vim/bundle/ultisnips/test.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ExpandInTheMiddleOfLine_ExceptCorrectResult(_SimpleExpands):$/;"	c
ExpandMap	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpatError	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^from xml.parsers.expat import ExpatError$/;"	i
ExtraBrackets	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
FOSimple_Break_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class FOSimple_Break_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class FOTextAfter_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class FOTextBeforeAndAfter_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class FOWrapOnLongWord_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FileCache_clear	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:FileCache_clear()$/;"	f
FileCache_get	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:FileCache_get(bufnr) dict$/;"	f
FileCache_has	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:FileCache_has(bufnr) dict$/;"	f
FileCache_remove	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:FileCache_remove(bufnr) dict$/;"	f
FileCache_set	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:FileCache_set(bufnr, data) dict$/;"	f
FileRead	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileWriter	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Filename	vim/bundle/ultisnips/plugin/snipMate_compatibility.vim	/^fun! Filename(...)$/;"	f
FilterString	vim/bundle/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
FindContainingClass	vim/bundle/vim-ruby/indent/ruby.vim	/^function! s:FindContainingClass()$/;"	f
FinishCommit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FlushBuffer	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:FlushBuffer()$/;"	f
FoldOverwrite_Simple_ECR	vim/bundle/ultisnips/test.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	vim/bundle/ultisnips/test.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
Foldexpr_markdown	vim/bundle/vim-markdown/after/ftplugin/mkd.vim	/^func! Foldexpr_markdown(lnum)$/;"	f
FoldingEnabled_SnippetWithFold_ExpectNoFolding	vim/bundle/ultisnips/test.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
ForwardFindTag	vim/bundle/MatchTagAlways/python/mta_core.py	/^def ForwardFindTag( text, from_position ):$/;"	f
GF	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GTabularize	vim/bundle/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
GetBufferRubyClass	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCharAhead	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetCharAhead(len)$/;"	f
GetCharBehind	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetCharBehind(len)$/;"	f
GetCoffeeHtmlIndent	vim/bundle/vim-coffee-script/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetCurrentSyntaxRegion	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetCurrentSyntaxRegion()$/;"	f
GetCurrentSyntaxRegionIf	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetCurrentSyntaxRegionIf(char)$/;"	f
GetDefaultPolicy	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetEnclosingTagLocations	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:GetEnclosingTagLocations()$/;"	f
GetErubyIndent	vim/bundle/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetHaskellIndent	vim/bundle/vim-haskell/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetMSL	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakePrg	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetNextChar	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetNextChar()$/;"	f
GetNextUnmatchedClosingTag	vim/bundle/MatchTagAlways/python/mta_core.py	/^def GetNextUnmatchedClosingTag( html, cursor_offset ):$/;"	f
GetNextUnmatchedClosingTag_Nested_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_Nested_test():$/;"	f
GetNextUnmatchedClosingTag_NoClosingTagFail_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_NoClosingTagFail_test():$/;"	f
GetNextUnmatchedClosingTag_NoOpeningTagFail_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_NoOpeningTagFail_test():$/;"	f
GetNextUnmatchedClosingTag_OnAngleBracket_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_OnAngleBracket_test():$/;"	f
GetNextUnmatchedClosingTag_OrphanOpeningTag_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_OrphanOpeningTag_test():$/;"	f
GetNextUnmatchedClosingTag_Simple_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_Simple_test():$/;"	f
GetOpeningAndClosingTags	vim/bundle/MatchTagAlways/python/mta_core.py	/^def GetOpeningAndClosingTags( html, cursor_offset ):$/;"	f
GetPrevChar	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:GetPrevChar()$/;"	f
GetPrevNormalLine	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPreviousUnmatchedOpeningTag	vim/bundle/MatchTagAlways/python/mta_core.py	/^def GetPreviousUnmatchedOpeningTag( html, cursor_offset ):$/;"	f
GetPreviousUnmatchedOpeningTag_NestedMultiLine_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_NestedMultiLine_test():$/;"	f
GetPreviousUnmatchedOpeningTag_Nested_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_Nested_test():$/;"	f
GetPreviousUnmatchedOpeningTag_OnAngleBracket_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_OnAngleBracket_test():$/;"	f
GetPreviousUnmatchedOpeningTag_OrphanOpeningTag_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_OrphanOpeningTag_test():$/;"	f
GetPreviousUnmatchedOpeningTag_Simple_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_Simple_test():$/;"	f
GetRubyIndent	vim/bundle/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetTrimmedLine	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
Git	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GitGutter	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutter call GitGutter(s:current_file())$/;"	c
GitGutter	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutter(file, ...)$/;"	f
GitGutterAll	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterAll call GitGutterAll()$/;"	c
GitGutterAll	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterAll()$/;"	f
GitGutterDisable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDisable call GitGutterDisable()$/;"	c
GitGutterDisable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterDisable()$/;"	f
GitGutterEnable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterEnable call GitGutterEnable()$/;"	c
GitGutterEnable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterEnable()$/;"	f
GitGutterGetHunkSummary	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsDisable call GitGutterLineHighlightsDisable()$/;"	c
GitGutterLineHighlightsDisable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterLineHighlightsDisable()$/;"	f
GitGutterLineHighlightsEnable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsEnable call GitGutterLineHighlightsEnable()$/;"	c
GitGutterLineHighlightsEnable	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterLineHighlightsEnable()$/;"	f
GitGutterLineHighlightsToggle	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsToggle call GitGutterLineHighlightsToggle()$/;"	c
GitGutterLineHighlightsToggle	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterLineHighlightsToggle()$/;"	f
GitGutterNextHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterNextHunk call GitGutterNextHunk(<count>)$/;"	c
GitGutterNextHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterNextHunk(count)$/;"	f
GitGutterPrevHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterPrevHunk call GitGutterPrevHunk(<count>)$/;"	c
GitGutterPrevHunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterPrevHunk(count)$/;"	f
GitGutterToggle	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterToggle call GitGutterToggle()$/;"	c
GitGutterToggle	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterToggle()$/;"	f
Grep	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
HiLink	vim/bundle/vim-haskell/syntax/haskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/bundle/vim-haskell/syntax/haskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightEnclosingTags	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:HighlightEnclosingTags()$/;"	f
HighlightEnclosingTagsIfPossible	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:HighlightEnclosingTagsIfPossible()$/;"	f
HtmlHiLink	vim/bundle/vim-markdown/syntax/mkd.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	vim/bundle/vim-markdown/syntax/mkd.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	vim/bundle/ultisnips/test.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INC	vim/bundle/vimproc/make_android.mak	/^INC=autoload\/vimstack.c$/;"	m
INC	vim/bundle/vimproc/make_sunos.mak	/^INC=autoload\/vimstack.c$/;"	m
InTmuxSession	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:InTmuxSession()$/;"	f
IndentUtil	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips.util import IndentUtil$/;"	i
IndentUtil	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.util import IndentUtil$/;"	i
IndentUtil	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^from UltiSnips.util import IndentUtil$/;"	i
IndentUtil	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^class IndentUtil(object):$/;"	c
Init	vim/bundle/supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
InitBuffer	vim/bundle/supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InnerClass	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        class InnerClass$/;"	c	class:OuterClass
InsertPair	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:InsertPair(opener)$/;"	f
InsertRefs	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertStringAtCursor	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:InsertStringAtCursor(str)$/;"	f
IsComment	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsEmptyPair	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:IsEmptyPair()$/;"	f
IsForbidden	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:IsForbidden(char)$/;"	f
IsInClassDef	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInString	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLoadedOnBuffer	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:IsLoadedOnBuffer()$/;"	f
IsPosInClassDef	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPreviewOpen	vim/bundle/supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsString	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
JB	vim/bundle/ultisnips/test.py	/^JB = "+" # Jump backwards$/;"	v
JF	vim/bundle/ultisnips/test.py	/^JF = "?" # Jump forwards$/;"	v
JumpForward_DefSnippet	vim/bundle/ultisnips/test.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpInit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
LDFLAGS	vim/bundle/vimproc/make_mac.mak	/^LDFLAGS=$/;"	m
LDFLAGS	vim/bundle/vimproc/make_sunos.mak	/^LDFLAGS=-G$/;"	m
LDFLAGS	vim/bundle/vimproc/make_sunos.mak	/^LDFLAGS=-shared$/;"	m
LLVMCC	vim/bundle/vimproc/make_mac.mak	/^LLVMCC=clang$/;"	m
LLVMCC	vim/bundle/vimproc/make_mac.mak	/^LLVMCC=llvm-gcc$/;"	m
LS	vim/bundle/ultisnips/test.py	/^LS = "@" # List snippets$/;"	v
LeaveTrailingWhitespace	vim/bundle/ultisnips/test.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left	vim/bundle/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
LimitPattern	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! s:LimitPattern(pattern, start, end)$/;"	f
LineColumnForOffsetInString	vim/bundle/MatchTagAlways/python/mta_core.py	/^def LineColumnForOffsetInString( text, offset ):$/;"	f
LineColumnOffsetConversions_BasicMultiLine_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_BasicMultiLine_test():$/;"	f
LineColumnOffsetConversions_Basic_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_Basic_test():$/;"	f
LineColumnOffsetConversions_ComplexMultiLine_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_ComplexMultiLine_test():$/;"	f
LineColumnOffsetConversions_EmtpyLine_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_EmtpyLine_test():$/;"	f
LineColumnOffsetConversions_FailColumnOutOfRange_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailColumnOutOfRange_test():$/;"	f
LineColumnOffsetConversions_FailLineOutOfRange_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailLineOutOfRange_test():$/;"	f
LineColumnOffsetConversions_FailOnEmptyString_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailOnEmptyString_test():$/;"	f
ListAllAvailable_BraceInFront_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_BraceInFront_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExceptionShouldBeRaised	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_NonDefined_NoExceptionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_NothingTyped_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_SpaceInFront_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class ListAllAvailable_testtyped_ExceptCorrectResult(_ListAllSnippets):$/;"	c
List_mark	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:List_mark(candidates, pred, ...)$/;"	f
List_normalize_levels	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:List_normalize_levels(objs)$/;"	f
List_remove	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:List_remove(headings, pred)$/;"	f
List_reset_marks	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:List_reset_marks(candidates)$/;"	f
List_sort_by_lnum	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:List_sort_by_lnum(dicts)$/;"	f
LocationOfEnclosingTagsInWindowView	vim/bundle/MatchTagAlways/python/mta_vim.py	/^def LocationOfEnclosingTagsInWindowView():$/;"	f
LocationsOfEnclosingTags	vim/bundle/MatchTagAlways/python/mta_core.py	/^def LocationsOfEnclosingTags( input_html, cursor_line, cursor_column ):$/;"	f
LocationsOfEnclosingTags_Basic_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Basic_test():$/;"	f
LocationsOfEnclosingTags_Comments_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Comments_test():$/;"	f
LocationsOfEnclosingTags_CursorInTagFull_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_CursorInTagFull_test():$/;"	f
LocationsOfEnclosingTags_CursorInTag_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_CursorInTag_test():$/;"	f
LocationsOfEnclosingTags_Fail_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Fail_test():$/;"	f
LocationsOfEnclosingTags_MultiLine_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_MultiLine_test():$/;"	f
LocationsOfEnclosingTags_Nested_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Nested_test():$/;"	f
LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test():$/;"	f
LocationsOfEnclosingTags_UnbalancedOpeningTag_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_UnbalancedOpeningTag_test():$/;"	f
Log	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
M	vim/colors/vividchalk.vim	/^fun! s:M(a)$/;"	f
MakeDict	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! s:MakeDict(mapping)$/;"	f
ManualCompletionEnter	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
MapNormVis	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! s:MapNormVis(rhs,lhs)$/;"	f
Markdown_GetLineNumCurHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GetLineNumCurHeader()$/;"	f
Markdown_GoCurHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoCurHeader()$/;"	f
Markdown_GoCurHeaderGetHashes	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoCurHeaderGetHashes()$/;"	f
Markdown_GoHeaderUp	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoHeaderUp()$/;"	f
Markdown_GoNextHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoNextHeader()$/;"	f
Markdown_GoNextSiblingHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoNextSiblingHeader()$/;"	f
Markdown_GoPreviousHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoPreviousHeader()$/;"	f
Markdown_GoPreviousSiblingHeader	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! b:Markdown_GoPreviousSiblingHeader()$/;"	f
Match	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchDebug	vim/bundle/vim-matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchIsTooCheap	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MatchTagAlways#Setup	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! MatchTagAlways#Setup()$/;"	f
Match_debug	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	vim/bundle/vim-matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
Mirror	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
Mirror	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
Mirror	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
MirrorBeforeTabstopLeave_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MirrorBeforeTabstopLeave_ExceptCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MirrorBeforeTabstopOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MirrorRealLifeExample_ExceptCorrectResult(_VimTest):$/;"	c
MirrorToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class MirrorToken(Token):$/;"	c
MirrorToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
Mirror_TestKillTabstop_Kill	vim/bundle/ultisnips/test.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	vim/bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	vim/bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	vim/bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	vim/bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
ModifyPairsList	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:ModifyPairsList(list, pairsToAdd, openersToRemove)$/;"	f
Module_bind	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^function! s:Module_bind(func_name) dict$/;"	f
Move	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MovePosition_DelSameLine	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	vim/bundle/ultisnips/test.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	vim/bundle/ultisnips/test.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	vim/bundle/ultisnips/test.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiMatch	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiWordSnippet_Simple	vim/bundle/ultisnips/test.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	vim/bundle/ultisnips/test.py	/^    _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	vim/bundle/ultisnips/test.py	/^    _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	vim/bundle/ultisnips/test.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultiWord_SnippetOptions_OverwriteExisting_ECR	vim/bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OverwriteExisting_ECR(_VimTest):$/;"	c
MultilineExpandTestTyping_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MultilineExpandTestTyping_ExceptCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MultilineExpand_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult(_VimTest):$/;"	c
MultipleCursorsFind	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind $/;"	c
Multiple_ManySnippetsOneTrigger_ECR	vim/bundle/ultisnips/test.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	vim/bundle/ultisnips/test.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	vim/bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	vim/bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	vim/bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	vim/bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MyAppend1	vim/bundle/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	vim/bundle/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	vim/bundle/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	vim/bundle/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NUMBER_OF_RETRIES_FOR_EACH_TEST	vim/bundle/ultisnips/test.py	/^NUMBER_OF_RETRIES_FOR_EACH_TEST = 4$/;"	v
NeoBundle	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundle$/;"	c
NeoBundleCheck	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleCheck$/;"	c
NeoBundleClean	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleClean$/;"	c
NeoBundleDepends	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleDepends$/;"	c
NeoBundleDirectEdit	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleDirectEdit$/;"	c
NeoBundleDirectInstall	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleDirectInstall$/;"	c
NeoBundleDisable	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleDisable$/;"	c
NeoBundleDocs	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleDocs$/;"	c
NeoBundleFetch	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleFetch$/;"	c
NeoBundleInstall	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleInstall$/;"	c
NeoBundleLazy	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleLazy$/;"	c
NeoBundleList	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleList$/;"	c
NeoBundleLocal	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=1 -complete=dir NeoBundleLocal$/;"	c
NeoBundleLog	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleLog$/;"	c
NeoBundleRecipe	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleRecipe$/;"	c
NeoBundleReinstall	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleReinstall$/;"	c
NeoBundleSource	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleSource$/;"	c
NeoBundleUpdate	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleUpdate$/;"	c
NeoBundleUpdatesLog	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleUpdatesLog$/;"	c
NewDictMapping	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! s:NewDictMapping(definition)$/;"	f
NewListMapping	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! s:NewListMapping(definition)$/;"	f
No_Tab_Expand_ET	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld,_VimTest):$/;"	c
No_Tab_Expand_Simple	vim/bundle/ultisnips/test.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_escaped_char.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.text_objects._base import EditableTextObject, NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
OBJS	vim/bundle/vimproc/make_msvc.mak	/^OBJS = $(SRCS:.c=.obj)$/;"	m
OPENING	vim/bundle/MatchTagAlways/python/mta_core.py	/^  OPENING = 1$/;"	v	class:TagType
OPEN_MAX	vim/bundle/vimproc/autoload/fakepoll.h	/^  #define OPEN_MAX /;"	d
OffsetForLineColumnInString	vim/bundle/MatchTagAlways/python/mta_core.py	/^def OffsetForLineColumnInString( text, line, column ):$/;"	f
OpenOrCloseTwinPair	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:OpenOrCloseTwinPair(char)$/;"	f
OuterClass	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^      class OuterClass$/;"	c
PLATFORM	vim/bundle/vimproc/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	vim/bundle/vimproc/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	vim/bundle/vimproc/Makefile	/^        PLATFORM = unix$/;"	m
POLLERR	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLERR /;"	d
POLLHUP	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLHUP /;"	d
POLLIN	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLIN /;"	d
POLLNORM	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLNORM /;"	d
POLLNVAL	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLNVAL /;"	d
POLLOUT	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLOUT /;"	d
POLLPRI	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLPRI /;"	d
POLLRDBAND	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLRDBAND /;"	d
POLLRDNORM	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLRDNORM /;"	d
POLLWRBAND	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLWRBAND /;"	d
POLLWRNORM	vim/bundle/vimproc/autoload/fakepoll.h	/^#define POLLWRNORM /;"	d
PacifyHtmlComments	vim/bundle/MatchTagAlways/python/mta_core.py	/^def PacifyHtmlComments( text ):$/;"	f
PacifyHtmlComments_Works_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def PacifyHtmlComments_Works_test():$/;"	f
ParseCoffeeError	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParsePattern	vim/bundle/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseSkip	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseSnippets_ClearAll	vim/bundle/ultisnips/test.py	/^class ParseSnippets_ClearAll(_PS_Base):$/;"	c
ParseSnippets_ClearOne	vim/bundle/ultisnips/test.py	/^class ParseSnippets_ClearOne(_PS_Base):$/;"	c
ParseSnippets_ClearTwo	vim/bundle/ultisnips/test.py	/^class ParseSnippets_ClearTwo(_PS_Base):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	vim/bundle/ultisnips/test.py	/^class ParseSnippets_ExtendsWithoutFiletype(_PS_Base):$/;"	c
ParseSnippets_Global_Local_Python	vim/bundle/ultisnips/test.py	/^class ParseSnippets_Global_Local_Python(_PS_Base):$/;"	c
ParseSnippets_Global_Python	vim/bundle/ultisnips/test.py	/^class ParseSnippets_Global_Python(_PS_Base):$/;"	c
ParseSnippets_MissingEndSnippet	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MissingEndSnippet(_PS_Base):$/;"	c
ParseSnippets_MultiWord_Description	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_NoContainer(_PS_Base):$/;"	c
ParseSnippets_MultiWord_Quotes	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Quotes(_PS_Base):$/;"	c
ParseSnippets_MultiWord_RE1	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_PS_Base):$/;"	c
ParseSnippets_MultiWord_WithQuotes	vim/bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_WithQuotes(_PS_Base):$/;"	c
ParseSnippets_SimpleSnippet	vim/bundle/ultisnips/test.py	/^class ParseSnippets_SimpleSnippet(_PS_Base):$/;"	c
ParseSnippets_UnknownDirective	vim/bundle/ultisnips/test.py	/^class ParseSnippets_UnknownDirective(_PS_Base):$/;"	c
ParseWords	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let Path = unite#sources#outline#modules#base#new('Path', s:SID)$/;"	v
Path_normalize	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Path_normalize(path, ...)$/;"	f
PerlSyntaxFold	vim/bundle/ultisnips/test.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PopBuffer	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:PopBuffer()$/;"	f
Position	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^class Position(object):$/;"	c
Position	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^from geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^from geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.geometry import Position$/;"	i
Position	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.geometry import Position$/;"	i
PrevNonBlankNonString	vim/bundle/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
ProperIndenting_AutoIndentAndNewline_ECR	vim/bundle/ultisnips/test.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	vim/bundle/ultisnips/test.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	vim/bundle/ultisnips/test.py	/^class ProperIndenting_FirstLineInFile_ECR(_PS_Base):$/;"	c
ProperIndenting_SimpleCase_ECR	vim/bundle/ultisnips/test.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	vim/bundle/ultisnips/test.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PushBuffer	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:PushBuffer(char)$/;"	f
PythonCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._python_code import PythonCode$/;"	i
PythonCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	vim/bundle/ultisnips/test.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	vim/bundle/ultisnips/test.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	vim/bundle/ultisnips/test.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	vim/bundle/ultisnips/test.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	vim/bundle/ultisnips/test.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
PythonCode_AccessKilledTabstop_OverwriteFirst	vim/bundle/ultisnips/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	vim/bundle/ultisnips/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_IndentEtSw	vim/bundle/ultisnips/test.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	vim/bundle/ultisnips/test.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	vim/bundle/ultisnips/test.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	vim/bundle/ultisnips/test.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	vim/bundle/ultisnips/test.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	vim/bundle/ultisnips/test.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	vim/bundle/ultisnips/test.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	vim/bundle/ultisnips/test.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	vim/bundle/ultisnips/test.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	vim/bundle/ultisnips/test.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	vim/bundle/ultisnips/test.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	vim/bundle/ultisnips/test.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	vim/bundle/ultisnips/test.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	vim/bundle/ultisnips/test.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	vim/bundle/ultisnips/test.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	vim/bundle/ultisnips/test.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	vim/bundle/ultisnips/test.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	vim/bundle/ultisnips/test.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	vim/bundle/ultisnips/test.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	vim/bundle/ultisnips/test.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	vim/bundle/ultisnips/test.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	vim/bundle/ultisnips/test.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	vim/bundle/ultisnips/test.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	vim/bundle/ultisnips/test.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	vim/bundle/ultisnips/test.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	vim/bundle/ultisnips/test.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	vim/bundle/ultisnips/test.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
REF	vim/bundle/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
RecTabStopsWithExpandtab_SimpleExample_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	vim/bundle/ultisnips/test.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_PS_Base):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineInTabstop_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class RecTabStops_SimpleCase_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	vim/bundle/ultisnips/test.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	vim/bundle/ultisnips/test.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	vim/bundle/ultisnips/test.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	vim/bundle/ultisnips/test.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
Ref	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
ReleaseKeyPresses	vim/bundle/supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
Remove	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveClosedOpenTags	vim/bundle/MatchTagAlways/python/mta_core.py	/^  def RemoveClosedOpenTags( tags_to_close, new_tag ):$/;"	f	function:GetNextUnmatchedClosingTag
RemoveTrailingWhitespace	vim/bundle/ultisnips/test.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
ReplaceCmd	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
Resolve	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
ReverseFindTag	vim/bundle/MatchTagAlways/python/mta_core.py	/^def ReverseFindTag( text, from_position ):$/;"	f
Right	vim/bundle/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RubyBalloonexpr	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
SELF_CLOSED	vim/bundle/MatchTagAlways/python/mta_core.py	/^  SELF_CLOSED = 3$/;"	v	class:TagType
SEQUENCES	vim/bundle/ultisnips/test.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SHELL	vim/bundle/supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID_PREFIX	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:SID_PREFIX()$/;"	f
SRC	vim/bundle/vimproc/make_android.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	vim/bundle/vimproc/make_cygwin.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	vim/bundle/vimproc/make_mac.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	vim/bundle/vimproc/make_mingw32.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	vim/bundle/vimproc/make_mingw64.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	vim/bundle/vimproc/make_sunos.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	vim/bundle/vimproc/make_unix.mak	/^SRC=autoload\/proc.c$/;"	m
SRCS	vim/bundle/vimproc/make_msvc.mak	/^SRCS = autoload\/proc_w32.c$/;"	m
ScratchBufBuild	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
SearchCode	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchMatchingKeyword	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchPair	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SectionSpec	vim/bundle/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelectCompletion	vim/bundle/supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	vim/bundle/ultisnips/test.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SendToTmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! SendToTmux(text)$/;"	f
Send_keys_to_Tmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! Send_keys_to_Tmux(keys)$/;"	f
Send_to_Tmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! Send_to_Tmux(text)$/;"	f
SetCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefaultCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetLines	vim/bundle/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetMakePrg	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetOption	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
ShellCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._shell_code import ShellCode$/;"	i
ShellCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShellCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
ShiftWidth	vim/bundle/vim-coffee-script/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldSkip	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
SimpleExpandEndingWithNewline_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpandEndingWithNewline_ExceptCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpandNewLineAndBackspae_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpandTwice_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpandTypeAfterExpand_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpandTypeAndDelete_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleExpand_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorDelete_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorMultilineMany_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLineManyMultiline_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLineMany_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLine_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleMirrorSameLine_InText_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultComplexType_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult(_VimTest):$/;"	c
Snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class Snippet(object):$/;"	c
SnippetInstance	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips.text_objects import SnippetInstance$/;"	i
SnippetInstance	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/__init__.py	/^from ._snippet_instance import SnippetInstance$/;"	i
SnippetInstance	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	vim/bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	vim/bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	vim/bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	vim/bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	vim/bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	vim/bundle/ultisnips/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	vim/bundle/ultisnips/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	vim/bundle/ultisnips/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	vim/bundle/ultisnips/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	vim/bundle/ultisnips/test.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_OverwriteExisting_ECR	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteExisting_ECR(_VimTest):$/;"	c
SnippetOptions_OverwriteThenChoose_ECR	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetOptions_OverwriteTwice_ECR	vim/bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	vim/bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetUtil	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
Snippet_With_DoubleQuote	vim/bundle/ultisnips/test.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	vim/bundle/ultisnips/test.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	vim/bundle/ultisnips/test.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	vim/bundle/ultisnips/test.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	vim/bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
SolarizedHiTrail	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Source_Hooks_on_init	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Source_Hooks_on_init(source_args, unite_context)$/;"	f
Source_Hooks_on_syntax	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Source_Hooks_on_syntax(source_args, unite_context)$/;"	f
Source_calc_signature	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Source_calc_signature(lnum)$/;"	f
Source_gather_candidates	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Source_gather_candidates(source_args, unite_context)$/;"	f
Space	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:Space()$/;"	f
SplitCDeclarations	vim/bundle/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCommands	vim/bundle/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	vim/bundle/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	vim/bundle/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
StageDiff	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count)$/;"	f
StagePatch	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count)$/;"	f
StageReloadSeek	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
Status	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
String	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let String = unite#sources#outline#modules#base#new('String', s:SID)$/;"	v
String_capitalize	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:String_capitalize(str, ...)$/;"	f
String_nr2roman	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:String_nr2roman(nr)$/;"	f
String_shellescape	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:String_shellescape(str)$/;"	f
StripLeadingSpaces	vim/bundle/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripTrailingSpaces	vim/bundle/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
Strlen	vim/bundle/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
SuperTab	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	vim/bundle/supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	vim/bundle/supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
Support	vim/bundle/switch.vim/spec/support/vim.rb	/^module Support$/;"	m
Switch	vim/bundle/switch.vim/plugin/switch.vim	/^command! Switch call s:Switch()$/;"	c
Switch	vim/bundle/switch.vim/plugin/switch.vim	/^function! s:Switch()$/;"	f
SwitchWindow	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SyntaxName	vim/bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
TAG_REGEX	vim/bundle/MatchTagAlways/python/mta_core.py	/^TAG_REGEX = re.compile($/;"	v
TAG_REGEX_Works_test	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^def TAG_REGEX_Works_test():$/;"	f
TARGET	vim/bundle/vimproc/make_android.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	vim/bundle/vimproc/make_cygwin.mak	/^TARGET=autoload\/vimproc_cygwin.dll$/;"	m
TARGET	vim/bundle/vimproc/make_mac.mak	/^TARGET=autoload\/vimproc_mac.so$/;"	m
TARGET	vim/bundle/vimproc/make_mingw32.mak	/^TARGET=autoload\/vimproc_win32.dll$/;"	m
TARGET	vim/bundle/vimproc/make_mingw64.mak	/^TARGET=autoload\/vimproc_win64.dll$/;"	m
TARGET	vim/bundle/vimproc/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	vim/bundle/vimproc/make_sunos.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	vim/bundle/vimproc/make_unix.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TOKEN2TO	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    TOKEN2TO = {$/;"	v	class:TOParser
TOParser	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^class TOParser(object):$/;"	c
TOParser	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.text_objects._parser import TOParser$/;"	i
TabStop	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._tabstop import TabStop$/;"	i
TabStop	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	vim/bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	vim/bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	vim/bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopNavigatingInInsertModeSimple_ExceptCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopNoReplace_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopSimpleReplaceReversed_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopSimpleReplaceSurrounded1_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopSimpleReplaceSurrounded_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopSimpleReplace_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestBackwardJumping2_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestBackwardJumping_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestJumping2_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestJumping_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopTestMultilineExpand_ExceptCorrectResult(_VimTest):$/;"	c
TabStopToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
TabStopWithOneChar_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStopWithOneChar_ExceptCorrectResult(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	vim/bundle/ultisnips/test.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabStop_Exit_ExceptCorrectResult(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	vim/bundle/ultisnips/test.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	vim/bundle/ultisnips/test.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	vim/bundle/ultisnips/test.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	vim/bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	vim/bundle/ultisnips/test.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoType_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TabstopWithMirrorManyFromAll_ExceptCorrectResult(_VimTest):$/;"	c
Tabularize	vim/bundle/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	vim/bundle/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
Tag	vim/bundle/MatchTagAlways/python/mta_core.py	/^class Tag( object ):$/;"	c
TagType	vim/bundle/MatchTagAlways/python/mta_core.py	/^class TagType( object ):$/;"	c
TagWithSameNameExistsInSequence	vim/bundle/MatchTagAlways/python/mta_core.py	/^def TagWithSameNameExistsInSequence( tag, sequence ):$/;"	f
TargetDirectory	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TestAllMatch	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TestLangmapWithUtf8_ExceptCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TestNonEmptyLangmapWithSemi_ExceptCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TestNonEmptyLangmap_ExceptCorrectResult(_VimTest):$/;"	c
TestRealLife	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestSuperTabCodeComplete	vim/bundle/supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestUltiSnipsProblem	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TextObject	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextObjectTransformation	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._transformation import TextObjectTransformation$/;"	i
TextTabStopAfterMirror_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopAfterMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopAllSurrounded_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	vim/bundle/ultisnips/test.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopSimpleMirrorMultiline_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopSurroundMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopTextAfterTab_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopTextBeforeMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopTextBeforeTab_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class TextTabStopTextSurroundedTab_ExceptCorrectResult(_VimTest):$/;"	c
Tmux	vim/bundle/tslime.vim/plugin/tslime.vim	/^command! -nargs=* Tmux call Send_to_Tmux('<Args><CR>')$/;"	c
TmuxAwareNavigate	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxAwareNavigate(direction)$/;"	f
TmuxNavigateDown	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateDown call <SID>TmuxWinCmd('j')$/;"	c
TmuxNavigateLeft	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateLeft call <SID>TmuxWinCmd('h')$/;"	c
TmuxNavigatePrevious	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigatePrevious call <SID>TmuxWinCmd('p')$/;"	c
TmuxNavigateRight	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateRight call <SID>TmuxWinCmd('l')$/;"	c
TmuxNavigateUp	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateUp call <SID>TmuxWinCmd('k')$/;"	c
TmuxPanes	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:TmuxPanes()$/;"	f
TmuxSessions	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:TmuxSessions()$/;"	f
TmuxWinCmd	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxWinCmd(direction)$/;"	f
TmuxWindows	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:TmuxWindows()$/;"	f
Tmux_Pane_Numbers	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! Tmux_Pane_Numbers(A,L,P)$/;"	f
Tmux_Session_Names	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! Tmux_Session_Names(A,L,P)$/;"	f
Tmux_Vars	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:Tmux_Vars()$/;"	f
Tmux_Window_Names	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! Tmux_Window_Names(A,L,P)$/;"	f
TogBG	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleAutoClose	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:ToggleAutoClose()$/;"	f
ToggleBG	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
Token	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class Token(object):$/;"	c
ToolBar.togglebg	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
TrailingNewline_TabStop_EndNL	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	vim/bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._transformation import Transformation$/;"	i
Transformation	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	vim/bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	vim/bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	vim/bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	vim/bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_BackreferenceTwice_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_Backreference_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CIBothDefinedNegative_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CIBothDefinedPositive_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CleverTransformLongLower_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CleverTransformLongUpper_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CleverTransformLowercaseChar_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_CleverTransformUpercaseChar_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_ConditionalInsertionSimple_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	vim/bundle/ultisnips/test.py	/^    class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	vim/bundle/ultisnips/test.py	/^    class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_SimpleCaseNoTransform_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_SimpleCaseTransformInFront_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExceptCorrectResult	vim/bundle/ultisnips/test.py	/^class Transformation_SimpleCase_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	vim/bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	vim/bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	vim/bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	vim/bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	vim/bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Tree_append_child	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:Tree_append_child(node, child)$/;"	f
Tree_build	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:Tree_build(elems)$/;"	f
Tree_flatten	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:Tree_flatten(node)$/;"	f
Tree_new	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:Tree_new()$/;"	f
U	vim/bundle/vim-repeat/autoload/repeat.vim	/^    nnoremap <silent> U     :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
UNAME_S	vim/bundle/vimproc/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UNIDECODE_ALERT_RAISED	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	vim/bundle/ultisnips/test.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	vim/bundle/ultisnips/test.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnips	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^import UltiSnips._vim as _vim$/;"	i
UltiSnipsAddFiletypes	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnipsAddFiletypes(<q-args>)$/;"	c
UltiSnipsAddFiletypes	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnipsAddFiletypes(filetypes)$/;"	f
UltiSnipsEdit	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=? -complete=customlist,UltiSnipsFiletypeComplete UltiSnipsEdit$/;"	c
UltiSnipsEdit	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnipsEdit(...)$/;"	f
UltiSnipsFiletypeComplete	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnipsFiletypeComplete(arglead, cmdline, cursorpos)$/;"	f
UltiSnips_AddSnippet	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_AddSnippet(trigger, value, descr, options, ...)$/;"	f
UltiSnips_Anon	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_Anon(value, ...)$/;"	f
UltiSnips_CursorMoved	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_CursorMoved()$/;"	f
UltiSnips_EnteredInsertMode	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_EnteredInsertMode()$/;"	f
UltiSnips_ExpandSnippet	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippet()$/;"	f
UltiSnips_ExpandSnippetOrJump	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippetOrJump()$/;"	f
UltiSnips_FileTypeChanged	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_FileTypeChanged()$/;"	f
UltiSnips_JumpBackwards	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_JumpBackwards()$/;"	f
UltiSnips_JumpForwards	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_JumpForwards()$/;"	f
UltiSnips_LeavingBuffer	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_LeavingBuffer()$/;"	f
UltiSnips_ListSnippets	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ListSnippets()$/;"	f
UltiSnips_Manager	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^UltiSnips_Manager = SnippetManager()$/;"	v
UltiSnips_MapKeys	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_MapKeys()$/;"	f
UltiSnips_SaveLastVisualSelection	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_SaveLastVisualSelection()$/;"	f
UltiSnips_SnippetsInCurrentScope	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_SnippetsInCurrentScope()$/;"	f
Undo_RemoveEditInTabstop	vim/bundle/ultisnips/test.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	vim/bundle/ultisnips/test.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	vim/bundle/ultisnips/test.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
Unite	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ Unite$/;"	c
UniteBookmarkAdd	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^command! -nargs=? -complete=file UniteBookmarkAdd$/;"	c
UniteClose	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteClose call unite#view#_close(<q-args>)$/;"	c
UniteResume	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteResume call s:call_unite_resume(<q-args>)$/;"	c
UniteWithBufferDir	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithBufferDir$/;"	c
UniteWithCurrentDir	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCurrentDir$/;"	c
UniteWithCursorWord	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCursorWord call s:call_unite_cursor_word(<q-args>)$/;"	c
UniteWithInput	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInput call s:call_unite_input(<q-args>)$/;"	c
UniteWithInputDirectory	vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInputDirectory call s:call_unite_input_directory(<q-args>)$/;"	c
Unite_find_outline_source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:Unite_find_outline_source(unite)$/;"	f
UnknownVariable	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
UnsupportedVariableExpression	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
UpdateMakePrg	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UseTmuxNavigatorMappings	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:UseTmuxNavigatorMappings()$/;"	f
Util1	vim/bundle/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	vim/bundle/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	vim/bundle/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
Util__cpp_is_in_comment	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util__cpp_is_in_comment(heading_line, matched_line)$/;"	f
Util_get_comment_heading_level	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_get_comment_heading_level(context, lnum, ...)$/;"	f
Util_get_indent_level	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_get_indent_level(context, lnum)$/;"	f
Util_join_to	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_join_to(context, lnum, pattern, ...)$/;"	f
Util_join_to_rparen	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_join_to_rparen(context, lnum, ...)$/;"	f
Util_neighbor_match	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_neighbor_match(context, lnum, pattern, ...)$/;"	f
Util_neighbor_matchstr	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_neighbor_matchstr(context, lnum, pattern, ...)$/;"	f
Util_print_debug	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_print_debug(which, msg)$/;"	f
Util_print_progress	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_print_progress(msg)$/;"	f
Util_shared_pattern	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:Util_shared_pattern(filetype, which)$/;"	f
VERSION	vim/bundle/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
VIMPROC	vim/bundle/vimproc/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	vim/bundle/vimproc/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
VP_EOV	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_EOV /;"	d	file:
VP_EOV_STR	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_EOV_STR /;"	d	file:
VP_ERRMSG_SIZE	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_ERRMSG_SIZE /;"	d	file:
VP_INITIAL_BUFSIZE	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_INITIAL_BUFSIZE /;"	d	file:
VP_NUMFMT_BUFSIZE	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_NUMFMT_BUFSIZE /;"	d	file:
VP_NUM_BUFSIZE	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_NUM_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	vim/bundle/vimproc/autoload/proc.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	vim/bundle/vimproc/autoload/proc_w32.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_RETURN_IF_FAIL	vim/bundle/vimproc/autoload/vimstack.c	/^# define VP_RETURN_IF_FAIL(/;"	d	file:
VP_STACK_NULL	vim/bundle/vimproc/autoload/vimstack.c	/^#define VP_STACK_NULL /;"	d	file:
VerifyVimDict1	vim/bundle/ultisnips/test.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	vim/bundle/ultisnips/test.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	vim/bundle/ultisnips/test.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Vim	vim/bundle/switch.vim/spec/support/vim.rb	/^  module Vim$/;"	m	class:Support
VimBuffer	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimInterface	vim/bundle/ultisnips/test.py	/^class VimInterface:$/;"	c
VimInterfaceScreen	vim/bundle/ultisnips/test.py	/^class VimInterfaceScreen(VimInterface):$/;"	c
VimInterfaceWindows	vim/bundle/ultisnips/test.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._viml_code import VimLCode$/;"	i
VimLCode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimLCodeToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
VimNavigate	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:VimNavigate(direction)$/;"	f
VimProcBang	vim/bundle/vimproc/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang call s:bang(<q-args>)$/;"	c
VimProcRead	vim/bundle/vimproc/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead call s:read(<q-args>)$/;"	c
VimRubyInstaller	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
VimState	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class VimState(object):$/;"	c
VisMove	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^fu! s:VisMove(f)$/;"	f
Visual	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^from UltiSnips.text_objects._visual import Visual$/;"	i
Visual	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject,TextObjectTransformation):$/;"	c
VisualContentPreserver	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class VisualContentPreserver(object):$/;"	c
VisualToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualToken	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
VisualTransformationWithDefault_ExpandWithVisual	vim/bundle/ultisnips/test.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	vim/bundle/ultisnips/test.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	vim/bundle/ultisnips/test.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	vim/bundle/ultisnips/test.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	vim/bundle/ultisnips/test.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	vim/bundle/ultisnips/test.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	vim/bundle/ultisnips/test.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	vim/bundle/ultisnips/test.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	vim/bundle/ultisnips/test.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	vim/bundle/ultisnips/test.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	vim/bundle/ultisnips/test.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	vim/bundle/ultisnips/test.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	vim/bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	vim/bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	vim/bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_Simple	vim/bundle/ultisnips/test.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	vim/bundle/ultisnips/test.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	vim/bundle/ultisnips/test.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	vim/bundle/ultisnips/test.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
WIFCONTINUED	vim/bundle/vimproc/autoload/proc.c	/^#define WIFCONTINUED(/;"	d	file:
WINVER	vim/bundle/vimproc/autoload/proc_w32.c	/^#define WINVER /;"	d	file:
WINVER	vim/bundle/vimproc/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WIN_ESCAPES	vim/bundle/ultisnips/test.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	vim/bundle/ultisnips/test.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
Wholematch	vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WillComplete	vim/bundle/supertab/plugin/supertab.vim	/^function! s:WillComplete() " {{{$/;"	f
Window.Toggle\	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
Wq	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	vim/bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
X	vim/colors/vividchalk.vim	/^fun! s:X(a)$/;"	f
[%	vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[M	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[h	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^  nmap [h <Plug>GitGutterPrevHunk$/;"	m
[m	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
\\	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap \\\\  <Plug>Commentary$/;"	m
\\\	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap \\\\\\ <Plug>CommentaryLine$/;"	m
\\u	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap \\\\u <Plug>CommentaryUndo$/;"	m
]%	vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]M	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]h	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^  nmap ]h <Plug>GitGutterNextHunk$/;"	m
]m	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_	emacs.d/sml-mode/print.sml	/^    val _ = Meta.printDepth := 100$/;"	v
_	emacs.d/sml-mode/print.sml	/^    val _ = Meta.printLength := 100$/;"	v
_AddFuncBase	vim/bundle/ultisnips/test.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	vim/bundle/ultisnips/test.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_COMMA	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    _COMMA = re.compile(r"(?<!\\\\),")$/;"	v	class:_Real_LangMapTranslator
_CONDITIONAL	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v	class:_CleverReplace
_CleverReplace	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_DOLLAR	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v	class:_CleverReplace
_Dummy_LangMapTranslator	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class _Dummy_LangMapTranslator(object):$/;"	c
_ES_Base	vim/bundle/ultisnips/test.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	vim/bundle/ultisnips/test.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FAKE_POLL_H	vim/bundle/vimproc/autoload/fakepoll.h	/^#define _FAKE_POLL_H$/;"	d
_FormatoptionsBase	vim/bundle/ultisnips/test.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:Snippet
_LONG_CASEFOLDINGS	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v	class:_CleverReplace
_LangMapTranslator	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    _LangMapTranslator = _Dummy_LangMapTranslator$/;"	v
_LangMapTranslator	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^_LangMapTranslator = _Real_LangMapTranslator$/;"	v
_ListAllSnippets	vim/bundle/ultisnips/test.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class _MPBase(object):$/;"	c
_MultiLineDefault	vim/bundle/ultisnips/test.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	vim/bundle/ultisnips/test.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	vim/bundle/ultisnips/test.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	vim/bundle/ultisnips/test.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_POSIX_	vim/bundle/vimproc/autoload/proc_w32.c	/^#define _POSIX_$/;"	d	file:
_PS_Base	vim/bundle/ultisnips/test.py	/^class _PS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	vim/bundle/ultisnips/test.py	/^class _ParseSnippets_MultiWord(_PS_Base):$/;"	c
_ParseSnippets_MultiWord_RE	vim/bundle/ultisnips/test.py	/^class _ParseSnippets_MultiWord_RE(_PS_Base):$/;"	c
_Real_LangMapTranslator	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class _Real_LangMapTranslator(object):$/;"	c
_Regex_Self	vim/bundle/ultisnips/test.py	/^class _Regex_Self(_VimTest):$/;"	c
_SCHARS_ESCPAE	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _SCHARS_ESCPAE = re.compile(r'\\\\[ntrab]')$/;"	v	class:_CleverReplace
_SEMICOLONS	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    _SEMICOLONS = re.compile(r"(?<!\\\\);")$/;"	v	class:_Real_LangMapTranslator
_SIMPLE_CASEFOLDINGS	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _SIMPLE_CASEFOLDINGS = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v	class:_CleverReplace
_SelectModeMappings	vim/bundle/ultisnips/test.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	vim/bundle/ultisnips/test.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetDictionary	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _SnippetDictionary(object):$/;"	c
_SnippetOptions_ExpandWordSnippets	vim/bundle/ultisnips/test.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetsFileParser	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _SnippetsFileParser(object):$/;"	c
_TABS	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:Snippet
_TabExpand_RealWorld	vim/bundle/ultisnips/test.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Tabs	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class _TextIterator(object):$/;"	c
_UNESCAPE	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    _UNESCAPE = re.compile(r'\\\\[^ntrab]')$/;"	v	class:_CleverReplace
_UNESCAPE	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^_UNESCAPE = re.compile(ur'&\\w+?;', re.UNICODE)$/;"	v
_UmlautsBase	vim/bundle/ultisnips/test.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimPosition	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _VimPosition(Position):$/;"	c
_VimTest	vim/bundle/ultisnips/test.py	/^class _VimTest(unittest.TestCase):$/;"	c
_VisualContent	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^_VisualContent = namedtuple('_VisualContent', ['mode', 'text'])$/;"	v
_WIN32_IE	vim/bundle/vimproc/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	vim/bundle/vimproc/autoload/proc_w32.c	/^#define _WIN32_WINNT /;"	d	file:
_XOPEN_SOURCE	vim/bundle/vimproc/autoload/proc.c	/^#define _XOPEN_SOURCE /;"	d	file:
__ALLOWED_TOKENS	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^__ALLOWED_TOKENS = [$/;"	v
__BSD_VISIBLE	vim/bundle/vimproc/autoload/proc.c	/^#define __BSD_VISIBLE /;"	d	file:
__REPLACE_NON_WS	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^    __REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v	class:Visual
__add__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __add__(self,pos):$/;"	m	class:Position	file:
__add__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__all__	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^__all__ = ['as_unicode', 'compatible_exec', 'vim_cursor', 'set_vim_cursor']$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^__all__ = [ "debug", "echo_to_hierarchy", "print_stack" ]$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^__all__ = [ "Position" ]$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/__init__.py	/^__all__ = [ "SnippetInstance" ]$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^__all__ = ["TextObject", "EditableTextObject", "NoneditableTextObject"]$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^__all__ = [$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^__all__ = ["TOParser"]$/;"	v
__all__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^__all__ = ['EditableTextObject']$/;"	v
__eq__	vim/bundle/MatchTagAlways/python/mta_core.py	/^  def __eq__( self, other ):$/;"	m	class:Tag	file:
__eq__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__file__	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
__file__	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
__getitem__	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getslice__	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBuffer	file:
__init__	vim/bundle/MatchTagAlways/python/mta_core.py	/^  def __init__( self, match_object ):$/;"	m	class:Tag
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:SnippetManager
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:_VimPosition
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:_SnippetDictionary
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, ft, fn, snip_manager, file_data=None):$/;"	m	class:_SnippetsFileParser
__init__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, trigger, value, descr, options, globals):$/;"	m	class:Snippet
__init__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token, end = None, initial_text = "", tiebreaker = None):$/;"	m	class:TextObject
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def __init__(self, parent_to, text, indent):$/;"	m	class:TOParser
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext):$/;"	m	class:SnippetUtil
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, snippet, parent, indent, initial_text, start, end, visual_content, last_re, globals):$/;"	m	class:SnippetInstance
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start = None, end = None):$/;"	m	class:TabStop
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, s):$/;"	m	class:_CleverReplace
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	vim/bundle/ultisnips/test.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	vim/bundle/ultisnips/test.py	/^    def __init__(self, session):$/;"	m	class:VimInterfaceScreen
__iter__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__le__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__lshift__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__ne__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__nonzero__	vim/bundle/MatchTagAlways/python/mta_core.py	/^  def __nonzero__( self ):$/;"	m	class:Tag	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __repr__(self):$/;"	m	class:Snippet	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__rshift__	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setslice__	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBuffer	file:
__sub__	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __sub__(self,pos):$/;"	m	class:Position	file:
_add_child	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _add_child(self,c):$/;"	m	class:EditableTextObject
_ask_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ask_snippets(self, snippets):$/;"	m	class:SnippetManager
_build_module	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:_build_module(sid)$/;"	f
_calc_end	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def _calc_end(lines, start):$/;"	f
_calc_signature	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:_calc_signature(bwd_lines, fwd_lines)$/;"	f
_check_if_still_inside_snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_child_has_moved	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^def _chomp(string):$/;"	f
_compare	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:_compare(a, b)$/;"	f
_compare	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_create_hash	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_create_objects_with_links_to_tabs	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _create_objects_with_links_to_tabs(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_create_translation	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def _create_translation(self, langmap):$/;"	m	class:_Real_LangMapTranslator
_cs	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _cs(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_del_child	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _del_child(self,c):$/;"	m	class:EditableTextObject
_do_edit	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd):$/;"	m	class:EditableTextObject
_do_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _do_parse(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_do_print	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^    def _do_print(to, indent=""):$/;"	f	function:echo_to_hierarchy
_do_snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _do_snippet(self, snippet, before, after):$/;"	m	class:SnippetManager
_editable_childs	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _editable_childs(self):$/;"	m	class:EditableTextObject
_encode_name	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_ensure_all_loaded	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ensure_all_loaded(self):$/;"	m	class:SnippetManager
_ensure_directory_exists	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_ensure_loaded	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ensure_loaded(self, ft, checked=None):$/;"	m	class:SnippetManager
_error	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _error(self, msg):$/;"	m	class:SnippetManager
_error	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _error(self, msg):$/;"	m	class:_SnippetsFileParser
_find_closingbrace	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^        def _find_closingbrace(v,start_pos):$/;"	f	function:_CleverReplace._replace_conditional
_find_recursive	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_find_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _find_snippets(self, ft, trigger, potentially = False, seen=None):$/;"	m	class:SnippetManager
_get_functions	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_module_path	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:_get_module_path(name)$/;"	f
_get_next_tab	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, no):$/;"	m	class:EditableTextObject
_get_prev_tab	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, no):$/;"	m	class:EditableTextObject
_get_tabstop	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:EditableTextObject
_get_tabstop	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^def _get_tmp():$/;"	f
_goto_next_line	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _goto_next_line(self):$/;"	m	class:_SnippetsFileParser
_handle_failure	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_hash	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _hash(self, path):$/;"	m	class:_SnippetDictionary
_import	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:_import(name)$/;"	f
_internal_get_pty	vim/bundle/vimproc/autoload/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	file:
_internal_get_tty	vim/bundle/vimproc/autoload/ptytty.c	/^_internal_get_tty(int *slave, char *path,$/;"	f	file:
_is_absolute_path	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_jump	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _jump(self, backwards = False):$/;"	m	class:SnippetManager
_lcase_folding	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _lcase_folding(self, m):$/;"	m	class:_CleverReplace
_line	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line(self):$/;"	m	class:_SnippetsFileParser
_line_head	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_head(self):$/;"	m	class:_SnippetsFileParser
_line_head_tail	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_head_tail(self):$/;"	m	class:_SnippetsFileParser
_line_tail	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_tail(self):$/;"	m	class:_SnippetsFileParser
_load_snippets_for	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetManager
_maps	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    _maps = {}$/;"	v	class:_Real_LangMapTranslator
_move	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_needs_update	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetManager
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	f
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:CursorMovement_BS_InEditMode
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_SW
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_No_TS
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_RealWorld
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PerlSyntaxFold
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentEtSw
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentEtSwOffset
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentNoetSwTs
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_OptExists
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_AnonBase
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_ES_Base
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_ExpandTabs
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_FormatoptionsBase
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_PS_Base
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_SelectModeMappings
_options_off	vim/bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_VimTest
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	f
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:CursorMovement_BS_InEditMode
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_SW
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_No_TS
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_RealWorld
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PerlSyntaxFold
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentEtSw
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentEtSwOffset
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentNoetSwTs
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_OptExists
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_AddFuncBase
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_AnonBase
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_ES_Base
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_ExpandTabs
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_FormatoptionsBase
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_PS_Base
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_SelectModeMappings
_options_on	vim/bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_VimTest
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EndOfTextToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_first	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_first(self, line):$/;"	m	class:_SnippetsFileParser
_parse_number	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_snippet(self):$/;"	m	class:_SnippetsFileParser
_parse_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_snippets(self, ft, fn, file_data=None):$/;"	m	class:SnippetManager
_parse_till_closing_brace	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_part_conditional	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^        def _part_conditional(v):$/;"	f	function:_CleverReplace._replace_conditional
_path2project_directory_git	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:_path2project_directory_git(path)$/;"	f
_path2project_directory_others	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path)$/;"	f
_path2project_directory_svn	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:_path2project_directory_svn(path)$/;"	f
_place_initial_text	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initital_text
_potential_directories	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_re_match	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _re_match(self, trigger):$/;"	m	class:Snippet
_redir	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:_redir(cmd)$/;"	f
_reinit	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_replace_conditional	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _replace_conditional(self, match, v):$/;"	m	class:_CleverReplace
_reset	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_resolve_ambiguity	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _resolve_ambiguity(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_result	vim/bundle/vimproc/autoload/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_result	vim/bundle/vimproc/autoload/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_run_shell_command	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_same_contents?	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_scase_folding	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _scase_folding(self, m):$/;"	m	class:_CleverReplace
_schar_escape	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _schar_escape(self, v):$/;"	m	class:_CleverReplace
_scripts	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:_scripts()$/;"	f
_skip	vim/bundle/ultisnips/test.py	/^    def _skip(self, reason):$/;"	m	class:_VimTest
_snip_quote	vim/bundle/ultisnips/test.py	/^def _snip_quote(qt):$/;"	f
_snips	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _snips(self, before, possible):$/;"	m	class:SnippetManager
_split_by_wcswidth	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth_once	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_substitue_sub_pattern	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:_substitue_sub_pattern(pattern)$/;"	f
_transform	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _try_expand(self):$/;"	m	class:SnippetManager
_unescape	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _unescape(self, v):$/;"	m	class:_CleverReplace
_unify_path	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^  function! s:_unify_path(path)$/;"	f
_unmap_select_mode_mapping	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _update(self, done, not_done):$/;"	m	class:EditableTextObject
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _update(self, done, not_done):$/;"	m	class:NoneditableTextObject
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done, not_done):$/;"	m	class:Mirror
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done, not_done):$/;"	m	class:PythonCode
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done, not_done):$/;"	m	class:ShellCode
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done, not_done):$/;"	m	class:VimLCode
_update	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^    def _update(self, done, not_done):$/;"	m	class:Visual
_valid_vim_ruby_dir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^from UltiSnips import _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^import UltiSnips._vim as _vim$/;"	i
_vim	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^import UltiSnips._vim as _vim$/;"	i
_vim_dec	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^def _vim_dec(s):$/;"	f
_vim_enc	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^def _vim_enc(s):$/;"	f
_vim_line_with_eol	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def _vim_line_with_eol(ln):$/;"	f	function:VisualContentPreserver.conserve
_vim_system_dir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
_vital_depends	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_loaded	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_wcwidth	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_words_for_line	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _words_for_line(self, before, num_words=None):$/;"	m	class:Snippet
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = 'First Line\\nSecond Line'$/;"	v	class:TestWithNewline
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestCheapDelete
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestRealLife1
a	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    a = 'hallo End Beginning'$/;"	v	class:TestRealLife
a%	vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
aM	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
action_find.func	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:action_find.func(candidate) "{{{$/;"	f
action_table.jsplit.func	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:action_table.jsplit.func(candidates)$/;"	f
action_table.jump.func	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:action_table.jump.func(candidate)$/;"	f
action_table.select.func	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:action_table.select.func(candidate)$/;"	f
action_vimgrep_directory.func	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:action_vimgrep_directory.func(candidates) "{{{$/;"	f
action_vimgrep_file.func	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:action_vimgrep_file.func(candidates) "{{{$/;"	f
add_buffer_filetypes	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_dummy_sign	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:add_dummy_sign()$/;"	f
add_extending_info	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_extending_info(self, ft, parents):$/;"	m	class:SnippetManager
add_history	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:add_history(type, command)$/;"	f
add_methods	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_section	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^  function s:add_section(builder, context, key)$/;"	f
add_sign	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:add_sign(line_number, name, file_name)$/;"	f
add_snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet(self, s, fn=None):$/;"	m	class:_SnippetDictionary
add_snippet	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet(self, trigger, value, descr, options, ft = "all", globals = None, fn=None):$/;"	m	class:SnippetManager
add_snippet_file	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet_file(self, ft, path):$/;"	m	class:SnippetManager
addfile	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def addfile(self, path):$/;"	m	class:_SnippetDictionary
adjust_scroll	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:adjust_scroll(best_winline)$/;"	f
adjust_scroll	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:adjust_scroll(best_winline) "{{{$/;"	f
after	vim/bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	vim/bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
airline#add_inactive_statusline_func	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#builder#new	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#check_mode	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	vim/bundle/vim-airline/plugin/airline.vim	/^function airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	vim/bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	vim/bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	vim/bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#deprecation#check	vim/bundle/vim-airline/autoload/airline/deprecation.vim	/^function! airline#deprecation#check()$/;"	f
airline#extensions#append_to_section	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#init	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#bufferline#init	vim/bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#commandt#apply	vim/bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	vim/bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	vim/bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	vim/bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	vim/bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#default#apply	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#eclim#creat_line	vim/bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	vim/bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	vim/bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	vim/bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	vim/bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	vim/bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#hunks#get_hunks	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#load	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#prepend_to_section	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#quickfix#apply	vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#init	vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get_warnings	vim/bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warnings()$/;"	f
airline#extensions#syntastic#init	vim/bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#formatters#default	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^function! airline#extensions#tabline#formatters#default(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^function! airline#extensions#tabline#formatters#unique_tail(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr)$/;"	f
airline#extensions#tabline#init	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#title	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tagbar#currenttag	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#undotree#apply	vim/bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	vim/bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unite#apply	vim/bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	vim/bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#virtualenv#apply	vim/bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	vim/bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#whitespace#check	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#init	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#highlighter#add_accent	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes)$/;"	f
airline#highlighter#highlight_modified_inactive	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#init#bootstrap	vim/bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	vim/bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#parts#define	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	vim/bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#remove_statusline_func	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	vim/bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	vim/bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	vim/bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#base16#refresh	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#generate_color_map	vim/bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	vim/bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	vim/bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#jellybeans#refresh	vim/bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^function! airline#themes#jellybeans#refresh()$/;"	f
airline#themes#lucius#refresh	vim/bundle/vim-airline/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	vim/bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#patch	vim/bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#themes#solarized#refresh	vim/bundle/vim-airline/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	vim/bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	vim/bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	vim/bundle/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	vim/bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	vim/bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	vim/bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	vim/bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#wrap	vim/bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_theme	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
akey	vim/bundle/ultisnips/test.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	vim/bundle/ultisnips/test.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
all	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:all(f, xs)$/;"	f
all_exit	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:all_exit() "{{{$/;"	f
all_test_suites	vim/bundle/ultisnips/test.py	/^    all_test_suites = test_loader.loadTestsFromModule(__import__("test"))$/;"	v
am	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
and	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:and(xs)$/;"	f
answer	vim/bundle/vimproc/vest/test-socket.vim	/^  let answer = input('Want to execute socket test? ')$/;"	v
any	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:any(f, xs)$/;"	f
append	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
append	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
append	vim/bundle/unite.vim/plugin/unite/buffer.vim	/^function! s:append(path) "{{{$/;"	f
append	vim/bundle/unite.vim/plugin/unite/mru.vim	/^function! s:append(path) "{{{$/;"	f
append	vim/bundle/unite.vim/plugin/unite/window.vim	/^function! s:append() "{{{$/;"	f
append_log_file	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:append_log_file(msg)$/;"	f
apply_highlight_fix	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
apply_user_input_next	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
argparse	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^import argparse$/;"	i
args	vim/bundle/ultisnips/test.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	vim/bundle/ultisnips/test.py	/^    args = ""$/;"	v	class:_AnonBase
args	vim/bundle/ultisnips/test.py	/^    args = '".*test", "simple expand", "desc", "r"'$/;"	v	class:AddFunc_Opt
args	vim/bundle/ultisnips/test.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	vim/bundle/ultisnips/test.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	vim/bundle/ultisnips/test.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	vim/bundle/ultisnips/test.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	vim/bundle/ultisnips/test.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	vim/bundle/ultisnips/test.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	vim/bundle/ultisnips/test.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	vim/bundle/ultisnips/test.py	/^    args = '"test", "simple expand", "desc", ""'$/;"	v	class:AddFunc_Simple
args	vim/bundle/ultisnips/test.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	vim/bundle/ultisnips/test.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_unicode(s):$/;"	f
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_unicode(s):$/;"	f	function:_vim_enc
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.compatibility import compatible_exec, as_unicode$/;"	i
as_unicode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_vimencoding	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
as_vimencoding	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_vimencoding(s):$/;"	f
as_vimencoding	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_vimencoding(s):$/;"	f	function:_vim_enc
ask_user	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
assert_correct_indenting	vim/bundle/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(string)$/;"	f
assert_file_contents	vim/bundle/switch.vim/spec/support/vim.rb	/^    def assert_file_contents(string)$/;"	f	class:Support.Vim
attach_outline_buffer	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:attach_outline_buffer(buffer_id)$/;"	f
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = 'Vorne Hinten'$/;"	v	class:TestCheapDelete
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = 'Vorne hallo  Hinten'$/;"	v	class:TestRealLife1
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = 'hallo End t'$/;"	v	class:TestRealLife
b	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    b = 'n'$/;"	v	class:TestWithNewline
b:browsefilter	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:current_syntax	vim/bundle/hspec.vim/syntax/hspec.vim	/^let b:current_syntax = "hspec"$/;"	v
b:current_syntax	vim/bundle/neobundle.vim/syntax/vimrecipe.vim	/^let b:current_syntax = 'recipe'$/;"	v
b:current_syntax	vim/bundle/scss-syntax.vim/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	vim/bundle/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	vim/bundle/unite.vim/syntax/unite.vim	/^let b:current_syntax = 'unite'$/;"	v
b:current_syntax	vim/bundle/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	vim/bundle/vim-haskell/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	vim/bundle/vim-markdown/syntax/mkd.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	vim/bundle/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	vim/bundle/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:did_ftplugin	vim/bundle/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/bundle/vim-haskell/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/bundle/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/bundle/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:eruby_nest_level	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	vim/bundle/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:match_ignorecase	vim/bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	vim/bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:match_words	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	vim/bundle/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:switch_definitions	vim/bundle/switch.vim/examples/example_underscores.vim	/^let b:switch_definitions = [$/;"	v
b:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
backup	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bang	vim/bundle/vimproc/plugin/vimproc.vim	/^function! s:bang(cmdline) "{{{$/;"	f
bar	vim/bundle/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
base_snippet_files_for	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def base_snippet_files_for(self, ft, default=True):$/;"	m	class:SnippetManager
basename	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def basename(self):$/;"	m	class:SnippetUtil
beep	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	vim/bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	vim/bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
benchmark_start	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:benchmark_start()$/;"	f
benchmark_stop	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:benchmark_stop(start_time, num_lines)$/;"	f
best_winline	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:best_winline()$/;"	f
best_winline	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:best_winline() "{{{$/;"	f
break	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:break(f, xs)$/;"	f
buf	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^buf = VimBuffer()$/;"	v
buf	vim/bundle/vimproc/autoload/vimstack.c	/^    char *buf;   \/* stack bufffer *\/$/;"	m	struct:vp_stack_t	file:
buffer	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_bookmark_action.func	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:buffer_bookmark_action.func(candidate) "{{{$/;"	f
buffer_commit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_maps	vim/bundle/ultisnips/test.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	vim/bundle/ultisnips/test.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buffer_name	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buflisted	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
build_heading_pattern	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:build_heading_pattern(oinfo)$/;"	f
build_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path)$/;"	f
build_sections	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
build_vimproc_dll	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:build_vimproc_dll(cmd)$/;"	f
builtin_extract_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:builtin_extract_headings(context)$/;"	f
bundle	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let bundle = neobundle#parser#_init_bundle($/;"	v
bundle	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let bundle = neobundle#parser#fetch($/;"	v
bundle2	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let bundle2 = neobundle#parser#_init_bundle($/;"	v
byte2col	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
byte2col	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
byte2col	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
byte2col	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f	function:_vim_enc
c	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def c(self):$/;"	m	class:SnippetUtil
c	vim/bundle/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cache_dir_exists	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:cache_dir_exists()$/;"	f
cache_file_exists	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:cache_file_exists(path)$/;"	f
caching_from_neocomplcache_dict	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
caching_from_neocomplcache_dict	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
calc_signature	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:calc_signature(lnum, lines)$/;"	f
calc_word_distance	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:calc_word_distance(str1, str2, l1) "{{{$/;"	f
calc_word_distance_lua	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:calc_word_distance_lua(str1, str2, l1) "{{{$/;"	f
call_unite_buffer_dir	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_buffer_dir(args) "{{{$/;"	f
call_unite_current_dir	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_current_dir(args) "{{{$/;"	f
call_unite_cursor_word	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_cursor_word(args) "{{{$/;"	f
call_unite_empty	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_empty(args) "{{{$/;"	f
call_unite_input	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_input(args) "{{{$/;"	f
call_unite_input_directory	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_input_directory(args) "{{{$/;"	f
call_unite_resume	vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_resume(args) "{{{$/;"	f
candidates	vim/bundle/unite.vim/vest/test-source.vim	/^    let candidates = unite#get_candidates($/;"	v
candidates	vim/bundle/unite.vim/vest/test-source.vim	/^    let candidates = unite#get_candidates([$/;"	v
candidates	vim/bundle/unite.vim/vest/test-source.vim	/^    let candidates = unite#get_candidates(['file_mru'])$/;"	v
cdable_action_file.func	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:cdable_action_file.func(candidate)$/;"	f
cdable_action_rec.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec.func(candidate)$/;"	f
cdable_action_rec_async.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_async.func(candidate)$/;"	f
cdable_action_rec_parent.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent.func(candidate)$/;"	f
cdable_action_rec_parent_async.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent_async.func(candidate)$/;"	f
cdable_action_rec_project.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project.func(candidate)$/;"	f
cdable_action_rec_project_async.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project_async.func(candidate)$/;"	f
change_highlight	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:change_highlight()  "{{{$/;"	f
changesurround	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_range	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
check_copy_func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_copy_func(filename) "{{{$/;"	f
check_defined	vim/bundle/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_delete_func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_delete_func(filename) "{{{$/;"	f
check_external_commands	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:check_external_commands(bundle) "{{{$/;"	f
check_in_path	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:check_in_path()$/;"	f
check_is_directory	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:check_is_directory(directory)$/;"	f
check_old_cache	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_output	vim/bundle/ultisnips/test.py	/^    def check_output(self):$/;"	m	class:_VimTest
check_over_write	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_over_write(dest_dir, filename, overwrite_method, is_reset_method) "{{{$/;"	f
check_really_clean	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:check_really_clean(dirs)$/;"	f
check_redraw	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:check_redraw() "{{{$/;"	f
check_version	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:check_version(min_version) "{{{$/;"	f
chomp	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
choose	vim/colors/vividchalk.vim	/^function! s:choose(mediocre,good)$/;"	f
choose_action	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
chop	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
cleandir	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:cleandir(path)$/;"	f
cleanup_all_cache_files	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:cleanup_all_cache_files()$/;"	f
cleanup_cache_files	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:cleanup_cache_files(...)$/;"	f
clear	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	vim/bundle/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear_bundles	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^function! s:clear_bundles(names)$/;"	f
clear_marks	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:clear_marks(candidates) "{{{$/;"	f
clear_previewed_buffer_list	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:clear_previewed_buffer_list() "{{{$/;"	f
clear_signs	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:clear_signs(file_name)$/;"	f
clear_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def clear_snippets(self, triggers = [], ft = "all"):$/;"	m	class:SnippetManager
clear_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def clear_snippets(self, triggers=[]):$/;"	m	class:_SnippetDictionary
client	vim/bundle/ultisnips/test.py	/^        import win32com.client, win32gui$/;"	i
close	vim/bundle/vimproc/autoload/proc_w32.c	/^#define close /;"	d	file:
close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
close_all	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:close_all(self) "{{{$/;"	f
closed_fdopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) "{{{$/;"	f
closematch	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	vim/bundle/vimproc/vest/test-popen.vim	/^  let cmd = 'ls'$/;"	v
cmd	vim/bundle/vimproc/vest/test-popen.vim	/^  let cmd = ['ls', '-la']$/;"	v
cmd.close	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.close() "{{{$/;"	f
cmd.open	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.open() "{{{$/;"	f
cmd.system	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) "{{{$/;"	f
cnt	vim/bundle/vimproc/tools/benchmark.vim	/^let cnt = 25$/;"	v
coffee#CoffeeSetUpErrorFormat	vim/bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	vim/bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    col = property(**col())$/;"	v	class:Position
col	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def col():$/;"	m	class:Position
col2byte	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
col2byte	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
col2byte	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f	function:_vim_enc
color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
colors	vim/bundle/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors_name	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	vim/colors/github.vim	/^let colors_name="github"$/;"	v
colors_name	vim/colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	vim/colors/vividchalk.vim	/^let colors_name = "vividchalk"$/;"	v
colors_name	vim/colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
command	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def command(s):$/;"	f
command	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command_in_directory_of_file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:command_in_directory_of_file(cmd)$/;"	f
comment-quote-nested	emacs.d/sml-mode/sml-mode.el	/^(defvar comment-quote-nested)$/;"	f
common_head	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:common_head(strs)$/;"	f
comp_bundle	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^function! s:comp_bundle(bundle1, bundle2)$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:compare(a, b)$/;"	f
compare	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare_by_lnum	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:compare_by_lnum(d1, d2)$/;"	f
compare_pos	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
compare_word	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:compare_word(i1, i2)$/;"	f
compatible_exec	vim/bundle/ultisnips/plugin/UltiSnips/compatibility_py2.py	/^def compatible_exec(code, gglobals = None, glocals = None):$/;"	f
compatible_exec	vim/bundle/ultisnips/plugin/UltiSnips/compatibility_py3.py	/^compatible_exec = exec$/;"	v
compatible_exec	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.compatibility import compatible_exec, as_unicode$/;"	i
compilation-error-regexp-alist	emacs.d/sml-mode/sml-mode.el	/^(defvar compilation-error-regexp-alist)$/;"	f
complete_bookmark_filename	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:complete_bookmark_filename(arglead, cmdline, cursorpos) "{{{$/;"	f
concat	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:concat(list)$/;"	f
conj	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
cons	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
conserve	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
contains_multibyte	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:contains_multibyte(str) "{{{$/;"	f
contents	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
conv	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f	function:escape
convert2candidates	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:convert2candidates(items)  "{{{$/;"	f
convert2candidates	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! s:convert2candidates(items)  "{{{$/;"	f
convert2dictionary	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:convert2dictionary(list)  "{{{$/;"	f
convert2dictionary	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! s:convert2dictionary(list)  "{{{$/;"	f
convert2list	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:convert2list(dict)  "{{{$/;"	f
convert2list	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! s:convert2list(dict)  "{{{$/;"	f
convert2script_type	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:convert2script_type(type) "{{{$/;"	f
convert2script_type	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^function! s:convert2script_type(type) "{{{$/;"	f
convert_args	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:convert_args(args) "{{{$/;"	f
convert_headings_to_candidates	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:convert_headings_to_candidates(headings, bufnr)$/;"	f
convert_keys	vim/bundle/ultisnips/test.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
convert_snippet	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet(source):$/;"	f
convert_snippet_contents	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet_contents(content):$/;"	f
convert_snippet_file	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet_file(source):$/;"	f
convert_snippets	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippets(source):$/;"	f
convert_to_abbr	vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:convert_to_abbr(path)$/;"	f
convert_vim_scripts_data	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:convert_vim_scripts_data(data) "{{{$/;"	f
convert_vim_scripts_data	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^function! s:convert_vim_scripts_data(data) "{{{$/;"	f
converter	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:converter(candidates, context) "{{{$/;"	f
converter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:converter(candidates, filename_format, time_format) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
copy	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:copy(src, dest) "{{{$/;"	f
copy	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
copy_bundle_files	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:copy_bundle_files(bundles, directory)$/;"	f
copy_exe	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:copy_exe(src, dest)$/;"	f
copy_vim	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:copy_vim(src, dest) "{{{$/;"	f
could_match	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def could_match(self, trigger):$/;"	m	class:Snippet
cr	vim/bundle/supertab/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
create	vim/bundle/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_candidate	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:create_candidate(heading, path)$/;"	f
create_context	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:create_context(bufnr, ...)$/;"	f
create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:create_heading(tag, context)$/;"	f
create_pseudo_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:create_pseudo_heading(tag)$/;"	f
create_tag	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:create_tag(tag_line, lang_info)$/;"	f
cs	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
current_compiler	vim/bundle/vim-coffee-script/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	vim/bundle/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	vim/bundle/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	vim/bundle/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	vim/bundle/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	vim/bundle/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:current_file()$/;"	f
current_line_splitted	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def current_line_splitted(self):$/;"	m	class:VimBuffer
current_text	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    cursor = property(**cursor())$/;"	v	class:VimBuffer
cursor	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def cursor():$/;"	m	class:VimBuffer
cursor_moved	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def cursor_moved(self):$/;"	m	class:SnippetManager
custom_base	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! s:custom_base(key, kind, name, value) "{{{$/;"	f
debug	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^def debug(s):$/;"	f
debug	vim/bundle/vimproc/autoload/proc.c	/^const int debug = 0;$/;"	v
debug	vim/bundle/vimproc/autoload/proc_w32.c	/^const int debug = 0;$/;"	v
dedent	vim/bundle/ultisnips/test.py	/^from textwrap import dedent$/;"	i
default_options_save	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let default_options_save = g:neobundle#default_options$/;"	v
defaultdict	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from collections import deque, defaultdict$/;"	i
defaultdict	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^from collections import defaultdict$/;"	i
define_commands	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
define_filetype_aliases	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:define_filetype_aliases(aliases, ftype)$/;"	f
define_highlights	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_highlights()$/;"	f
define_sign_column_highlight	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_sign_column_highlight()$/;"	f
define_sign_line_highlights	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_sign_line_highlights()$/;"	f
define_sign_symbols	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_sign_symbols()$/;"	f
define_sign_text_highlights	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_sign_text_highlights()$/;"	f
define_signs	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:define_signs()$/;"	f
delete	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:delete(delete_command, candidate) "{{{$/;"	f
delete	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
delete_backward_path	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:delete_backward_path() "{{{$/;"	f
deletefile	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
deque	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from collections import deque, defaultdict$/;"	i
description	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def description(self):$/;"	m	class:Snippet
detain_winsock	vim/bundle/vimproc/autoload/proc_w32.c	/^detain_winsock()$/;"	f	file:
detect_bad_input	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
detect_parsing	vim/bundle/ultisnips/test.py	/^    def detect_parsing(self):$/;"	m	class:VimInterfaceScreen
determine_home_dir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_source_directory	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
did_UltiSnips_snipmate_compatibility	vim/bundle/ultisnips/plugin/snipMate_compatibility.vim	/^let did_UltiSnips_snipmate_compatibility = 1$/;"	v
did_UltiSnips_vim	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^let did_UltiSnips_vim=1$/;"	v
did_UltiSnips_vim_after	vim/bundle/ultisnips/after/plugin/UltiSnips_after.vim	/^let did_UltiSnips_vim_after=1$/;"	v
did_hs_syntax_inits	vim/bundle/vim-haskell/syntax/haskell.vim	/^    let did_hs_syntax_inits = 1$/;"	v
diff	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
diff	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def diff(a, b, sline = 0):$/;"	f
diff	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def diff(self,pos):$/;"	m	class:Position
diff	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
diff_in_buffer_length	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
diff_restore	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore()$/;"	f
diff_window_count	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
differences	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:differences(hunks)$/;"	f
diffidx	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
diffoff	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
digest_line	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:digest_line(line)$/;"	f
dir_mru_source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:dir_mru_source.action_table.delete.func(candidates) "{{{$/;"	f
dir_mru_source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:dir_mru_source.gather_candidates(args, context) "{{{$/;"	f
dir_mru_source.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:dir_mru_source.hooks.on_post_filter(args, context) "{{{$/;"	f
dir_mru_source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:dir_mru_source.hooks.on_syntax(args, context) "{{{$/;"	f
dir_mru_source.source__converter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:dir_mru_source.source__converter(candidates, context) "{{{$/;"	f
directory_mru.validate	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:directory_mru.validate()  "{{{$/;"	f
directory_of_file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:directory_of_file()$/;"	f
dirname	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
dirname	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
dirname	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:dirname(path)$/;"	f
disable_max_candidates	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:disable_max_candidates() "{{{$/;"	f
discard_stdout_and_stderr	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:discard_stdout_and_stderr()$/;"	f
display_error	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
dll_version	vim/bundle/vimproc/autoload/vimproc.vim	/^  let dll_version = vimproc#dll_version()$/;"	v
do_new_candidate_action	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:do_new_candidate_action() "{{{$/;"	f
do_unmapping	vim/bundle/ultisnips/test.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	vim/bundle/ultisnips/test.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
dosurround	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dprint	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
ds	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:dstring(expr)$/;"	f
dump_filename	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^        else "C:\/windows\/temp\/ultisnips.txt"$/;"	v
echo_to_hierarchy	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^def echo_to_hierarchy(to):$/;"	f
emmet#CompleteTag	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#CompleteTag(findstart, base)$/;"	f
emmet#ExpandWord	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#ExpandWord(abbr, type, orig)$/;"	f
emmet#anchorizeURL	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag)$/;"	f
emmet#balanceTag	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range$/;"	f
emmet#codePretty	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#codePretty() range$/;"	f
emmet#encodeImage	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#encodeImage()$/;"	f
emmet#expandAbbr	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range$/;"	f
emmet#expandCursorExpr	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode)$/;"	f
emmet#expandDollarExpr	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand)$/;"	f
emmet#getBaseType	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getBaseType(type)$/;"	f
emmet#getDollarExprs	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand)$/;"	f
emmet#getDollarValueByKey	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key)$/;"	f
emmet#getExpandos	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key)$/;"	f
emmet#getFileType	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getFileType(...)$/;"	f
emmet#getFilters	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getFilters(type)$/;"	f
emmet#getIndentation	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getIndentation(...)$/;"	f
emmet#getResource	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default)$/;"	f
emmet#getSettings	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getSettings()$/;"	f
emmet#getSnippets	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#getSnippets(type)$/;"	f
emmet#imageSize	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#imageSize()$/;"	f
emmet#isExtends	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend)$/;"	f
emmet#lang#css#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range$/;"	f
emmet#lang#css#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage()$/;"	f
emmet#lang#css#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str)$/;"	f
emmet#lang#css#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize()$/;"	f
emmet#lang#css#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag)$/;"	f
emmet#lang#css#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type)$/;"	f
emmet#lang#css#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag)$/;"	f
emmet#lang#css#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag()$/;"	f
emmet#lang#css#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag()$/;"	f
emmet#lang#css#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#css#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment()$/;"	f
emmet#lang#exists	vim/bundle/Emmet.vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type)$/;"	f
emmet#lang#haml#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range$/;"	f
emmet#lang#haml#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage()$/;"	f
emmet#lang#haml#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str)$/;"	f
emmet#lang#haml#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize()$/;"	f
emmet#lang#haml#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag)$/;"	f
emmet#lang#haml#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type)$/;"	f
emmet#lang#haml#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag)$/;"	f
emmet#lang#haml#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag()$/;"	f
emmet#lang#haml#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag()$/;"	f
emmet#lang#haml#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#haml#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment()$/;"	f
emmet#lang#html#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range$/;"	f
emmet#lang#html#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage()$/;"	f
emmet#lang#html#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str)$/;"	f
emmet#lang#html#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize()$/;"	f
emmet#lang#html#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag)$/;"	f
emmet#lang#html#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type)$/;"	f
emmet#lang#html#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag)$/;"	f
emmet#lang#html#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag()$/;"	f
emmet#lang#html#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag()$/;"	f
emmet#lang#html#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#html#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment()$/;"	f
emmet#lang#sass#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range$/;"	f
emmet#lang#sass#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage()$/;"	f
emmet#lang#sass#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str)$/;"	f
emmet#lang#sass#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize()$/;"	f
emmet#lang#sass#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag)$/;"	f
emmet#lang#sass#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type)$/;"	f
emmet#lang#sass#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag)$/;"	f
emmet#lang#sass#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag()$/;"	f
emmet#lang#sass#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag()$/;"	f
emmet#lang#sass#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#sass#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment()$/;"	f
emmet#lang#scss#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range$/;"	f
emmet#lang#scss#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage()$/;"	f
emmet#lang#scss#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str)$/;"	f
emmet#lang#scss#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize()$/;"	f
emmet#lang#scss#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag)$/;"	f
emmet#lang#scss#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type)$/;"	f
emmet#lang#scss#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag)$/;"	f
emmet#lang#scss#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag()$/;"	f
emmet#lang#scss#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag()$/;"	f
emmet#lang#scss#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#scss#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment()$/;"	f
emmet#lang#slim#balanceTag	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range$/;"	f
emmet#lang#slim#encodeImage	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage()$/;"	f
emmet#lang#slim#findTokens	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str)$/;"	f
emmet#lang#slim#imageSize	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize()$/;"	f
emmet#lang#slim#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag)$/;"	f
emmet#lang#slim#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type)$/;"	f
emmet#lang#slim#parseTag	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag)$/;"	f
emmet#lang#slim#removeTag	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag()$/;"	f
emmet#lang#slim#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag()$/;"	f
emmet#lang#slim#toString	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
emmet#lang#slim#toggleComment	vim/bundle/Emmet.vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment()$/;"	f
emmet#lorem#en#expand	vim/bundle/Emmet.vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command)$/;"	f
emmet#lorem#ja#expand	vim/bundle/Emmet.vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command)$/;"	f
emmet#mergeConfig	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs)$/;"	f
emmet#mergeLines	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#mergeLines() range$/;"	f
emmet#moveNextPrev	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag)$/;"	f
emmet#parseIntoTree	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type)$/;"	f
emmet#reExpandDollarExpr	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times)$/;"	f
emmet#removeTag	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#removeTag()$/;"	f
emmet#splitFilterArg	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters)$/;"	f
emmet#splitJoinTag	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#splitJoinTag()$/;"	f
emmet#toString	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#toString(...)$/;"	f
emmet#toggleComment	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#toggleComment()$/;"	f
emmet#unescapeDollarExpr	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand)$/;"	f
emmet#useFilter	vim/bundle/Emmet.vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter)$/;"	f
emmet#util#cache	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...)$/;"	f
emmet#util#cursorInRegion	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region)$/;"	f
emmet#util#deleteContent	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region)$/;"	f
emmet#util#getContent	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region)$/;"	f
emmet#util#getContentFromURL	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url)$/;"	f
emmet#util#getImageSize	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn)$/;"	f
emmet#util#getTextFromHTML	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf)$/;"	f
emmet#util#getVisualBlock	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock()$/;"	f
emmet#util#imageSizeWithImageMagick	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn)$/;"	f
emmet#util#isImageMagickInstalled	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled()$/;"	f
emmet#util#pointInRegion	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region)$/;"	f
emmet#util#rand	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#rand()$/;"	f
emmet#util#regionInRegion	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner)$/;"	f
emmet#util#regionIsValid	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region)$/;"	f
emmet#util#searchRegion	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end)$/;"	f
emmet#util#selectRegion	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region)$/;"	f
emmet#util#setContent	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content)$/;"	f
emmet#util#srand	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed)$/;"	f
emmet#util#unique	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr)$/;"	f
encode_file_path	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:encode_file_path(path)$/;"	f
end	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
end	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    end = property(end)$/;"	v	class:TextObject
end_latency_measure	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
eq_	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^from nose.tools import eq_$/;"	i
err_to_scratch_buffer	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^def err_to_scratch_buffer(f):$/;"	f
errmsg_save	vim/bundle/vimproc/vest/test-functions.vim	/^    let errmsg_save = v:exception$/;"	v
error	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^from vim import error$/;"	i
escape	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:escape(str)$/;"	f
escape_file_searching	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_pattern	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
eval	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def eval(s):$/;"	f
events	vim/bundle/vimproc/autoload/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd
exec_separator	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
execute_command	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:execute_command(command, candidate) "{{{$/;"	f
execute_ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:execute_ctags(context)$/;"	f
existing	vim/bundle/supertab/plugin/supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
exists_file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:exists_file()$/;"	f
exit	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:exit() "{{{$/;"	f
exit	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
exit_visual_mode	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
expand	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:expand(path)$/;"	f
expand	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand_anon(self, value, trigger="", descr="", options="", globals=None):$/;"	m	class:SnippetManager
expand_or_jump	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expand_path	vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^  function! s:expand_path(path)$/;"	f
expected_error	vim/bundle/ultisnips/test.py	/^    expected_error = ""$/;"	v	class:_VimTest
expr_map	vim/bundle/supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	vim/bundle/supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	vim/bundle/supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
ext.add_inactive_statusline_func	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
extend_actions	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:extend_actions(self_func, action_table1, action_table2, ...) "{{{$/;"	f
extends	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def extends():$/;"	m	class:_SnippetDictionary
extends	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    extends = property(**extends())$/;"	v	class:_SnippetDictionary
external	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:external(command, dest_dir, src_files) "{{{$/;"	f
external_cd	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:external_cd(candidate) "{{{$/;"	f
extract_filetype_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:extract_filetype_headings(context)$/;"	f
extract_folding_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:extract_folding_headings(context)$/;"	f
extract_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:extract_headings(context)$/;"	f
extractafter	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
fast_flatten	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:fast_flatten(node)$/;"	f
fd	vim/bundle/vimproc/autoload/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd
fdopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pgroup	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pipes	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pty	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) "{{{$/;"	f
feedkeys	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def feedkeys(s, mode='n'):$/;"	f
feedkeys	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
fetch_snippets_from_dir	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
fget	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def fget(self):$/;"	f	function:_SnippetDictionary.extends
fget	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        def fget(self):$/;"	f	function:VimBuffer.cursor
fget	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fget(self):$/;"	f	function:Position.col
fget	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fget(self):$/;"	f	function:Position.line
fget	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        def fget(self):$/;"	f	function:SnippetUtil.rv
file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:file()$/;"	f
file	vim/bundle/vimproc/vest/test-fopen.vim	/^  let file = vimproc#fopen(filename, 'O_RDONLY', 0)$/;"	v
file_bookmark_action.func	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:file_bookmark_action.func(candidate) "{{{$/;"	f
file_contents	vim/bundle/switch.vim/spec/support/vim.rb	/^    def file_contents$/;"	f	class:Support.Vim
file_mru.validate	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru.validate()  "{{{$/;"	f
file_mru_source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru_source.action_table.delete.func(candidates) "{{{$/;"	f
file_mru_source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru_source.gather_candidates(args, context) "{{{$/;"	f
file_mru_source.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru_source.hooks.on_post_filter(args, context) "{{{$/;"	f
file_mru_source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru_source.hooks.on_syntax(args, context) "{{{$/;"	f
file_mru_source.source__converter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:file_mru_source.source__converter(candidates, context) "{{{$/;"	f
file_to_edit	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def file_to_edit(self, ft):$/;"	m	class:SnippetManager
filename	vim/bundle/switch.vim/spec/plugin/regression_spec.rb	/^    def filename$/;"	f
filename	vim/bundle/vimproc/vest/test-fopen.vim	/^  let filename = expand('<sfile>')$/;"	v
filename2candidate	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:filename2candidate(filename) "{{{$/;"	f
filereadable	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
files	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def files(self):$/;"	m	class:_SnippetDictionary
filter_alias_action	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_alias_action(action_table, alias_table, from) "{{{$/;"	f
filter_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:filter_headings(headings, ignore_types)$/;"	f
filter_self_func	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_self_func(action_table, self_func) "{{{$/;"	f
finalize	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:finalize()$/;"	f
find	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
find_exuberant_ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:find_exuberant_ctags()$/;"	f
find_loadable_func	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:find_loadable_func(ftype, paths)$/;"	f
find_next	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
find_other_signs	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:find_other_signs(file_name)$/;"	f
find_outline_buffers	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:find_outline_buffers(src_bufnr)$/;"	f
find_parent_for_new_to	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_target_directory	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
finder	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
fixindent	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixup	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f	function:unescape
flatten	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
fn	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def fn(self):$/;"	m	class:SnippetUtil
fnameescape	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	vim/bundle/ultisnips/test.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
focus	vim/bundle/ultisnips/test.py	/^    def focus(title=None):$/;"	m	class:VimInterface
foldl	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
font-lock-command-face	emacs.d/sml-mode/sml-mode.el	/^(defface font-lock-command-face$/;"	f
font-lock-command-face	emacs.d/sml-mode/sml-mode.el	/^(defvar font-lock-command-face 'font-lock-command-face$/;"	f
font-lock-interface-def-face	emacs.d/sml-mode/sml-mode.el	/^(defface font-lock-interface-def-face$/;"	f
font-lock-interface-def-face	emacs.d/sml-mode/sml-mode.el	/^(defvar font-lock-interface-def-face 'font-lock-interface-def-face$/;"	f
font-lock-module-def-face	emacs.d/sml-mode/sml-mode.el	/^(defface font-lock-module-def-face$/;"	f
font-lock-module-def-face	emacs.d/sml-mode/sml-mode.el	/^(defvar font-lock-module-def-face 'font-lock-module-def-face$/;"	f
font-lock-prompt-face	emacs.d/sml-mode/sml-mode.el	/^(defface font-lock-prompt-face$/;"	f
font-lock-prompt-face	emacs.d/sml-mode/sml-mode.el	/^(defvar font-lock-prompt-face 'font-lock-prompt-face$/;"	f
font-lock-type-def-face	emacs.d/sml-mode/sml-mode.el	/^(defface font-lock-type-def-face$/;"	f
font-lock-type-def-face	emacs.d/sml-mode/sml-mode.el	/^(defvar font-lock-type-def-face 'font-lock-type-def-face$/;"	f
foo	vim/bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	vim/bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
forkpty	vim/bundle/vimproc/autoload/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f
format_time	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:format_time(time) "{{{$/;"	f
formatter.filter	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^function! s:formatter.filter(candidates, unite_context)$/;"	f
fset	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def fset(self, value):$/;"	f	function:_SnippetDictionary.extends
fset	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        def fset(self, pos):$/;"	f	function:VimBuffer.cursor
fset	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fset(self, value):$/;"	f	function:Position.col
fset	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fset(self, value):$/;"	f	function:Position.line
fset	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        def fset(self, value):$/;"	f	function:SnippetUtil.rv
ft	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def ft(self):$/;"	m	class:SnippetUtil
fugitive	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#detect	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path)$/;"	f
fugitive#extract_git_dir	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_version	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...)$/;"	f
fugitive#is_git_dir	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
funcref	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:funcref(funcname)$/;"	f
function	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g%	vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	vim/bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:AutoClosePairs	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^    let g:AutoClosePairs = s:ModifyPairsList($/;"	v
g:AutoClosePreserveDotReg	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^    let g:AutoClosePreserveDotReg = 1$/;"	v
g:SuperTabClosePreviewOnPopupClose	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	vim/bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	vim/bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:UltiSnipsEditSplit	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsExpandTrigger	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpForwardTrigger	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsListSnippets	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsUsePythonVersion	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsUsePythonVersion = "<tab>"$/;"	v
g:_uspy	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^        let g:_uspy=":py "$/;"	v
g:_uspy	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^        let g:_uspy=":py3 "$/;"	v
g:_uspy	vim/bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:_uspy=":py3 "$/;"	v
g:airline#extensions#default#layout	vim/bundle/vim-airline/t/extensions_default.vim	/^    let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	vim/bundle/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#quickfix#location_text	vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#jellybeans#palette	vim/bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = copy(airline#themes#laederon#palette.insert)$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = g:airline#themes#laederon#palette.insert_modified$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	vim/bundle/vim-airline/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = copy(g:airline#themes#molokai#palette.insert)$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace.airline_a = [ s:I1[0]   , '#ef5939' , s:I1[2] , 166     , ''     ]$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	vim/bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', s:alert, s:termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', s:alert, s:termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': ['#AFAF87', '#5f005f', s:alert, s:termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', s:alert, s:termbg2, 'bold'] ,}$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	vim/bundle/vim-airline/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#tomorrow#palette	vim/bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = copy(airline#themes#ubaryd#palette.insert)$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = g:airline#themes#ubaryd#palette.insert_modified$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	vim/bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline_inactive_collapse	vim/bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	vim/bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	vim/bundle/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	vim/bundle/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	vim/bundle/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	vim/bundle/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	vim/bundle/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	vim/bundle/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	vim/bundle/vim-airline/t/extensions_default.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	vim/bundle/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:colors_name	vim/bundle/molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	vim/colors/codeschool.vim	/^let g:colors_name = "Code School 3"$/;"	v
g:colors_name	vim/colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:colors_name	vim/colors/grb4.vim	/^let g:colors_name = "grb4"$/;"	v
g:colors_name	vim/colors/railscasts.vim	/^let g:colors_name = "railscasts"$/;"	v
g:colors_name	vim/colors/toychest.vim	/^let g:colors_name = "toychest"$/;"	v
g:colors_name	vim/colors/vimbrant.vim	/^let g:colors_name="vimbrant"$/;"	v
g:count	vim/bundle/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:did_ruby_ftplugin_functions	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:emmet_curl_command	vim/bundle/Emmet.vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	vim/bundle/Emmet.vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:eruby_default_subtype	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_git_executable	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:haskell_indent_case	vim/bundle/vim-haskell/indent/haskell.vim	/^    let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_if	vim/bundle/vim-haskell/indent/haskell.vim	/^    let g:haskell_indent_if = 2$/;"	v
g:indent_guides_auto_colors	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:jellybeans_background_color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  let g:jellybeans_background_color = "151515"$/;"	v
g:jellybeans_background_color_256	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  let g:jellybeans_background_color_256=233$/;"	v
g:loaded_AutoClose	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^let g:loaded_AutoClose = 1$/;"	v
g:loaded_airline	vim/bundle/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_commentary	vim/bundle/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_emmet_vim	vim/bundle/Emmet.vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_matchtagalways	vim/bundle/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:loaded_matchtagalways = 1$/;"	v
g:loaded_neobundle	vim/bundle/neobundle.vim/plugin/neobundle.vim	/^let g:loaded_neobundle = 1$/;"	v
g:loaded_repeat	vim/bundle/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_surround	vim/bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_switch	vim/bundle/switch.vim/plugin/switch.vim	/^let g:loaded_switch = '0.1.1' " version number$/;"	v
g:loaded_tmux_navigator	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let g:loaded_tmux_navigator = 1$/;"	v
g:loaded_togglebg	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_tslime	vim/bundle/tslime.vim/plugin/tslime.vim	/^let g:loaded_tslime = 1$/;"	v
g:loaded_unite	vim/bundle/unite.vim/plugin/unite.vim	/^let g:loaded_unite = 1$/;"	v
g:loaded_unite_source_bookmark	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let g:loaded_unite_source_bookmark = 1$/;"	v
g:loaded_unite_source_buffer	vim/bundle/unite.vim/plugin/unite/buffer.vim	/^let g:loaded_unite_source_buffer = 1$/;"	v
g:loaded_unite_source_history_yank	vim/bundle/unite.vim/plugin/unite/history_yank.vim	/^let g:loaded_unite_source_history_yank = 1$/;"	v
g:loaded_unite_source_mru	vim/bundle/unite.vim/plugin/unite/mru.vim	/^let g:loaded_unite_source_mru = 1$/;"	v
g:loaded_unite_source_window	vim/bundle/unite.vim/plugin/unite/window.vim	/^let g:loaded_unite_source_window = 1$/;"	v
g:loaded_vimproc	vim/bundle/vimproc/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:mta_filetypes	vim/bundle/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_filetypes =$/;"	v
g:mta_set_default_matchtag_color	vim/bundle/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_set_default_matchtag_color =$/;"	v
g:mta_use_matchparen_group	vim/bundle/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_use_matchparen_group =$/;"	v
g:multi_cursor_start_key	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^  let g:multi_cursor_start_key = g:multi_cursor_next_key$/;"	v
g:neobundle#default_options	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let g:neobundle#default_options = default_options_save$/;"	v
g:neobundle#default_options	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let g:neobundle#default_options =$/;"	v
g:neobundle#enable_name_conversion	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let g:neobundle#enable_name_conversion = 0$/;"	v
g:neobundle#enable_name_conversion	vim/bundle/neobundle.vim/vest/test-parse.vim	/^    let g:neobundle#enable_name_conversion = 1$/;"	v
g:neobundle#enable_name_conversion	vim/bundle/neobundle.vim/vest/test-parse.vim	/^  let g:neobundle#enable_name_conversion = 0$/;"	v
g:neobundle#types#git#default_protocol	vim/bundle/neobundle.vim/vest/test-parse.vim	/^  let g:neobundle#types#git#default_protocol = 'git'$/;"	v
g:neobundle#types#hg#default_protocol	vim/bundle/neobundle.vim/vest/test-parse.vim	/^  let g:neobundle#types#hg#default_protocol = 'https'$/;"	v
g:repeat_reg	vim/bundle/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	vim/bundle/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:ruby_default_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	vim/bundle/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_version_paths	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:snips_author	vim/bundle/ultisnips/plugin/snipMate_compatibility.vim	/^	let g:snips_author = "John Doe"$/;"	v
g:switch_builtins	vim/bundle/switch.vim/plugin/switch.vim	/^let g:switch_builtins =$/;"	v
g:switch_definitions	vim/bundle/switch.vim/examples/example_multibyte.vim	/^let g:switch_definitions = [['a', 'b'], ['否', '是']]$/;"	v
g:switch_definitions	vim/bundle/switch.vim/plugin/switch.vim	/^let g:switch_definitions =$/;"	v
g:tabular_default_format	vim/bundle/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	vim/bundle/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:unite_abbr_highlight	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_abbr_highlight =$/;"	v
g:unite_candidate_icon	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_candidate_icon =$/;"	v
g:unite_cursor_line_highlight	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_cursor_line_highlight =$/;"	v
g:unite_data_directory	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_data_directory =$/;"	v
g:unite_enable_ignore_case	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_enable_ignore_case =$/;"	v
g:unite_enable_short_source_names	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_enable_short_source_names =$/;"	v
g:unite_enable_smart_case	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_enable_smart_case =$/;"	v
g:unite_enable_split_vertically	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_enable_split_vertically =$/;"	v
g:unite_enable_start_insert	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_enable_start_insert =$/;"	v
g:unite_force_overwrite_statusline	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_force_overwrite_statusline =$/;"	v
g:unite_ignore_source_files	vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_ignore_source_files =$/;"	v
g:unite_kind_jump_list_after_jump_scroll	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll = 25$/;"	v
g:unite_kind_jump_list_after_jump_scroll	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll =$/;"	v
g:unite_marked_icon	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_marked_icon =$/;"	v
g:unite_prompt	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_prompt =$/;"	v
g:unite_quick_match_table	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_quick_match_table =$/;"	v
g:unite_source_outline_cache_limit	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_cache_limit = 1000$/;"	v
g:unite_source_outline_filetype_options	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_filetype_options = {}$/;"	v
g:unite_source_outline_highlight	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_highlight = {}$/;"	v
g:unite_source_outline_indent_width	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_indent_width = 2$/;"	v
g:unite_source_outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_info = {}$/;"	v
g:unite_source_outline_max_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_max_headings = 1000$/;"	v
g:unite_source_outline_verbose	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  let g:unite_source_outline_verbose = 0$/;"	v
g:unite_split_rule	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_split_rule =$/;"	v
g:unite_update_time	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_update_time =$/;"	v
g:unite_winheight	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_winheight =$/;"	v
g:unite_winwidth	vim/bundle/unite.vim/plugin/unite.vim	/^let g:unite_winwidth =$/;"	v
g:user_emmet_leader_key	vim/bundle/Emmet.vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:vim_markdown_initial_foldlevel	vim/bundle/vim-markdown/after/ftplugin/mkd.vim	/^    let g:vim_markdown_initial_foldlevel=0$/;"	v
g:vimproc#SIGABRT	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGABRT = 6$/;"	v
g:vimproc#SIGALRM	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGALRM = 14$/;"	v
g:vimproc#SIGCHLD	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGCHLD = 17$/;"	v
g:vimproc#SIGCONT	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGCONT = 18$/;"	v
g:vimproc#SIGFPE	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGFPE = 8$/;"	v
g:vimproc#SIGILL	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGILL = 4$/;"	v
g:vimproc#SIGINT	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGINT = 2$/;"	v
g:vimproc#SIGKILL	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGKILL = 9$/;"	v
g:vimproc#SIGPIPE	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGPIPE = 13$/;"	v
g:vimproc#SIGQUIT	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGQUIT = 3$/;"	v
g:vimproc#SIGSEGV	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGSEGV = 11$/;"	v
g:vimproc#SIGSTOP	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGSTOP = 19$/;"	v
g:vimproc#SIGTERM	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGTERM = 15$/;"	v
g:vimproc#SIGTSTP	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGTSTP = 20$/;"	v
g:vimproc#SIGTTIN	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGTTIN = 21$/;"	v
g:vimproc#SIGTTOU	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGTTOU = 22$/;"	v
g:vimproc#SIGUSR1	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGUSR1 = 10$/;"	v
g:vimproc#SIGUSR2	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGUSR2 = 12$/;"	v
g:vimproc#SIGWINCH	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#SIGWINCH = 28$/;"	v
g:vimproc#dll_path	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	vim/bundle/vimproc/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
g<C-]>	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
garbage_collect	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) "{{{$/;"	f
gc	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gcc	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	vim/bundle/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>CommentaryUndo$/;"	m
gen	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^  def gen( column ):$/;"	f	function:LocationsOfEnclosingTags_CursorInTagFull_test
gen	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^  def gen( column ):$/;"	f	function:LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_SID()$/;"	f
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^function! s:get_SID()$/;"	f
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:get_SID()$/;"	f
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:get_SID()$/;"	f
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:get_SID()$/;"	f
get_SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:get_SID()$/;"	f
get_action_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_action_table(source_name, kind_name, self_func, is_parents_action, source_table) "{{{$/;"	f
get_actions	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:get_actions(candidates, sources) "{{{$/;"	f
get_airline_themes	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_alias_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_alias_table(source_name, kind_name, source_table) "{{{$/;"	f
get_array	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_buffer_data	vim/bundle/ultisnips/test.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_list	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:get_buffer_list(is_bang, is_question) "{{{$/;"	f
get_buffer_list	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffer_list()$/;"	f
get_buffer_path	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:get_buffer_path(bufnr)$/;"	f
get_buffers	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffers()$/;"	f
get_bufnr	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_bufnr(candidate) "{{{$/;"	f
get_cache_file_path	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:get_cache_file_path(path)$/;"	f
get_candidate_text	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:get_candidate_text(candidate) "{{{$/;"	f
get_candidates	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_candidates(bufnr, options)$/;"	f
get_candidates	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_candidates(sources, context) "{{{$/;"	f
get_candidates_action_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_candidates_action_table(action_name, candidates, sources) "{{{$/;"	f
get_char	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char()$/;"	f
get_commit_date	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:get_commit_date(bundle)$/;"	f
get_commit_status	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:get_commit_status(bang, bundle) "{{{$/;"	f
get_context_lines	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_context_lines(context, direction, start) "{{{$/;"	f
get_default	vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! s:get_default() "{{{$/;"	f
get_default_action	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_default_action(source_name, kind_name) "{{{$/;"	f
get_directory	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:get_directory(bufnr) "{{{$/;"	f
get_expanded	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:get_expanded(context, lnum, macro)$/;"	f
get_file_content	vim/bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	vim/bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_filename	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_filename(candidate) "{{{$/;"	f
get_files	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_files(context, files, level, max_unit, ignore_pattern) "{{{$/;"	f
get_filetime	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:get_filetime(filename) "{{{$/;"	f
get_filetype_option	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_filetype_option(ftype, key, ...)$/;"	f
get_github_searches	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:get_github_searches(string) "{{{$/;"	f
get_header_range	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_header_range(context)$/;"	f
get_highlight	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_highlight(...)$/;"	f
get_hunks	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_empty	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_input	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:get_input()$/;"	f
get_last_status	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:get_last_status()$/;"	f
get_lazy_bundles	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:get_lazy_bundles()$/;"	f
get_lines	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_lines(context, direction, start, max) "{{{$/;"	f
get_list	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_list() "{{{$/;"	f
get_matching_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def get_matching_snippets(self, trigger, potentially):$/;"	m	class:_SnippetDictionary
get_migemo_pattern	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:get_migemo_pattern(input)$/;"	f
get_neobundle_args	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:get_neobundle_args(candidate)$/;"	f
get_outline_buffer_ids	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_outline_buffer_ids(winnr)$/;"	f
get_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_outline_data(bufnr, ...)$/;"	f
get_outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_outline_info(ftype, ...)$/;"	f
get_param_list	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:get_param_list(context, lnum)$/;"	f
get_path	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_path(args, context) "{{{$/;"	f
get_plugin_names	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:get_plugin_names() "{{{$/;"	f
get_quick_match_table	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:get_quick_match_table() "{{{$/;"	f
get_reltime	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_reltime()$/;"	f
get_repository_plugins	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! s:get_repository_plugins(context) "{{{$/;"	f
get_repository_plugins	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^function! s:get_repository_plugins(context, path) "{{{$/;"	f
get_resume_buffer	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_resume_buffer(buffer_name) "{{{$/;"	f
get_section	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_skip_ranges	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:get_skip_ranges(context)$/;"	f
get_skipped_message	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:get_skipped_message(number, max, bundle, prefix, message)$/;"	f
get_source_candidates	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:get_source_candidates(source) "{{{$/;"	f
get_string	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_string() "{{{$/;"	f
get_syn	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_tabs	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_tabs()$/;"	f
get_tag_access_mark	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:get_tag_access_mark(tag)$/;"	f
get_tag_id	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! s:get_tag_id(tag)$/;"	f
get_tagdata	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:get_tagdata(tagfile)$/;"	f
get_text	vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_text	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
get_text_content	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^function! s:get_text_content(level, context)$/;"	f
get_time	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:get_time(num) "{{{$/;"	f
get_visible_buffers	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_visible_buffers()$/;"	f
get_visual_region	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
getchar	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getfilename	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
gf	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
git_cwd_dirty	bin/git_cwd_info	/^def git_cwd_dirty$/;"	f
git_head_commit_id	bin/git_cwd_info	/^def git_head_commit_id$/;"	f
git_parse_branch	bin/git_cwd_info	/^def git_parse_branch$/;"	f
git_repo_path	bin/git_cwd_info	/^def git_repo_path$/;"	f
gitgutter	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
github_url	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
glob	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import glob$/;"	i
glob	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^import glob$/;"	i
glob	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^  function! s:glob(expr)$/;"	f
globpath	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
go	vim/bundle/vim-commentary/plugin/commentary.vim	/^function! s:go(type,...) abort$/;"	f
grey_color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_level	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:grey_number(x)$/;"	f
gsub	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guess_edit	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
guess_edit	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def guess_edit(initial_line, lt, ct, vs):$/;"	f
guess_edit	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
gui2cui	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
handle_special_key	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
has	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:has(list, value)$/;"	f
has_common_items	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_doc	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:has_doc(path)$/;"	f
has_index	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_option	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def has_option(self, opt):$/;"	m	class:Snippet
has_outline_buffer_ids	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:has_outline_buffer_ids(winnr)$/;"	f
has_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:has_outline_data(bufnr, ...)$/;"	f
has_preview_window	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:has_preview_window() "{{{$/;"	f
has_undotree	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:has_undotree() "{{{$/;"	f
has_vimproc	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:has_vimproc()$/;"	f
hashlib	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import hashlib$/;"	i
hd2list	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:hd2list(hd)$/;"	f
hd2str	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:hd2str(hd)$/;"	f
hd2str_lua	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:hd2str_lua(hd)$/;"	f
hibg	vim/colors/vividchalk.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hifg	vim/colors/vividchalk.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
highlight_cursor	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
highlight_region	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
history_complete	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:history_complete(arglead, cmdline, cursorpos)$/;"	f
hl	vim/bundle/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	vim/bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	vim/bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hl_refresh	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:hl_refresh(context) "{{{$/;"	f
hs_highlight_boolean	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
htmlentitydefs	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^import htmlentitydefs$/;"	i
iM	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iabbrev_map	vim/bundle/supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
iconv	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:iconv(expr, from, to) "{{{$/;"	f
iconv	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
ignores	vim/bundle/ultisnips/test.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	vim/bundle/ultisnips/test.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	vim/bundle/ultisnips/test.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	vim/bundle/ultisnips/test.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
im	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:import(name, ...)$/;"	f
in_git_repo	bin/git_cwd_info	/^def in_git_repo$/;"	f
indent_to_spaces	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
inferior-sml-font-lock-defaults	emacs.d/sml-mode/sml-mode.el	/^(defconst inferior-sml-font-lock-defaults$/;"	f
inferior-sml-font-lock-keywords	emacs.d/sml-mode/sml-mode.el	/^(defconst inferior-sml-font-lock-keywords$/;"	f
inferior-sml-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode inferior-sml-mode sml-prog-proc-comint-mode "Inferior-SML"$/;"	f
inferior-sml-mode-map	emacs.d/sml-mode/sml-mode.el	/^(defvar inferior-sml-mode-map$/;"	f
inferior-sml-next-error-hook	emacs.d/sml-mode/sml-mode.el	/^(defun inferior-sml-next-error-hook ()$/;"	f
init	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:init(context, bundle_names)$/;"	f
init	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
init	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:init()$/;"	f
init_bookmark	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:init_bookmark(filename)  "{{{$/;"	f
init_continuation	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:init_continuation(context, directory) "{{{$/;"	f
init_settings	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
initial_line	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
initialize_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:initialize_outline_data()$/;"	f
initialize_outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:initialize_outline_info(oinfo, name)$/;"	f
initialize_plugin_names	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:initialize_plugin_names(context) "{{{$/;"	f
input_directory	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:input_directory() "{{{$/;"	f
input_helper	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_overwrite_method	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:input_overwrite_method(dest, src) "{{{$/;"	f
input_safe	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:input_safe(...)$/;"	f
inputreplacement	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_blanks	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^function! s:insert_blanks(candidates, context)$/;"	f
insert_enter	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter(key) "{{{$/;"	f
insert_selected_candidate	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_selected_candidate() "{{{$/;"	f
install	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:install(bang, bundles)$/;"	f
install	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
install_plugin	vim/bundle/Emmet.vim/plugin/emmet.vim	/^function! s:install_plugin(mode)$/;"	f
instaweb_url	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
invoke_funcrefs	vim/bundle/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
is_absolute	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path)$/;"	f
is_active	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_active()$/;"	f
is_added	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_added(from_count, to_count)$/;"	f
is_case_tolerant	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant()$/;"	f
is_catched	vim/bundle/vimproc/vest/test-parser.vim	/^      let is_catched = 1$/;"	v
is_catched	vim/bundle/vimproc/vest/test-parser.vim	/^    let is_catched = 0$/;"	v
is_complete_edit	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, a, b, cmds):$/;"	f
is_cygwin	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_dict	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_excluded_window	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_file_exist	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:is_file_exist(path)  "{{{$/;"	f
is_file_exist	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! s:is_file_exist(path)  "{{{$/;"	f
is_float	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_focused	vim/bundle/ultisnips/test.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_funcref	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_in_a_git_repo	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_in_a_git_repo()$/;"	f
is_integer	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_killed	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_list	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_listed	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:is_listed(is_bang, is_question, bufnr) "{{{$/;"	f
is_mac	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_mac()$/;"	f
is_modified	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_modified(from_count, to_count)$/;"	f
is_modified_and_added	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_modified_and_added(from_count, to_count)$/;"	f
is_modified_and_removed	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_modified_and_removed(from_count, to_count)$/;"	f
is_number	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_other_sign	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_other_sign(line_number)$/;"	f
is_pseudo_device	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) "{{{$/;"	f
is_removed	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_removed(from_count, to_count)$/;"	f
is_string	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_tracked_by_git	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:is_tracked_by_git()$/;"	f
is_unite_buffer	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:is_unite_buffer(bufnr)$/;"	f
is_unix	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_unix()$/;"	f
is_valid_candidates	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:is_valid_candidates(candidates, context)$/;"	f
is_valid_filecache	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:is_valid_filecache(cache_data)$/;"	f
is_windows	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:is_windows()$/;"	f
join	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
join	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
join	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:join(...)$/;"	f
join_to_backward	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:join_to_backward(context, lnum, pattern, limit)$/;"	f
jump	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:jump(candidate, is_highlight) "{{{$/;"	f
jump_backwards	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
keyName	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:keyName(char)$/;"	f
keys	vim/bundle/ultisnips/test.py	/^            " allaway" + JF + "Third" + JF + "Last"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	vim/bundle/ultisnips/test.py	/^            "Lets replace it again" + JF + "Blah" + JF + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            "Lets replace it again" + JF + "Blah" + JF + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            "Nupl" + JF + "Nox"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	vim/bundle/ultisnips/test.py	/^            "\\nhallo"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	vim/bundle/ultisnips/test.py	/^            "hello frac" + EX + JF + JF + "world"$/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	vim/bundle/ultisnips/test.py	/^            "testhallo\\n"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	vim/bundle/ultisnips/test.py	/^            + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	vim/bundle/ultisnips/test.py	/^            COMPL_ACCEPT + " some more"$/;"	v	class:Completion_SimpleExample_ECR
keys	vim/bundle/ultisnips/test.py	/^            ESC + "3k0itest" + EX + ESC + "uiupsy"$/;"	v	class:Undo_RemoveWholeSnippet
keys	vim/bundle/ultisnips/test.py	/^            EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "blah" + JF + "end"$/;"	v	class:TabstopWithMirrorManyFromAll_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "test" + JF + "one more" + JF + JF$/;"	v	class:TabStopTestMultilineExpand_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^            JF + "three" + JF + "four" + JF + "end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "three" + JF + "four" + JF + "end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "ups" + JF + "three" + JF + "end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "ups" + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "ups" + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	vim/bundle/ultisnips/test.py	/^            JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	vim/bundle/ultisnips/test.py	/^           "test" + EX + "hallo->"$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	vim/bundle/ultisnips/test.py	/^           JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	vim/bundle/ultisnips/test.py	/^        keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:.Transformation_LowerCaseAsciiResult
keys	vim/bundle/ultisnips/test.py	/^        keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:.Transformation_SimpleCaseAsciiResult
keys	vim/bundle/ultisnips/test.py	/^     keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	vim/bundle/ultisnips/test.py	/^     keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	vim/bundle/ultisnips/test.py	/^     keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	vim/bundle/ultisnips/test.py	/^     keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX + "\\n"+ "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX$/;"	v	class:PythonCode_MultilineIndented
keys	vim/bundle/ultisnips/test.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	vim/bundle/ultisnips/test.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	vim/bundle/ultisnips/test.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	vim/bundle/ultisnips/test.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	vim/bundle/ultisnips/test.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	vim/bundle/ultisnips/test.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	vim/bundle/ultisnips/test.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	vim/bundle/ultisnips/test.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	vim/bundle/ultisnips/test.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	vim/bundle/ultisnips/test.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	vim/bundle/ultisnips/test.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = ""$/;"	v	class:_VimTest
keys	vim/bundle/ultisnips/test.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	vim/bundle/ultisnips/test.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	vim/bundle/ultisnips/test.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	vim/bundle/ultisnips/test.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	vim/bundle/ultisnips/test.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	vim/bundle/ultisnips/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	vim/bundle/ultisnips/test.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	vim/bundle/ultisnips/test.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	vim/bundle/ultisnips/test.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	vim/bundle/ultisnips/test.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	vim/bundle/ultisnips/test.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	vim/bundle/ultisnips/test.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	vim/bundle/ultisnips/test.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	vim/bundle/ultisnips/test.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	vim/bundle/ultisnips/test.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	vim/bundle/ultisnips/test.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	vim/bundle/ultisnips/test.py	/^    keys = "ab" + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + "mmm" + JF + "n" + JF + "done" + ESC + "o"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	vim/bundle/ultisnips/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	vim/bundle/ultisnips/test.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "fold" + EX + "hi"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	vim/bundle/ultisnips/test.py	/^    keys = "for" + EX + "k" + JF$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExceptionShouldBeRaised
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "haselnut" + 2*ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + '\\nhallo' + EX$/;"	v	class:SimpleExpandTwice_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "inc" + EX + "foo"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + "Hallo" + JF + "Hi" + JF + "endone" + JF + "two" + JF + "totalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + '\\nHallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	vim/bundle/ultisnips/test.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	vim/bundle/ultisnips/test.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	vim/bundle/ultisnips/test.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	vim/bundle/ultisnips/test.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	vim/bundle/ultisnips/test.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	vim/bundle/ultisnips/test.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	vim/bundle/ultisnips/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	vim/bundle/ultisnips/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	vim/bundle/ultisnips/test.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "test me" + EX$/;"	v	class:MultiWord_SnippetOptions_OverwriteExisting_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	vim/bundle/ultisnips/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	vim/bundle/ultisnips/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	vim/bundle/ultisnips/test.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	vim/bundle/ultisnips/test.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetOptions_OverwriteThenChoose_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Ball"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "This is a longer text that should wrap as formatoptions are  enabled" + JF + "end"$/;"	v	class:FOSimple_Break_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot" + JF + "end"$/;"	v	class:JumpForward_DefSnippet
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "text" + 3*ARR_U + 6*ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "this" + 2*ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "u" + "i" + JF + "\\t"$/;"	v	class:DeleteSnippetInsertion1
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + ESC + "u" + "inothing"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "and more"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB+JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_MultiAppend
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleAppend
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OverwriteExisting_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OverwriteTwice_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v
keys	vim/bundle/ultisnips/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	vim/bundle/ultisnips/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	vim/bundle/ultisnips/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	vim/bundle/ultisnips/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	vim/bundle/ultisnips/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	vim/bundle/ultisnips/test.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	vim/bundle/ultisnips/test.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	vim/bundle/ultisnips/test.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	vim/bundle/ultisnips/test.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	vim/bundle/ultisnips/test.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te ül' + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	vim/bundle/ultisnips/test.py	/^    keys = 'te' + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	vim/bundle/ultisnips/test.py	/^    keys = 'teüst' + EX$/;"	v	class:Snippet_With_Umlauts
keys	vim/bundle/ultisnips/test.py	/^    keys = ("te'=(UltiSnips_SnippetsInCurrentScope()[{}]".format(akey) + ')\\n')$/;"	v	class:VerifyVimDict3
keys	vim/bundle/ultisnips/test.py	/^    keys = ("test" + EX + "This is a longer snippet that should wrap properly "$/;"	v	class:FOTextAfter_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = ("test" + EX + "This is a longersnippet that should wrap properly")$/;"	v	class:FOWrapOnLongWord_ExceptCorrectResult
keys	vim/bundle/ultisnips/test.py	/^    keys = ('te"=(UltiSnips_SnippetsInCurrentScope()[{}]'.format(akey) + ')\\n')$/;"	v	class:VerifyVimDict2
keys	vim/bundle/ultisnips/test.py	/^    keys = ('test=(type(UltiSnips_SnippetsInCurrentScope()) . len(UltiSnips_SnippetsInCurrentScope()) . ' +$/;"	v	class:VerifyVimDict1
keys	vim/bundle/ultisnips/test.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	vim/bundle/ultisnips/test.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
kill	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:kill(signal, candidates) "{{{$/;"	f
kind	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.highlight = {$/;"	v
kind	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.preview = {$/;"	v
kind	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.replace = {$/;"	v
kind	vim/bundle/unite.vim/vest/test-source.vim	/^let kind = {$/;"	v
kind	vim/bundle/unite.vim/vest/test-source.vim	/^let kind.action_table.open = {$/;"	v
kind.action_table.above.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.above.func(candidates) "{{{$/;"	f
kind.action_table.backup.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.backup.func(candidates) "{{{$/;"	f
kind.action_table.below.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.below.func(candidates) "{{{$/;"	f
kind.action_table.cd.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.cd.func(candidate) "{{{$/;"	f
kind.action_table.copy.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.copy.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.diff.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.diff.func(candidates)$/;"	f
kind.action_table.dirdiff.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.dirdiff.func(candidates)$/;"	f
kind.action_table.echo.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.echo.func(candidates) "{{{$/;"	f
kind.action_table.edit.func	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.ex.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.ex.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.execute.func(candidate) "{{{$/;"	f
kind.action_table.execute.func	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.execute.func(candidate) "{{{$/;"	f
kind.action_table.fdelete.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.fdelete.func(candidates) "{{{$/;"	f
kind.action_table.goto.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.goto.func(candidate) "{{{$/;"	f
kind.action_table.grep.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.grep.func(candidates) "{{{$/;"	f
kind.action_table.grep_directory.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.grep_directory.func(candidates) "{{{$/;"	f
kind.action_table.highlight.func	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.highlight.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert_directory.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert_directory.func(candidate) "{{{$/;"	f
kind.action_table.lcd.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.lcd.func(candidate) "{{{$/;"	f
kind.action_table.left.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.left.func(candidates) "{{{$/;"	f
kind.action_table.mkdir.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.mkdir.func(candidate) "{{{$/;"	f
kind.action_table.move.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.move.func(candidates) "{{{$/;"	f
kind.action_table.narrow.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.narrow.func(candidate) "{{{$/;"	f
kind.action_table.nop.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.nop.func(candidate) "{{{$/;"	f
kind.action_table.only.func	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.only.func(candidate) "{{{$/;"	f
kind.action_table.open.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.open.func	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.open.func	vim/bundle/unite.vim/vest/test-source.vim	/^function! kind.action_table.open.func(candidate)$/;"	f
kind.action_table.persist_open.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.persist_open.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.project_cd.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.project_cd.func(candidate) "{{{$/;"	f
kind.action_table.reinstall.func	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.reinstall.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.replace.func	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.replace.func(candidates) "{{{$/;"	f
kind.action_table.right.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.right.func(candidates) "{{{$/;"	f
kind.action_table.split.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.split.func(candidates) "{{{$/;"	f
kind.action_table.start.func	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.start.func	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.switch.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.switch.func(candidates) "{{{$/;"	f
kind.action_table.tabdrop.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabdrop.func(candidates) "{{{$/;"	f
kind.action_table.tabnew_cd.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_cd.func(candidate) "{{{$/;"	f
kind.action_table.tabopen.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabopen.func(candidates) "{{{$/;"	f
kind.action_table.tabvimfiler.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimfiler.func(candidate) "{{{$/;"	f
kind.action_table.tabvimshell.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimshell.func(candidate) "{{{$/;"	f
kind.action_table.unite__new_candidate.func	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
kind.action_table.unload.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.unload.func(candidates) "{{{$/;"	f
kind.action_table.update.func	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.update.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimfiler.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__copy.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__copy.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__delete.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__delete.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__execute.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__execute.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__mkdir.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__mkdir.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__move.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__move.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__newfile.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__newfile.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__rename.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__rename.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shell.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__shell.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shellcmd.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__shellcmd.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__write.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.vimfiler__write.func(candidate) "{{{$/;"	f
kind.action_table.vimshell.func	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimshell.func(candidate) "{{{$/;"	f
kind.action_table.vsplit.func	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplit.func(candidates) "{{{$/;"	f
kind.action_table.wipeout.func	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.wipeout.func(candidates) "{{{$/;"	f
kind.action_table.wunix.func	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:kind.action_table.wunix.func(candidates) "{{{$/;"	f
kind.action_table.yank.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank.func(candidates) "{{{$/;"	f
kind.action_table.yank_escape.func	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank_escape.func(candidate) "{{{$/;"	f
lasterror	vim/bundle/vimproc/autoload/proc_w32.c	/^lasterror()$/;"	f	file:
launch	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:Snippet
leaving_buffer	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def leaving_buffer(self):$/;"	m	class:SnippetManager
lex	vim/bundle/vimproc/vest/test-lexer.vim	/^    let lex = vimproc#lexer#init_lexer('1234 5678')$/;"	v
lexer.advance	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.advance()$/;"	f
lexer.lex_digit	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit()$/;"	f
lexer.skip_spaces	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces()$/;"	f
lexer.token	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.token()$/;"	f
lexer.value	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.value()$/;"	f
libcall	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:libcall(func, args) "{{{$/;"	f
line	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def line():$/;"	m	class:Position
line	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    line = property(**line())$/;"	v	class:Position
linechars	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern)$/;"	f
list2hd	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:list2hd(lis)$/;"	f
list2str	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:list2str(lis)$/;"	f
list_snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
list_snippets_dict	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def list_snippets_dict(self):$/;"	m	class:SnippetManager
load	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:load(filename)  "{{{$/;"	f
load	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:load()  "{{{$/;"	f
load	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:load(...) dict$/;"	f
load_cache_file	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:load_cache_file(path)$/;"	f
load_colors	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  fun! s:load_colors(defs)$/;"	f
load_outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:load_outline_info(load_func, context, reload)$/;"	f
loaded_matchit	vim/bundle/vim-matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_supertab	vim/bundle/supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loop_cursor_down	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:loop_cursor_down(is_skip_not_matched) "{{{$/;"	f
lseek	vim/bundle/vimproc/autoload/proc_w32.c	/^#define lseek /;"	d	file:
main	vim/bundle/switch.vim/examples/example.cpp	/^int main(int argc, const char *args[]) {$/;"	f
main_syntax	vim/bundle/scss-syntax.vim/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
make_abbr	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_abbr(bufnr, flags) "{{{$/;"	f
make_aliases	vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_aliases()$/;"	f
make_candidates	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:make_candidates(tree, current) "{{{$/;"	f
make_default_description	vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_default_description(source_name, args)$/;"	f
make_word	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_word(bufnr) "{{{$/;"	f
map	vim/bundle/supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	vim/bundle/supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map	vim/bundle/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_dict	vim/bundle/supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
maps	vim/bundle/ultisnips/test.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	vim/bundle/ultisnips/test.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	vim/bundle/ultisnips/test.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	vim/bundle/ultisnips/test.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	vim/bundle/ultisnips/test.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	vim/bundle/ultisnips/test.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
matched	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def matched(self):$/;"	m	class:Snippet
matcher.filter	vim/bundle/unite-outline/autoload/unite/filters/outline_matcher_glob.vim	/^function! s:matcher.filter(candidates, unite_context)$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matches	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def matches(self, trigger):$/;"	m	class:Snippet
matchtagalways	vim/bundle/MatchTagAlways/plugin/MatchTagAlways.vim	/^augroup matchtagalways$/;"	a
max	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:max(list, expr)$/;"	f
max	vim/bundle/vimproc/tools/leak_check.vim	/^let max = 2048$/;"	v
max_by	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
method	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^            def method; end$/;"	f	class:OuterClass.InnerClass
method	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass
method	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass.InnerClass
method	vim/bundle/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        def method; end$/;"	f	class:OuterClass
min	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:min(list, expr)$/;"	f
min_by	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
mkdir_nothrow	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:mkdir_nothrow(...) "{{{$/;"	f
mkline	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mkpath	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
mode	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
mode	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def mode(self):$/;"	m	class:_VimPosition
move	vim/bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def move(self, pivot, diff):$/;"	m	class:Position
move	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:move(src, dest) "{{{$/;"	f
move_exe	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:move_exe(src, dest)$/;"	f
move_to_other_drive	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:move_to_other_drive(candidate, filename) "{{{$/;"	f
move_vim	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:move_vim(src, dest) "{{{$/;"	f
move_vimfiler_cursor	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:move_vimfiler_cursor(candidate) "{{{$/;"	f
mru.delete	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.delete(candidates) "{{{$/;"	f
mru.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.gather_candidates(args, context) "{{{$/;"	f
mru.has_external_update	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.has_external_update() "{{{$/;"	f
mru.is_a	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.is_a(type) "{{{$/;"	f
mru.load	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.load()$/;"	f
mru.load	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.load(...)  "{{{$/;"	f
mru.save	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.save(...) "{{{$/;"	f
mru.save	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.save(...)$/;"	f
mru.validate	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.validate()$/;"	f
mru.version_check	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:mru.version_check(ver)  "{{{$/;"	f
msg2list	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:msg2list(expr) "{{{$/;"	f
mta_core	vim/bundle/MatchTagAlways/python/mta_vim.py	/^import mta_core$/;"	i
mta_core	vim/bundle/MatchTagAlways/python/tests/mta_core_test.py	/^from .. import mta_core$/;"	i
multiple_cursors#debug	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode)$/;"	f
multiple_cursors#prev	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#skip	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
n	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
namedtuple	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^from collections import namedtuple$/;"	i
narrowing_dot	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_dot() "{{{$/;"	f
narrowing_input_history	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_input_history() "{{{$/;"	f
narrowing_path	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_path() "{{{$/;"	f
need_blank_between	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^function! s:need_blank_between(cand1, cand2, memo) dict$/;"	f
needs_update	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def needs_update(self):$/;"	m	class:_SnippetDictionary
neighbor_ranges	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! s:neighbor_ranges(context, lnum, prev, next, exclusive)$/;"	f
neobundle#_get_installed_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#_get_installed_bundles(bundle_names)$/;"	f
neobundle#autoload#command	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#command(command, name, args, bang, line1, line2)$/;"	f
neobundle#autoload#explorer	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#explorer(path, event)$/;"	f
neobundle#autoload#filetype	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#filetype()$/;"	f
neobundle#autoload#function	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#function()$/;"	f
neobundle#autoload#get_unite_sources	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#get_unite_sources()$/;"	f
neobundle#autoload#init	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#init()$/;"	f
neobundle#autoload#insert	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#insert()$/;"	f
neobundle#autoload#mapping	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#mapping(mapping, name, mode)$/;"	f
neobundle#autoload#unite_sources	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#unite_sources(sources)$/;"	f
neobundle#call_hook	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#call_hook(hook_name, ...)$/;"	f
neobundle#check	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#check()$/;"	f
neobundle#complete_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#complete_bundles(arglead, cmdline, cursorpos)$/;"	f
neobundle#complete_deleted_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#complete_deleted_bundles(arglead, cmdline, cursorpos)$/;"	f
neobundle#complete_lazy_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#complete_lazy_bundles(arglead, cmdline, cursorpos)$/;"	f
neobundle#config	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#config(name, dict)$/;"	f
neobundle#config#add	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#add(bundle, ...) "{{{$/;"	f
neobundle#config#check_not_exists	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#check_not_exists(names, ...) "{{{$/;"	f
neobundle#config#disable	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#disable(arg) "{{{$/;"	f
neobundle#config#fuzzy_search	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#fuzzy_search(bundle_names) "{{{$/;"	f
neobundle#config#get	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get(name) "{{{$/;"	f
neobundle#config#get_autoload_bundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_autoload_bundles() "{{{$/;"	f
neobundle#config#get_neobundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_neobundles() "{{{$/;"	f
neobundle#config#get_types	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_types(...) "{{{$/;"	f
neobundle#config#init	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#init() "{{{$/;"	f
neobundle#config#is_installed	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#is_installed(name) "{{{$/;"	f
neobundle#config#is_sourced	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#is_sourced(name) "{{{$/;"	f
neobundle#config#load_direct_bundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#load_direct_bundles() "{{{$/;"	f
neobundle#config#rm	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rm(path) "{{{$/;"	f
neobundle#config#rtp_add	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_add(bundle) abort "{{{$/;"	f
neobundle#config#rtp_rm	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_rm(bundle) "{{{$/;"	f
neobundle#config#rtp_rm_all_bundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_rm_all_bundles() "{{{$/;"	f
neobundle#config#save_direct	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#save_direct(arg) "{{{$/;"	f
neobundle#config#search	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#search(bundle_names, ...) "{{{$/;"	f
neobundle#config#search_simple	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#search_simple(bundle_names) "{{{$/;"	f
neobundle#config#set	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#set(name, dict) "{{{$/;"	f
neobundle#config#source	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#source(names, ...) "{{{$/;"	f
neobundle#config#source_bundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#source_bundles(bundles) "{{{$/;"	f
neobundle#config#tsort	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#tsort(bundles) "{{{$/;"	f
neobundle#exists_not_installed_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#exists_not_installed_bundles()$/;"	f
neobundle#get	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get(name)$/;"	f
neobundle#get_hooks	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_hooks(name)$/;"	f
neobundle#get_neobundle_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_neobundle_dir()$/;"	f
neobundle#get_not_installed_bundle_names	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_not_installed_bundle_names()$/;"	f
neobundle#get_not_installed_bundles	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_not_installed_bundles(bundle_names)$/;"	f
neobundle#get_rtp_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_rtp_dir()$/;"	f
neobundle#get_runtime_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_runtime_dir()$/;"	f
neobundle#get_tags_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_tags_dir()$/;"	f
neobundle#get_unite_sources	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_unite_sources()$/;"	f
neobundle#init#_bundle	vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! neobundle#init#_bundle(bundle) "{{{$/;"	f
neobundle#installer#_load_install_info	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#_load_install_info(bundles)$/;"	f
neobundle#installer#build	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#build(bundle)$/;"	f
neobundle#installer#check_output	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#check_output(context, process, is_unite)$/;"	f
neobundle#installer#clean	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#clean(bang, ...)$/;"	f
neobundle#installer#clear_log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#clear_log()$/;"	f
neobundle#installer#error	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#error(msg, ...)$/;"	f
neobundle#installer#get_log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_log()$/;"	f
neobundle#installer#get_reinstall_bundles	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_reinstall_bundles(bundles)$/;"	f
neobundle#installer#get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_revision_lock_command(bang, bundle, number, max)$/;"	f
neobundle#installer#get_revision_number	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_revision_number(bundle)$/;"	f
neobundle#installer#get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_sync_command(bang, bundle, number, max)$/;"	f
neobundle#installer#get_tags_info	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_tags_info()$/;"	f
neobundle#installer#get_updated_log_message	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_updated_log_message(bundle, new_rev, old_rev)$/;"	f
neobundle#installer#get_updates_log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_updates_log()$/;"	f
neobundle#installer#helptags	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#helptags(bundles)$/;"	f
neobundle#installer#install	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#install(bang, bundle_names)$/;"	f
neobundle#installer#lock_revision	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#lock_revision(process, context, is_unite)$/;"	f
neobundle#installer#log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#log(msg, ...)$/;"	f
neobundle#installer#reinstall	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#reinstall(bundles)$/;"	f
neobundle#installer#reinstall_names	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#reinstall_names(bundle_names)$/;"	f
neobundle#installer#sync	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#sync(bundle, context, is_unite)$/;"	f
neobundle#installer#update	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#update(bundles)$/;"	f
neobundle#installer#update_log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#update_log(msg, ...)$/;"	f
neobundle#is_installed	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#is_installed(...)$/;"	f
neobundle#is_sourced	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#is_sourced(name)$/;"	f
neobundle#local	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#local(localdir, ...)$/;"	f
neobundle#parser#_function_prefix	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#_function_prefix(name) "{{{$/;"	f
neobundle#parser#_init_bundle	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#_init_bundle(name, opts) "{{{$/;"	f
neobundle#parser#_parse_recipe	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#_parse_recipe(recipe) "{{{$/;"	f
neobundle#parser#bundle	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#bundle(arg, ...) "{{{$/;"	f
neobundle#parser#depends	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#depends(arg) "{{{$/;"	f
neobundle#parser#direct	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#direct(arg) "{{{$/;"	f
neobundle#parser#fetch	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#fetch(arg) "{{{$/;"	f
neobundle#parser#lazy	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#lazy(arg) "{{{$/;"	f
neobundle#parser#local	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#local(localdir, options) "{{{$/;"	f
neobundle#parser#path	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#path(path, ...) "{{{$/;"	f
neobundle#parser#recipe	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#recipe(arg) "{{{$/;"	f
neobundle#rc	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#rc(...)$/;"	f
neobundle#source	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#source(bundle_names)$/;"	f
neobundle#sources#github#define	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! neobundle#sources#github#define() "{{{$/;"	f
neobundle#sources#neobundle_vim_recipes#define	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! neobundle#sources#neobundle_vim_recipes#define() "{{{$/;"	f
neobundle#sources#vim_scripts_org#define	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^function! neobundle#sources#vim_scripts_org#define() "{{{$/;"	f
neobundle#types#git#define	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! neobundle#types#git#define() "{{{$/;"	f
neobundle#types#hg#define	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! neobundle#types#hg#define() "{{{$/;"	f
neobundle#types#nosync#define	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^function! neobundle#types#nosync#define() "{{{$/;"	f
neobundle#types#raw#define	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! neobundle#types#raw#define() "{{{$/;"	f
neobundle#types#svn#define	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! neobundle#types#svn#define() "{{{$/;"	f
neobundle#util#cd	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#cd(path) "{{{$/;"	f
neobundle#util#convert2list	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#convert2list(expr) "{{{$/;"	f
neobundle#util#expand	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#expand(path) "{{{$/;"	f
neobundle#util#expand2	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#expand2(path) "{{{$/;"	f
neobundle#util#get_filetypes	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#get_filetypes() "{{{$/;"	f
neobundle#util#get_last_status	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#get_last_status() "{{{$/;"	f
neobundle#util#has_vimproc	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#has_vimproc() "{{{$/;"	f
neobundle#util#is_cygwin	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_cygwin() "{{{$/;"	f
neobundle#util#is_mac	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_mac() "{{{$/;"	f
neobundle#util#is_sudo	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_sudo() "{{{$/;"	f
neobundle#util#is_windows	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_windows() "{{{$/;"	f
neobundle#util#join_rtp	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#join_rtp(list, runtimepath, rtp) "{{{$/;"	f
neobundle#util#name_conversion	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#name_conversion(path) "{{{$/;"	f
neobundle#util#print_error	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#print_error(expr) "{{{$/;"	f
neobundle#util#redraw_echo	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#redraw_echo(expr) "{{{$/;"	f
neobundle#util#set_default	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#set_default(var, val, ...)  "{{{$/;"	f
neobundle#util#set_dictionary_helper	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#set_dictionary_helper(variable, keys, pattern) "{{{$/;"	f
neobundle#util#split_rtp	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#split_rtp(...) "{{{$/;"	f
neobundle#util#substitute_path_separator	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#substitute_path_separator(path) "{{{$/;"	f
neobundle#util#system	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#system(str, ...) "{{{$/;"	f
neobundle#util#unify_path	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#unify_path(path) "{{{$/;"	f
neobundle#util#uniq	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#uniq(list, ...) "{{{$/;"	f
neobundle_test_data	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^    let neobundle_test_data = [$/;"	v
neobundle_test_data	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^    let neobundle_test_data = [{'name' : 'a'}, {'name' : 'b'}, {'name' : 'c'},]$/;"	v
neobundle_test_data	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^    let neobundle_test_data = sort(filter(neobundle#config#get_neobundles(), "v:val.name =~# '^[abc]$'"), "s:comp_bundle")$/;"	v
neobundle_test_rotated	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^    let neobundle_test_rotated = s:rotate_bundle(neobundle_test_data)$/;"	v
new_ruby_project_named	rake/helpers.rb	/^def new_ruby_project_named name$/;"	f
new_scratch_buffer	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
next	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def next(self):$/;"	m	class:_TextIterator
next	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:next(tagdata, line, is_file)$/;"	f
next_sign_id	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:next_sign_id()$/;"	f
no	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def no(self):$/;"	m	class:TabStop
normal_delete_backward_path	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:normal_delete_backward_path() "{{{$/;"	f
normalize_block_patterns	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:normalize_block_patterns(patterns)$/;"	f
normalize_heading	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:normalize_heading(heading, context)$/;"	f
normalize_heading_groups	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:normalize_heading_groups(oinfo)$/;"	f
normalize_heading_word	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:normalize_heading_word(word)$/;"	f
normalize_heading_word	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^function! s:normalize_heading_word(word)$/;"	f
normalize_heading_word	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^function! s:normalize_heading_word(word, unit)$/;"	f
normalize_levels	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! s:normalize_levels(node)$/;"	f
normalize_skip_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:normalize_skip_info(oinfo)$/;"	f
nr	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def nr(self):$/;"	m	class:VimBuffer
nr2byte	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2enc_char	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2hex	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nsplit	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
ntabs_to_proper_indent	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (0,3)$/;"	v	class:MovePosition_DelSameLine1
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
old_cache_dir	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let old_cache_dir = g:unite_data_directory . '\/.outline'$/;"	v
on_buf_win_enter	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:on_buf_win_enter()$/;"	f
on_buf_write_post	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:on_buf_write_post()$/;"	f
on_colorscheme_changed	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_cursor_hold	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:on_cursor_hold()$/;"	f
on_cursormove	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:on_cursormove(min_count, total_count)$/;"	f
on_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_gather_candidates(direction, context, start, max) "{{{$/;"	f
on_init	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_init(args, context) "{{{$/;"	f
on_init	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:on_init(args, context) "{{{$/;"	f
on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! s:on_post_filter(args, context) "{{{$/;"	f
on_syntax	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_syntax(args, context) "{{{$/;"	f
on_vim_enter	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:on_vim_enter() "{{{$/;"	f
on_window_changed	vim/bundle/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
one	vim/bundle/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
open	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open(candidate) "{{{$/;"	f
open	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^function! s:open(filename) "{{{$/;"	f
open	vim/bundle/vimproc/autoload/proc_w32.c	/^#define open /;"	d	file:
open_current_line	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open_current_line(is_highlight) "{{{$/;"	f
openpty	vim/bundle/vimproc/autoload/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f
opfunc	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
opt	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):$/;"	m	class:SnippetUtil
optparse	vim/bundle/ultisnips/test.py	/^    import optparse$/;"	i
or	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:or(xs)$/;"	f
os	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import os$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^import os$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^import os$/;"	i
os	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^import os$/;"	i
os	vim/bundle/ultisnips/test.py	/^import os$/;"	i
os	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^import os$/;"	i
os	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^import os$/;"	i
out	vim/bundle/vimproc/vest/test-socket.vim	/^    let out = sock.read(-1, 100)$/;"	v
out	vim/bundle/vimproc/vest/test-socket.vim	/^  let out = sock.read(-1, 100)$/;"	v
outline_info.before	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/rst.vim	/^function! s:outline_info.before(context)$/;"	f
outline_info.before	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^function! s:outline_info.before(context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/changelog.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/conf.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/css.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/dosini.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/hatena.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/lua.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/markdown.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/perl.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/python.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/review.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/rst.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scala.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scheme.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/sh.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/textile.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/unittest.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/vim.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.create_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/misc/wzmemo_text.vim	/^function! s:outline_info.create_heading(which, heading_line, matched_line, context)$/;"	f
outline_info.extract_headings	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/cpp.vim	/^function! s:outline_info.extract_headings(context)$/;"	f
outline_info.extract_headings	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/java.vim	/^function! s:outline_info.extract_headings(context)$/;"	f
outline_info.fold_ruby_block	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^function! s:outline_info.fold_ruby_block(context, lnum)$/;"	f
outline_info.initialize	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^function! s:outline_info.initialize()$/;"	f
outline_info.initialize	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^function! s:outline_info.initialize()$/;"	f
outline_info.need_blank_between	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^function! s:outline_info.need_blank_between(cand1, cand2, memo)$/;"	f
outline_info.need_blank_between	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/python.vim	/^function! s:outline_info.need_blank_between(cand1, cand2, memo)$/;"	f
outline_info.need_blank_between	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^function! s:outline_info.need_blank_between(cand1, cand2, memo)$/;"	f
output	vim/bundle/ultisnips/test.py	/^    output = None$/;"	v	class:_VimTest
overwrite	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def overwrite(self, gtext = None):$/;"	m	class:TextObject
overwrites_previous	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def overwrites_previous(self):$/;"	m	class:Snippet
p	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
p	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
parse	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def parse(self):$/;"	m	class:_SnippetsFileParser
parse	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def parse(self, add_ts_zero = False):$/;"	m	class:TOParser
parse_arg	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! s:parse_arg(arg) "{{{$/;"	f
parse_args	vim/bundle/ultisnips/test.py	/^    def parse_args():$/;"	f
parse_back_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) "{{{$/;"	f
parse_block	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_block(script) "{{{$/;"	f
parse_cmdline	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) "{{{$/;"	f
parse_content	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
parse_diff	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:parse_diff(diff)$/;"	f
parse_double_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) "{{{$/;"	f
parse_equal	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) "{{{$/;"	f
parse_options	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! s:parse_options(opts) "{{{$/;"	f
parse_path	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:parse_path(args) "{{{$/;"	f
parse_redirection	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) "{{{$/;"	f
parse_single_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) "{{{$/;"	f
parse_source_arguments	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:parse_source_arguments(source_args, unite_context)$/;"	f
parse_tag_line	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:parse_tag_line(line)$/;"	f
parse_tilde	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) "{{{$/;"	f
parse_variables	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) "{{{$/;"	f
parse_wildcard	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) "{{{$/;"	f
partition	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
path	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
path	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
path	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	vim/bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path2directory	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2project_directory	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path_extensions	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:path_extensions()$/;"	f
path_separator	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:path_separator()$/;"	f
peek	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def peek(self, count = 1):$/;"	m	class:_TextIterator
pgroup_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) "{{{$/;"	f
platform	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^import platform$/;"	i
platform	vim/bundle/ultisnips/test.py	/^import platform$/;"	i
plineopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) "{{{$/;"	f
plugin	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^augroup plugin-unite-source-outline-win-enter$/;"	a
plugin	vim/bundle/unite.vim/autoload/unite.vim	/^augroup plugin-unite$/;"	a
plugin	vim/bundle/unite.vim/plugin/unite/buffer.vim	/^augroup plugin-unite-source-buffer$/;"	a
plugin	vim/bundle/unite.vim/plugin/unite/history_yank.vim	/^  augroup plugin-unite-history-yank$/;"	a
plugin	vim/bundle/unite.vim/plugin/unite/mru.vim	/^augroup plugin-unite-source-mru$/;"	a
plugin	vim/bundle/unite.vim/plugin/unite/window.vim	/^augroup plugin-unite-source-window$/;"	a
poll	vim/bundle/vimproc/autoload/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f
pollfd	vim/bundle/vimproc/autoload/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	vim/bundle/vimproc/autoload/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
pop	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:pop(list)$/;"	f
pos	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def pos(self):$/;"	m	class:VimState
pos	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
post_filter	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:post_filter(args, context) "{{{$/;"	f
ppos	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def ppos(self):$/;"	m	class:VimState
pre_filter	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:pre_filter(result, args)$/;"	f
primary_filetype	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def primary_filetype(self):$/;"	m	class:SnippetManager
print_candidate	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_candidate() "{{{$/;"	f
print_debug	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:print_debug(msg)$/;"	f
print_error	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:print_error(message)$/;"	f
print_error	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:print_error(string)$/;"	f
print_message_log	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_message_log() "{{{$/;"	f
print_stack	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^def print_stack():$/;"	f
process	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process	vim/bundle/vimproc/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process_added	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_added(modifications, from_count, to_count, to_line)$/;"	f
process_hunk	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_hunk(hunk)$/;"	f
process_hunks	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_hunks(hunks)$/;"	f
process_modified	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line)$/;"	f
process_modified_and_added	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line)$/;"	f
process_modified_and_removed	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line)$/;"	f
process_removed	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line)$/;"	f
process_user_input	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
prototype.add_raw	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text)$/;"	f
prototype.add_section	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents)$/;"	f
prototype.add_section_spaced	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents)$/;"	f
prototype.build	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build()$/;"	f
prototype.split	vim/bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...)$/;"	f
push	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:push(list, val)$/;"	f
query_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root)$/;"	f
quick_help	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:quick_help() "{{{$/;"	f
quoteAndEscape	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^function! s:quoteAndEscape(char)$/;"	f
quote_arg	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:quote_arg(arg)$/;"	f
random	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
re	vim/bundle/MatchTagAlways/python/mta_core.py	/^import re$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import re$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^import re$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^import re$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^import re$/;"	i
re	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^import re$/;"	i
re	vim/bundle/ultisnips/test.py	/^import re$/;"	i
re	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^import re$/;"	i
re	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^import re$/;"	i
read	vim/bundle/vimproc/autoload/proc_w32.c	/^#define read /;"	d	file:
read	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
read	vim/bundle/vimproc/plugin/vimproc.vim	/^function! s:read(cmdline) "{{{$/;"	f
read_line	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
read_lines	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
read_pgroup	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
read_pipes	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
reader.read	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:reader.read()$/;"	f
reader.unread	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! s:reader.unread()$/;"	f
readfile	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
rebasing_etc	bin/git_cwd_info	/^def rebasing_etc$/;"	f
recache_candidates_loop	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:recache_candidates_loop(context, is_force) "{{{$/;"	f
recall	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
redir	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:redir(cmd) "{{{$/;"	f
redraw	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:redraw() "{{{$/;"	f
redraw	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
redraw_all_candidates	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:redraw_all_candidates() "{{{$/;"	f
redraw_echo	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:redraw_echo(expr) "{{{$/;"	f
region	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
register_autocmds	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:register_autocmds()$/;"	f
reindent	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
release_winsock	vim/bundle/vimproc/autoload/proc_w32.c	/^release_winsock()$/;"	f	file:
reload	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:reload(bundles) "{{{$/;"	f
reload_autoload_script	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:reload_autoload_script(funcname)$/;"	f
remember_buffer	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_sign	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:remember_sign(id, file_name)$/;"	f
remembered_buffer	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remove_dummy_sign	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:remove_dummy_sign()$/;"	f
remove_file	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:remove_file(path)$/;"	f
remove_last_separator	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path)$/;"	f
remove_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:remove_outline_data(bufnr, key)$/;"	f
repeat#invalidate	vim/bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	vim/bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	vim/bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	vim/bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	vim/bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	vim/bundle/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace_first	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
replace_initital_text	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initital_text(self):$/;"	m	class:SnippetInstance
replace_vars	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replacement	vim/bundle/MatchTagAlways/python/mta_core.py	/^  def replacement( match ):$/;"	f	function:PacifyHtmlComments
replay_user_edits	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds):$/;"	m	class:SnippetInstance
repo	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
res	vim/bundle/ultisnips/test.py	/^    res = unittest.TextTestRunner(verbosity=v).run(suite)$/;"	v
res	vim/bundle/vimproc/vest/test-fopen.vim	/^  let res = file.read()$/;"	v
res	vim/bundle/vimproc/vest/test-popen.vim	/^    let res .= sub.stdout.read()$/;"	v
res	vim/bundle/vimproc/vest/test-popen.vim	/^  let res = ''$/;"	v
res	vim/bundle/vimproc/vest/test-popen.vim	/^  let res = substitute(res, '\\r\\n', '\\n', 'g')$/;"	v
res	vim/bundle/vimproc/vest/test-socket.vim	/^    let res .= out$/;"	v
res	vim/bundle/vimproc/vest/test-socket.vim	/^  let res = ''$/;"	v
res2	vim/bundle/vimproc/vest/test-fopen.vim	/^    let res2 += [file.read_line()]$/;"	v
res2	vim/bundle/vimproc/vest/test-fopen.vim	/^  let res2 = []$/;"	v
res2	vim/bundle/vimproc/vest/test-fopen.vim	/^  let res2 = file.read_lines()$/;"	v
reset	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self):$/;"	m	class:_SnippetDictionary
reset	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self, test_error=False):$/;"	m	class:SnippetManager
reset	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset_buffer_filetypes	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset_buffer_filetypes(self):$/;"	m	class:SnippetManager
reset_indent	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
resolve	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:resolve(file) "{{{$/;"	f
resolve_filetype	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:resolve_filetype(ftype)$/;"	f
resolve_filetype_alias	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:resolve_filetype_alias(ftype)$/;"	f
restart	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:restart() "{{{$/;"	f
restore_statusline	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:restore_statusline()  "{{{$/;"	f
restore_window_cursors	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:restore_window_cursors(save_cursors, preview_winnr, is_new)$/;"	f
revents	vim/bundle/vimproc/autoload/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd
reverse	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:reverse(str)$/;"	f
revert_highlight_fix	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
revert_mode	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
rgb	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb_color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_level	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rmdir	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^  function! s:rmdir(path, ...)$/;"	f
rotate_bundle	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^function! s:rotate_bundle(bundles)$/;"	f
rotate_source	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:rotate_source(is_next) "{{{$/;"	f
ruby_minlines	vim/bundle/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run-sml	emacs.d/sml-mode/sml-mode.el	/^(defalias 'run-sml 'sml-run)$/;"	f
runTest	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	vim/bundle/ultisnips/test.py	/^    def runTest(self): self.check_output()$/;"	m	class:_VimTest
run_diff	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:run_diff(realtime)$/;"	f
rv	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def rv():$/;"	m	class:SnippetUtil
rv	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    rv = property(**rv())$/;"	v	class:SnippetUtil
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	vim/bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:AutoClosePairs_FactoryDefaults	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^let s:AutoClosePairs_FactoryDefaults = AutoClose#ParsePairs("() {} [] ` \\" '")$/;"	v
s:BB	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:BB = ['#AFAF87', '#5F5F5F', 144, s:termbg] " Branch and file format blocks$/;"	v
s:BEGIN_BLOCK	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BLANK	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^let s:BLANK = {$/;"	v
s:BRACKET_CONTINUATION	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:BUFVAR_OUTLINE_DATA	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:BUFVAR_OUTLINE_DATA = 'unite_source_outline_data'$/;"	v
s:COMPOUND_EXPRESSION	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:Cache	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^let s:Cache = vital#of('unite.vim').import('System.Cache')$/;"	v
s:Cache	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:Cache = vital#of('unite.vim').import('System.Cache')$/;"	v
s:Cache	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:Cache = unite#util#get_vital().import('System.Cache')$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/cpp.vim	/^let s:Ctags = unite#sources#outline#import('Ctags')$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/java.vim	/^let s:Ctags = unite#sources#outline#import('Ctags')$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags = unite#sources#outline#modules#base#new('Ctags', s:SID)$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags.exe = s:find_exuberant_ctags()$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags.lang_info = {}$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags.lang_info.c = copy(s:Ctags.lang_info.cpp)$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags.lang_info.cpp = {$/;"	v
s:Ctags	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Ctags.lang_info.java = {$/;"	v
s:Cursor	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:CursorManager	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:DEFAULT_LEVEL	vim/bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	vim/bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:FILECACHE_FORMAT_VERSION	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:FILECACHE_FORMAT_VERSION = 2$/;"	v
s:FILECACHE_FORMAT_VERSION_KEY	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:FILECACHE_FORMAT_VERSION_KEY = '__unite_outline_filecache_format_version__'$/;"	v
s:FUNCTION	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:FileCache = unite#sources#outline#import('FileCache', s:OUTLINE_CACHE_DIR)$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.CLEANUP_FILE_COUNT = 10$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.CLEANUP_FILE_COUNT = 300$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.CLEANUP_RATE = 1$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.CLEANUP_RATE = 10$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.EXPIRES = 60 * 60 * 24 * 30$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^  let s:FileCache.EXPIRES = 60$/;"	v
s:FileCache	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^let s:FileCache = unite#sources#outline#modules#base#new('FileCache', s:SID)$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I1 = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#1a1a18' , '#1693a5' , 232 , 62 ] " blackestgravel & crystallake$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81 ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, s:insertbg]         " Outside blocks in insert mode$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#1a1a18' , '#fade3e' , 232 , 221 ] " blackestgravel & warmcorn$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I1	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I2 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#515744' , '#44403a' , 101 , 238 ] " lichen & deepgravel$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', s:insertbg, s:termbg2]  " Middle block$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#c7b386' , '#45413b' , 252 , 238 ] " bleaksand & deepgravel$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 236 ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I3 = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5' , '#2e2d2a' , 39 , 235 ] " crystallake & darkgravel$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67 ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ] " lighttannedskin & darkgravel$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 234 ]$/;"	v
s:I4	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_dark_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_dark_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3], s:N3[3] , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA1	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IM	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:KEYWORD_PAIRS	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:L	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:L = s:V.import("Data.List")$/;"	v
s:List	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:List = unite#sources#outline#modules#base#new('List', s:SID)$/;"	v
s:List	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:List = unite#sources#outline#modules#base#new('List', s:SID)$/;"	v
s:MAX_LOOKBACK	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MRUs	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:MRUs = {}$/;"	v
s:MRUs	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:MRUs.directory = s:directory_mru$/;"	v
s:MRUs	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:MRUs.file = s:file_mru$/;"	v
s:MaxLevel	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:MaxLevel = 4$/;"	v
s:MaxLevel	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^let s:MaxLevel = 4$/;"	v
s:Module	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^let s:Module = {}$/;"	v
s:Module	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^let s:Module.__bind__ = function(s:SID . 'Module_bind')$/;"	v
s:Module	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^let s:Module.function = s:Module.__bind__ | " syntax sugar$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ] " blackestgravel & snow$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, s:normalbg]   " Outside blocks in normal mode$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#141413' , '#c7b386' , 232 , 252 ] " blackestgravel & bleaksand$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N1	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#ffffff' , '#44403a' , 255, 238 ] " snow & deepgravel$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16  ] " info$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 39, s:termbg2]    " Middle block$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#c7b386' , '#45413b' , 252, 238 ] " bleaksand & deepgravel$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 236 ] " info$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ] " dilutedpaint & darkgravel$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ] " toffee & darkgravel$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 234 ] " statusline$/;"	v
s:N4	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#777470' , 240 ] " gravel$/;"	v
s:N4	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#857f78' , 243 ] " gravel$/;"	v
s:N4	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:OOP_ACCESS_MARKS	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:OOP_ACCESS_MARKS = {$/;"	v
s:OUTLINE_ALIASES	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:OUTLINE_ALIASES = {$/;"	v
s:OUTLINE_CACHE_DIR	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^      let s:OUTLINE_CACHE_DIR = old_cache_dir$/;"	v
s:OUTLINE_CACHE_DIR	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:OUTLINE_CACHE_DIR = g:unite_data_directory . '\/outline'$/;"	v
s:OUTLINE_INFO_PATH	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:OUTLINE_INFO_PATH = [$/;"	v
s:PA	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ] " raspberry$/;"	v
s:PA	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ] " bleaklemon$/;"	v
s:PA	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:POSTFIX_CONDITION	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:R1	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R1 = ['#FFFFFF', '#870000', 15, s:replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R2 = ['#AFAF87', '#5F5F5F', 255, s:termbg2]   " Middle block$/;"	v
s:R2	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 236 ]$/;"	v
s:R3	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 234 ]$/;"	v
s:R4	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:RE = [ '#233e09' , 22 ] " oakleaf$/;"	v
s:RE	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:RE = [ '#c7915b' , 173 ] " nut$/;"	v
s:SHARED_PATTERNS	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:SHARED_PATTERNS = {$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:SID = s:get_SID()$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^let s:SID = s:get_SID()$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:SID = s:get_SID()$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^let s:SID = s:get_SID()$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:SID = s:get_SID()$/;"	v
s:SID	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:SID = s:get_SID()$/;"	v
s:SIGNATURE_PRECISION	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:SIGNATURE_PRECISION = 2$/;"	v
s:SIGNATURE_RANGE	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:SIGNATURE_RANGE = 10$/;"	v
s:SINGLE_LINE_ELSE	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	vim/bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	vim/bundle/vim-coffee-script/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:Strlen	vim/bundle/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:System	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:Tab	vim/bundle/supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:TabularCommands	vim/bundle/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/filters/outline_matcher_glob.vim	/^let s:Tree = unite#sources#outline#import('Tree')$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:Tree = unite#sources#outline#import('Tree')$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Tree  = unite#sources#outline#import('Tree')$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:Tree = unite#sources#outline#modules#base#new('Tree', s:SID)$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:Tree.List = s:List$/;"	v
s:Tree	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:Tree.MAX_DEPTH = 20$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/conf.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/cpp.vim	/^let s:Util  = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/css.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/java.vim	/^let s:Util  = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/lua.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/perl.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/pir.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/python.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scala.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scheme.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/sh.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/vim.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Util  = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:Util = unite#sources#outline#modules#base#new('Util', s:SID)$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:Util.List = s:List$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:Util.Path = Path$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:Util.String = String$/;"	v
s:Util	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^let s:Util = unite#sources#outline#import('Util')$/;"	v
s:V	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:V = unite#util#get_vital()$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V1 = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#1a1a18' , '#ab3e5d' , 232 , 161 ] " blackestgravel & raspberry$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#fd971f' , 232 , 208 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, s:visualbg]         " Outside blocks in visual mode$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#1c1b1a' , '#9a4820' , 233 , 88 ] " blackgravel & warmadobe$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V2 = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#000000' , '#908571' , 16 , 252 ] " coal & winterterrain$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16  ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', s:visualbg, s:termbg2]  " Middle block$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#000000' , '#88633f' , 16 , 95 ] " coal & cappuccino$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 236 ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V3 = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#ab3e5d' , '#8c7f77' , 161 , 245 ] " raspberry & wetcoldterrain$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#88633f' , '#c7b386' , 95 , 252 ] " cappuccino & bleaksand$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 234 ]$/;"	v
s:V4	vim/bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	vim/bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#515744' , 101 ] " lichen$/;"	v
s:V4	vim/bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#c14c3d' , 160 ] " tannedumbrella$/;"	v
s:V4	vim/bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:VERSION	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:VERSION = '0.1.0'$/;"	v
s:VERSION	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:VERSION = '0.2.0'$/;"	v
s:Vital	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:Vital = vital#of('unite.vim')$/;"	v
s:WI	vim/bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	vim/bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#ff0f38', 255, 201 ]$/;"	v
s:WINVAR_OUTLINE_BUFFER_IDS	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:WINVAR_OUTLINE_BUFFER_IDS = 'unite_source_outline_buffer_ids'$/;"	v
s:abstract_prototype	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:accents	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:access_modifier_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(private\\|public\\|protected\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:action_find	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^let s:action_find = {$/;"	v
s:action_table	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:action_table = {}$/;"	v
s:action_table	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:action_table.preview.func = function(s:SID . 'Action_preview')$/;"	v
s:action_table	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:action_table = {}$/;"	v
s:action_table	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:action_table.jsplit = {$/;"	v
s:action_table	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:action_table.jump = {$/;"	v
s:action_table	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:action_table.select = {$/;"	v
s:action_vimgrep_directory	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:action_vimgrep_directory = {$/;"	v
s:action_vimgrep_file	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:action_vimgrep_file = {$/;"	v
s:active_winnr	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:airline_initialized	vim/bundle/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_theme_defined	vim/bundle/vim-airline/plugin/airline.vim	/^let s:airline_theme_defined = 0$/;"	v
s:alert	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:alert= 88     " Modefied file alert color$/;"	v
s:b	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:bad_input	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:bg_processes	vim/bundle/vimproc/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:block_continuation_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bookmarks	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:bookmarks = {}$/;"	v
s:bracket_continuation_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bright	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buf_min_count	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_bookmark_action	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:buffer_bookmark_action = {$/;"	v
s:buffer_list	vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:buffer_list = {}$/;"	v
s:buffer_prototype	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:builder	vim/bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	vim/bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	vim/bundle/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder_context	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_alt_sep = get(g:, 'airline#extensions#tabline#left_alt_sep' , "\\ue0b1")$/;"	v
s:builder_context	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_alt_sep = get(g:, 'airline#extensions#tabline#left_alt_sep' , '|')$/;"	v
s:builder_context	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_sep     = get(g:, 'airline#extensions#tabline#left_sep'     , "\\ue0b0")$/;"	v
s:builder_context	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_sep     = get(g:, 'airline#extensions#tabline#left_sep'     , ' ')$/;"	v
s:builder_context	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:builder_context = {$/;"	v
s:c	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:cached_result = []$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:cached_result = []$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:cached_result = []$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:cached_result = []$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:cached_result = {}$/;"	v
s:cached_result	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:cached_result = []$/;"	v
s:cdable_action_file	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:cdable_action_file = {$/;"	v
s:cdable_action_rec	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec = {$/;"	v
s:cdable_action_rec_async	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_async = {$/;"	v
s:cdable_action_rec_parent	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent = {$/;"	v
s:cdable_action_rec_parent_async	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent_async = {$/;"	v
s:cdable_action_rec_project	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project = {$/;"	v
s:cdable_action_rec_project_async	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project_async = {$/;"	v
s:char	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:class	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:class = '\\%(class\\)'$/;"	v
s:cm	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:cmd	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:coffeeIndentExpr	vim/bundle/vim-coffee-script/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:color_template	vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:colorscheme_list	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:column_display	vim/bundle/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:commands	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:contexts	vim/bundle/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:continuation	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:continuation = { 'directory' : {}, 'file' : {} }$/;"	v
s:continuation_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:converter = {$/;"	v
s:converter	vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:converter = {$/;"	v
s:core_funcrefs	vim/bundle/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cpo_save	vim/bundle/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cterm_blue	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_blue = 67$/;"	v
s:cterm_blue	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_dark_gray	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_green	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_green = 151$/;"	v
s:cterm_green	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_light_gray	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_med_gray_hi	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_orange	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_orange = 173$/;"	v
s:cterm_orange	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_pink = 182$/;"	v
s:cterm_pink	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_purple = 139$/;"	v
s:cterm_purple	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_red	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_red = 131$/;"	v
s:cterm_red	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:declaration	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^let s:declaration = '\\%(module\\|data\\|type\\|newtype\\|class\\|instance\\)'$/;"	v
s:default_checks	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing']$/;"	v
s:default_converters	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:default_converters = ['converter_nothing']$/;"	v
s:default_filetype_options	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:default_filetype_options = {$/;"	v
s:default_highlight	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:default_highlight = {$/;"	v
s:default_matchers	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:default_matchers = ['matcher_context']$/;"	v
s:default_sorters	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:default_sorters = ['sorter_nothing']$/;"	v
s:defaults_list	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:dir_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:dir_mru_source = {$/;"	v
s:dir_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:dir_mru_source.action_table.delete = {$/;"	v
s:dir_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:dir_mru_source.converters = [ s:dir_mru_source.source__converter ]$/;"	v
s:directory_mru	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:directory_mru = extend(deepcopy(s:mru), {$/;"	v
s:dll_handle	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:emmet_settings	vim/bundle/Emmet.vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:empty_message	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:empty_message = get(g:, 'airline#extensions#branch#empty_message',$/;"	v
s:enabled	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = 1$/;"	v
s:end_end_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:excludes	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:excludes = get(g:, 'airline#extensions#tabline#excludes', [])$/;"	v
s:exists	vim/bundle/Emmet.vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists_md5	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:export	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:export =  '\\%(\\%(module\\.\\)\\?exports\\)'$/;"	v
s:ext	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:fg_pdef	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^let s:file = ''$/;"	v
s:file_bookmark_action	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:file_bookmark_action = {$/;"	v
s:file_mru	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:file_mru = extend(deepcopy(s:mru), {$/;"	v
s:file_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:file_mru_source = {$/;"	v
s:file_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:file_mru_source.action_table.delete = {$/;"	v
s:file_mru_source	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:file_mru_source.converters = [ s:file_mru_source.source__converter ]$/;"	v
s:filetype_overrides	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:flags	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:fmod	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^let s:fmod = get(g:, 'airline#extensions#tabline#fnamemod', ':~:.')$/;"	v
s:fnamecollapse	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:formatelempat	vim/bundle/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:formatter	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^let s:formatter = {$/;"	v
s:formatter	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:formatter = get(g:, 'airline#extensions#tabline#formatter', 'default')$/;"	v
s:from_mode	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:ftype_alias_table	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:ftype_alias_table = {}$/;"	v
s:function	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:function = '\\%(\\w\\+.*->\\)'$/;"	v
s:git_versions	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:global_cpo	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^let s:global_cpo = &cpo " store compatible-mode in local variable$/;"	v
s:globpath_third_arg	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:gui_blue	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_dark_gray	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_green	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_green = '#99cc99'$/;"	v
s:gui_green	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_light_gray	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_med_gray_hi	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_orange	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_red	vim/bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_red = '#ac4142'$/;"	v
s:gui_red	vim/bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:guibg	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guisep	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:has_fugitive	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive = exists('*fugitive#head')$/;"	v
s:has_fugitive_detect	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive_detect = exists('*fugitive#detect')$/;"	v
s:has_lawrencium	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_lawrencium = exists('*lawrencium#statusline')$/;"	v
s:has_vcscommand	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_vcscommand = exists('*VCSCommandGetStatusLine')$/;"	v
s:headerExpr	vim/bundle/vim-markdown/ftplugin/mkd.vim	/^let s:headerExpr = '\\v^#'$/;"	v
s:heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:heading = '^\\s\\{,' . s:MaxLevel . '}\\%(' . s:class . '\\|' . s:function . '\\|' . s:export .'\\)'$/;"	v
s:heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^let s:heading = '^\\%(' . s:declaration . '\\|' . s:signature .'\\)'$/;"	v
s:heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^let s:heading = '^\\s\\{,' . s:MaxLevel . '}\\S\\+'$/;"	v
s:heading_pattern	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^let s:heading_pattern = '\\c<\\(' . join(s:heading_tags, '\\|') . '\\)\\>[^>]*>'$/;"	v
s:heading_tags	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^let s:heading_tags = ['head', 'body', 'h\\([1-6]\\)']$/;"	v
s:hi_group_cursor	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:highlight_lines	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^let s:highlight_lines = g:gitgutter_highlight_lines$/;"	v
s:htmlIndentExpr	vim/bundle/vim-coffee-script/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:hunk_summary	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^let s:hunk_summary = [0, 0, 0]$/;"	v
s:hunk_symbols	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:i	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:inactive_funcrefs	vim/bundle/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent_access_modifier_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(private\\|protected\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:input_cache	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:input_cache = {}$/;"	v
s:insertbg	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:insertbg= 70  " Background for insert mode and file position blocks$/;"	v
s:is_case_tolerant	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cygwin	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	vim/bundle/vimproc/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_mac	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_mac = !s:is_windows$/;"	v
s:is_mac	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	vim/bundle/vimproc/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows$/;"	v
s:is_unix	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win32term	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:is_windows	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	vim/bundle/unite.vim/autoload/unite/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^let s:is_windows = has("win16") || has("win95") || has("win32") || has("win64")$/;"	v
s:is_windows	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	vim/bundle/vimproc/autoload/vimproc/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:keepcpo	vim/bundle/switch.vim/plugin/switch.vim	/^let s:keepcpo = &cpo$/;"	v
s:kind	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.reinstall = {$/;"	v
s:kind	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.update = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.fdelete = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.goto = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.unload = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.wipeout = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.cd = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.lcd = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.narrow = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.project_cd = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_cd = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimfiler = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimshell = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimfiler = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimshell = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec\/async'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent\/async'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project\/async'] =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.echo = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.ex = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert_directory = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.nop = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank_escape = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.backup = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.copy = deepcopy(s:kind.action_table.vimfiler__copy)$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.copy.is_listed = 1$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.diff = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.dirdiff = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.grep = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.grep_directory = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.mkdir = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.move =$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.move.is_listed = 1$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__copy = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__delete = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__execute = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__mkdir = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__move = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__newfile = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__rename = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__shell = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__shellcmd = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.vimfiler__write = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind.action_table.wunix = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.above = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.below = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.left = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.persist_open = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.right = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.split = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.switch = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabdrop = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabopen = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplit = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.action_table.rename = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.parents = ['cdable']$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.unite__new_candidate = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.only = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:kind = {$/;"	v
s:last_errmsg	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_mps	vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_status	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:last_words	vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:lasterr	vim/bundle/vimproc/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:latency_debug_file	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:layout	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:lazycat_list	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lexer	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:lines	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vim/bundle/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:loaded	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^let s:loaded = {}$/;"	v
s:loaded	vim/bundle/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:log = []$/;"	v
s:low_color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
s:magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:man_section_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^let s:man_section_heading           = '[a-zA-Z][a-zA-Z -_]*[a-zA-Z]'$/;"	v
s:man_sub_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^let s:man_sub_heading               = s:man_sub_heading_leading_space . s:man_section_heading$/;"	v
s:man_sub_heading_leading_space	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^let s:man_sub_heading_leading_space = '\\s\\{3\\}'$/;"	v
s:match_group	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^  let s:match_group = 'MatchParen'$/;"	v
s:match_group	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^  let s:match_group = 'MatchTag'$/;"	v
s:match_words	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:matcher	vim/bundle/unite-outline/autoload/unite/filters/outline_matcher_glob.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:matcher = {$/;"	v
s:matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:matcher = {$/;"	v
s:mixed_indent_format	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_format = get(g:, 'airline#extensions#whitespace#mixed_indent_format', 'mixed-indent[%s]')$/;"	v
s:modes	vim/bundle/supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	vim/bundle/supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:molokai_original	vim/bundle/molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	vim/bundle/molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:movementKeys	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^let s:movementKeys = split('ESC UP DOWN LEFT RIGHT HOME END PAGEUP PAGEDOWN')$/;"	v
s:mru	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:mru = {$/;"	v
s:mru_directories	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^let s:mru_directories = []$/;"	v
s:mru_files	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^let s:mru_files = []$/;"	v
s:mx	vim/bundle/Emmet.vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:n	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:neobundle_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:neobundle_dir = get($/;"	v
s:neobundle_runtime_dir	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:neobundle_runtime_dir = neobundle#util#substitute_path_separator($/;"	v
s:neobundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let s:neobundles = {}$/;"	v
s:non_bracket_continuation_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_zero_only	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:normalbg	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:normalbg= 27  " Background for normal mode and file position blocks$/;"	v
s:notslash	vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:ob	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:options_list	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:ou	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:outline_buffer_id	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:outline_buffer_id = 1$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/changelog.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/conf.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/cpp.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/css.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/dosini.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/hatena.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/java.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/lua.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/markdown.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/perl.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/pir.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/python.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/review.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/rst.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^let s:outline_info = deepcopy(s:super)$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scala.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scheme.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/sh.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/textile.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/unittest.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/vim.vim	/^let s:outline_info = {$/;"	v
s:outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/misc/wzmemo_text.vim	/^let s:outline_info = {$/;"	v
s:overwrite	vim/bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:parts	vim/bundle/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pat	vim/bundle/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat_assign	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:pat_assign = '\\%(var\\s\\+\\)\\=\\(' . s:pat_indent . '\\%(\\.' . s:pat_indent . '\\)*\\)\\s*='$/;"	v
s:pat_date	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/changelog.vim	/^let s:pat_date = '\\(\\S.*\\)\\=\\d\\+[-:]\\d\\+[-:]\\d\\+'$/;"	v
s:pat_heading	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scala.vim	/^let s:pat_heading = '^\\s*\\%(\\h\\w*\\s\\+\\)*\\zs\\<\\%(class\\|object\\|trait\\|def\\)\\>'$/;"	v
s:pat_helptag	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^let s:pat_helptag = '\\*[^*]\\+\\*'$/;"	v
s:pat_indent	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:pat_indent  = '\\<\\h\\w*\\>'$/;"	v
s:pat_item	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/changelog.vim	/^let s:pat_item = '\\s\\+\\*\\s\\+'$/;"	v
s:pat_label	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:pat_label  = '\\(' . s:pat_indent . '\\)\\s*:'$/;"	v
s:pat_rvalue	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^let s:pat_rvalue = '\\(function\\s*(\\([^)]*\\))\\|{\\)'$/;"	v
s:pat_section_nr	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^let s:pat_section_nr = '\\d\\+\\.\\d\\+\\s\\+\\S'$/;"	v
s:pat_type	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^let s:pat_type = '\\%(interface\\|class\\|function\\)\\>'$/;"	v
s:pat_upper_word	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^let s:pat_upper_word = '\\u[[:upper:][:digit:]_]\\+\\>'$/;"	v
s:path_sep_pattern	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:plugin_names	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:plugin_names = []$/;"	v
s:prototype	vim/bundle/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:pumMovementKeys	vim/bundle/vim-autoclose/plugin/AutoClose.vim	/^let s:pumMovementKeys = split('UP DOWN PAGEUP PAGEDOWN')$/;"	v
s:r	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:read_timeout	vim/bundle/vimproc/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:reader	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:replacebg	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:replacebg=88  " Background for replace mode and file position blocks$/;"	v
s:repo_prototype	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:repository_cache	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:repository_cache = []$/;"	v
s:repository_cache	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^let s:repository_cache = []$/;"	v
s:ruby_deindent_keywords	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	vim/bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:s	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	vim/bundle/Emmet.vim/autoload/emmet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/Emmet.vim/plugin/emmet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/plugin/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/syntax/vimrecipe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/vest/test-parse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/neobundle.vim/vest/test-tsort.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	vim/bundle/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/filters/outline_matcher_glob.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/start.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/unite/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite/mru.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/plugin/unite/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/syntax/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/vest/test-matcher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/unite.vim/vest/test-source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-fopen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-functions.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-popen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-socket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/bundle/vimproc/vest/test-system.vim	/^let s:save_cpo = &cpo$/;"	v
s:savecpo	vim/bundle/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	vim/bundle/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_line	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:script_folder_path	vim/bundle/MatchTagAlways/autoload/MatchTagAlways.vim	/^let s:script_folder_path = escape( expand( '<sfile>:p:h' ), '\\' )$/;"	v
s:script_path	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:section_truncate_width	vim/bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:sections	vim/bundle/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z','warning']$/;"	v
s:sections	vim/bundle/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:seed	vim/bundle/Emmet.vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:self_version	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:separators	vim/bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:settings	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:show_buffers	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_message	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = g:airline_detect_whitespace == 1$/;"	v
s:show_message	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:signature	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^let s:signature = '\\%([a-z(].*::\\)'$/;"	v
s:skip	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^let s:skip = { 'block': ['{-', '-}'] }$/;"	v
s:skip_expr	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:solarized_termtrans_default	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:sorter = {$/;"	v
s:sorter	vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:source.filters =$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:source.action_table.source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.action_table.install = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.action_table.yank = {$/;"	v
s:source	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.filters =$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source.action_table.jump_list = s:action_table$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source.calc_signature = function(s:SID . 'Source_calc_signature')$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source.gather_candidates = function(s:SID . 'Source_gather_candidates')$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source.hooks.on_init = function(s:SID . 'Source_Hooks_on_init')$/;"	v
s:source	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:source.hooks.on_syntax = function(s:SID . 'Source_Hooks_on_syntax')$/;"	v
s:source	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:source.action_table.jump_list = s:action_table$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source.action_table.do = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.call = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigint = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigkill = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigterm = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^let s:source.action_table.undo = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:source = {$/;"	v
s:source	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:source = {$/;"	v
s:source_buffer_all	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_all = {$/;"	v
s:source_buffer_tab	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab = deepcopy(s:source_buffer_all)$/;"	v
s:source_buffer_tab	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.description =$/;"	v
s:source_buffer_tab	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.name = 'buffer_tab'$/;"	v
s:source_directory	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory = {$/;"	v
s:source_directory_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async = deepcopy(s:source_file_async)$/;"	v
s:source_directory_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.default_kind = 'directory'$/;"	v
s:source_directory_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.description =$/;"	v
s:source_directory_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.name = 'directory_rec\/async'$/;"	v
s:source_directory_new	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory_new = {$/;"	v
s:source_directory_rec	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec = deepcopy(s:source_file_rec)$/;"	v
s:source_directory_rec	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.default_kind = 'directory'$/;"	v
s:source_directory_rec	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.description =$/;"	v
s:source_directory_rec	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.name = 'directory_rec'$/;"	v
s:source_file	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file = {$/;"	v
s:source_file_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async = deepcopy(s:source_file_rec)$/;"	v
s:source_file_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.description =$/;"	v
s:source_file_async	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.name = 'file_rec\/async'$/;"	v
s:source_file_new	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_new = {$/;"	v
s:source_file_rec	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_rec = {$/;"	v
s:source_files	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:source_files = {$/;"	v
s:source_func	vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:source_func = ''$/;"	v
s:source_include	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:source_include = {$/;"	v
s:source_install	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_install = {$/;"	v
s:source_line	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line = {$/;"	v
s:source_line	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line.converters = [s:source_line.source__converter]$/;"	v
s:source_update	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update = deepcopy(s:source_install)$/;"	v
s:source_update	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update.description = 'update bundles'$/;"	v
s:source_update	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update.name = 'neobundle\/update'$/;"	v
s:sourced_neobundles	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let s:sourced_neobundles = {}$/;"	v
s:sp_back	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim/bundle/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_keys	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:splat_regex	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:super	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^let s:super = unite#sources#outline#get_outline_info('ruby', 1, 1)$/;"	v
s:supported_arguments	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^let s:supported_arguments = [ 'filetype', 'folding', 'update' ]$/;"	v
s:supported_search_direction	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:supported_search_direction = ['forward', 'backward', 'all']$/;"	v
s:symbol	vim/bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:symbol = get(g:, 'airline#extensions#branch#symbol', g:airline_symbols.branch)$/;"	v
s:symbol	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syng_strcom	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_string	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	vim/bundle/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:t_none	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	vim/bundle/supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tab_min_count	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_nr_type	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_nr_type = get(g:, 'airline#extensions#tabline#tab_nr_type', 0)$/;"	v
s:tagfile_cache	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^let s:tagfile_cache = {}$/;"	v
s:temp00	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:termBlack	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^    let s:termBlack = "Black"$/;"	v
s:termBlack	vim/bundle/jellybeans.vim/colors/jellybeans.vim	/^    let s:termBlack = "Grey"$/;"	v
s:termbg	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:termbg = 237  " Background for branch and file format blocks$/;"	v
s:termbg	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:termbg2= 234  " Background for middle block$/;"	v
s:termbg2	vim/bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:terminal_italic	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:termsep	vim/bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:tmux_is_last_pane	vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let s:tmux_is_last_pane = 0$/;"	v
s:to_mode	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:trailing_format	vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:trailing_format = get(g:, 'airline#extensions#whitespace#trailing_format', 'trailing[%s]')$/;"	v
s:type	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^let s:type = {$/;"	v
s:type	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^let s:type = {$/;"	v
s:type	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^let s:type = {$/;"	v
s:type	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^let s:type = {$/;"	v
s:type	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^let s:type = {$/;"	v
s:type_dict	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^let s:type_dict = type({})$/;"	v
s:type_list	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^let s:type_list = type([])$/;"	v
s:types	vim/bundle/supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	vim/bundle/supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:u	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vim/bundle/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:unit_level_map	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^let s:unit_level_map = {$/;"	v
s:updates_log	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:updates_log = []$/;"	v
s:use_current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^  let s:use_current_unite = 1$/;"	v
s:version_file	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vimbrant_original	vim/colors/vimbrant.vim	/^    let s:vimbrant_original = 0$/;"	v
s:vimbrant_original	vim/colors/vimbrant.vim	/^    let s:vimbrant_original = g:vimbrant_original$/;"	v
s:vimproc_dll_basename	vim/bundle/vimproc/autoload/vimproc.vim	/^    let s:vimproc_dll_basename = 'vimproc_win32.dll'$/;"	v
s:vimproc_dll_basename	vim/bundle/vimproc/autoload/vimproc.vim	/^    let s:vimproc_dll_basename = 'vimproc_win64.dll'$/;"	v
s:vimproc_dll_basename	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	vim/bundle/vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:visualbg	vim/bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:visualbg= 166 " Background for visual mode and file position blocks$/;"	v
s:vmode	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:write_timeout	vim/bundle/vimproc/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:yank_histories	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories = []$/;"	v
s:yank_histories_file_mtime	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories_file_mtime = 0$/;"	v
s:yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	vim/bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
save	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:save(filename, bookmark)  "{{{$/;"	f
save	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:save()  "{{{$/;"	f
save_cache_file	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! s:save_cache_file(path, data)$/;"	f
save_install_info	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:save_install_info(bundles)$/;"	f
save_last_visual_selection	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def save_last_visual_selection(self):$/;"	m	class:SnippetManager
save_window_cursors	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:save_window_cursors(bufnr)$/;"	f
scan	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
scss_indent#GetIndent	vim/bundle/scss-syntax.vim/autoload/scss_indent.vim	/^fun! scss_indent#GetIndent(lnum)$/;"	f
search_dict	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict()$/;"	f
search_dict2	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict2(name)$/;"	f
searchsyn	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select_in_visual_mode	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
select_next_tab	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards = False):$/;"	m	class:SnippetInstance
send	vim/bundle/ultisnips/test.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send	vim/bundle/ultisnips/test.py	/^    def send(self, s):$/;"	m	class:VimInterfaceScreen
send	vim/bundle/ultisnips/test.py	/^    def send(self,s):$/;"	m	class:_VimTest
send_keystrokes	vim/bundle/ultisnips/test.py	/^    def send_keystrokes(self, str, sleeptime):$/;"	m	class:VimInterface
send_keystrokes	vim/bundle/ultisnips/test.py	/^    def send_keystrokes(self,s):$/;"	m	class:_VimTest
send_py	vim/bundle/ultisnips/test.py	/^    def send_py(self,s):$/;"	m	class:_VimTest
separator	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:separator()$/;"	f
set	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default)$/;"	f
setUp	vim/bundle/ultisnips/test.py	/^    def setUp(self):$/;"	m	class:_VimTest
set_cursor_line	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:set_cursor_line()$/;"	f
set_default	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_dictionary_helper	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_file	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set_file(file)$/;"	f
set_file_content	vim/bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	vim/bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_file_contents	vim/bundle/switch.vim/spec/support/vim.rb	/^    def set_file_contents(string)$/;"	f	class:Support.Vim
set_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:set_outline_data(bufnr, key, value)$/;"	f
set_syntax	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:set_syntax() "{{{$/;"	f
set_tmux_buffer	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:set_tmux_buffer(text)$/;"	f
shellesc	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shift	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shift	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:shift(list)$/;"	f
should_update	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:should_update(event)$/;"	f
show_signs	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:show_signs(file_name, modified_lines)$/;"	f
size	vim/bundle/vimproc/autoload/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	file:
skip_back_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) "{{{$/;"	f
skip_double_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) "{{{$/;"	f
skip_else	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) "{{{$/;"	f
skip_latency_measure	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
skip_on_linux	vim/bundle/ultisnips/test.py	/^    skip_on_linux = False$/;"	v	class:_VimTest
skip_on_mac	vim/bundle/ultisnips/test.py	/^    skip_on_mac = False$/;"	v	class:_VimTest
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = False$/;"	v	class:_VimTest
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True   # SendKeys can't send UTF characters$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True   # SendKeys can't send UTF characters$/;"	v	class:TestLangmapWithUtf8_ExceptCorrectResult
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True   # SendKeys can't send UTF characters$/;"	v	class:_UmlautsBase
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_ShebangPython
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_SimpleExample
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_on_windows	vim/bundle/ultisnips/test.py	/^    skip_on_windows = True$/;"	v	class:TabStop_Shell_TextInNextLine
skip_single_quote	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) "{{{$/;"	f
skip_until	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:skip_until(pattern, from)$/;"	f
skip_while	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:skip_while(pattern, from)$/;"	f
sleeptime	vim/bundle/ultisnips/test.py	/^    sleeptime = 0.00$/;"	v	class:_VimTest
smart_execute_command	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_imap	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap(lhs, rhs) "{{{$/;"	f
smart_imap2	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap2(lhs, rhs) "{{{$/;"	f
sml	emacs.d/sml-mode/sml-mode.el	/^(defgroup sml ()$/;"	f
sml--read-run-cmd	emacs.d/sml-mode/sml-mode.el	/^(defun sml--read-run-cmd ()$/;"	f
sml-=-starter-re	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-=-starter-re$/;"	f
sml-=-starter-syms	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-=-starter-syms$/;"	f
sml-back-to-outer-indent	emacs.d/sml-mode/sml-mode.el	/^(defun sml-back-to-outer-indent ()$/;"	f
sml-beginning-of-defun	emacs.d/sml-mode/sml-mode.el	/^(defun sml-beginning-of-defun ()$/;"	f
sml-cd-command	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-cd-command "OS.FileSys.chDir \\"%s\\""$/;"	f
sml-cm-font-lock-keywords	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-cm-font-lock-keywords$/;"	f
sml-cm-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-cm-mode fundamental-mode "SML-CM"$/;"	f
sml-cm-mode-syntax-table	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-cm-mode-syntax-table sml-mode-syntax-table)$/;"	f
sml-compile-commands-alist	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-compile-commands-alist$/;"	f
sml-config-file	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-config-file "~\/.smlproc.sml"$/;"	f
sml-current-fun-name	emacs.d/sml-mode/sml-mode.el	/^(defun sml-current-fun-name ()$/;"	f
sml-def-skeleton	emacs.d/sml-mode/sml-mode.el	/^(defmacro sml-def-skeleton (name interactor &rest elements)$/;"	f
sml-default-arg	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-default-arg ""$/;"	f
sml-defuse-def-regexp	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-defuse-def-regexp$/;"	f
sml-defuse-file	emacs.d/sml-mode/sml-mode.el	/^(defun sml-defuse-file ()$/;"	f
sml-defuse-file	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-defuse-file nil)$/;"	f
sml-defuse-jump-to-def	emacs.d/sml-mode/sml-mode.el	/^(defun sml-defuse-jump-to-def ()$/;"	f
sml-defuse-set-file	emacs.d/sml-mode/sml-mode.el	/^(defun sml-defuse-set-file ()$/;"	f
sml-defuse-symdata-at-point	emacs.d/sml-mode/sml-mode.el	/^(defun sml-defuse-symdata-at-point ()$/;"	f
sml-defuse-use-regexp-format	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-defuse-use-regexp-format "^    %s %d\\\\.%d $")$/;"	f
sml-electric-pipe	emacs.d/sml-mode/sml-mode.el	/^(defun sml-electric-pipe ()$/;"	f
sml-electric-pipe-mode	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-electric-pipe-mode t$/;"	f
sml-electric-space	emacs.d/sml-mode/sml-mode.el	/^(defun sml-electric-space ()$/;"	f
sml-error-regexp-alist	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-error-regexp-alist$/;"	f
sml-find-forward	emacs.d/sml-mode/sml-mode.el	/^(defun sml-find-forward (re)$/;"	f
sml-find-matching-starter	emacs.d/sml-mode/sml-mode.el	/^(defun sml-find-matching-starter (syms)$/;"	f
sml-font-lock-compose-symbol	emacs.d/sml-mode/sml-mode.el	/^(defun sml-font-lock-compose-symbol ()$/;"	f
sml-font-lock-defaults	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-font-lock-defaults$/;"	f
sml-font-lock-keywords	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-font-lock-keywords$/;"	f
sml-font-lock-symbols	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-font-lock-symbols nil$/;"	f
sml-font-lock-symbols-alist	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-font-lock-symbols-alist$/;"	f
sml-font-lock-symbols-keywords	emacs.d/sml-mode/sml-mode.el	/^(defun sml-font-lock-symbols-keywords ()$/;"	f
sml-font-lock-syntactic-keywords	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-font-lock-syntactic-keywords$/;"	f
sml-forms-alist	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-forms-alist nil$/;"	f
sml-forms-menu	emacs.d/sml-mode/sml-mode.el	/^(defun sml-forms-menu (_menu)$/;"	f
sml-funname-of-and	emacs.d/sml-mode/sml-mode.el	/^(defun sml-funname-of-and ()$/;"	f
sml-host-name	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-host-name ""$/;"	f
sml-imenu-create-index	emacs.d/sml-mode/sml-mode.el	/^(defun sml-imenu-create-index ()$/;"	f
sml-imenu-regexp	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-imenu-regexp$/;"	f
sml-indent-args	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-indent-args sml-indent-level$/;"	f
sml-indent-level	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-indent-level 4$/;"	f
sml-indent-separator-outdent	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-indent-separator-outdent 2)$/;"	f
sml-insert-form	emacs.d/sml-mode/sml-mode.el	/^(defun sml-insert-form (name newline)$/;"	f
sml-keywords-regexp	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-keywords-regexp$/;"	f
sml-last-form	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-last-form "let")$/;"	f
sml-lex-font-lock-defaults	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-lex-font-lock-defaults$/;"	f
sml-lex-font-lock-keywords	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-lex-font-lock-keywords$/;"	f
sml-lex-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-lex-mode sml-mode "SML-Lex"$/;"	f
sml-mark-function	emacs.d/sml-mode/sml-mode.el	/^(defun sml-mark-function ()$/;"	f
sml-max-name-components	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-max-name-components 3$/;"	f
sml-mlton-command	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-mlton-command "mlton"$/;"	f
sml-mlton-error-regexp-alist	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-mlton-error-regexp-alist$/;"	f
sml-mlton-mainfile	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-mlton-mainfile nil)$/;"	f
sml-mlton-typecheck	emacs.d/sml-mode/sml-mode.el	/^(defun sml-mlton-typecheck (mainfile)$/;"	f
sml-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-mode sml-prog-proc-mode "SML"$/;"	f
sml-mode-hook	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-mode-hook nil$/;"	f
sml-mode-map	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-mode-map$/;"	f
sml-mode-syntax-table	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-mode-syntax-table$/;"	f
sml-mode-variables	emacs.d/sml-mode/sml-mode.el	/^(defun sml-mode-variables ()$/;"	f
sml-module-head-syms	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-module-head-syms$/;"	f
sml-non-nested-of-starter-re	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-non-nested-of-starter-re$/;"	f
sml-outline-regexp	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-outline-regexp$/;"	f
sml-pipeheads	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-pipeheads$/;"	f
sml-post-self-insert-pipe	emacs.d/sml-mode/sml-mode.el	/^(defun sml-post-self-insert-pipe (&optional acp)$/;"	f
sml-pp-functions	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-pp-functions$/;"	f
sml-prog-proc--buffer	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc--buffer nil$/;"	f
sml-prog-proc--call	emacs.d/sml-mode/sml-mode.el	/^(defmacro sml-prog-proc--call (method &rest args)$/;"	f
sml-prog-proc--compile-command	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc--compile-command nil$/;"	f
sml-prog-proc--prop	emacs.d/sml-mode/sml-mode.el	/^(defmacro sml-prog-proc--prop (prop)$/;"	f
sml-prog-proc--tmp-file	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc--tmp-file nil)$/;"	f
sml-prog-proc-buffer	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-buffer ()$/;"	f
sml-prog-proc-chdir	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-chdir (dir)$/;"	f
sml-prog-proc-comint-input-filter-function	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-comint-input-filter-function (str)$/;"	f
sml-prog-proc-comint-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-prog-proc-comint-mode comint-mode "Sml-Prog-Proc-Comint"$/;"	f
sml-prog-proc-comint-mode-map	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc-comint-mode-map$/;"	f
sml-prog-proc-compile	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-compile (command &optional and-go)$/;"	f
sml-prog-proc-descriptor	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc-descriptor nil$/;"	f
sml-prog-proc-load-file	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-load-file (file &optional and-go)$/;"	f
sml-prog-proc-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-prog-proc-mode prog-mode "Sml-Prog-Proc"$/;"	f
sml-prog-proc-mode-map	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-prog-proc-mode-map$/;"	f
sml-prog-proc-proc	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-proc ()$/;"	f
sml-prog-proc-send-buffer	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-send-buffer (&optional and-go)$/;"	f
sml-prog-proc-send-region	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-send-region (start end &optional and-go)$/;"	f
sml-prog-proc-send-string	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-send-string (proc str)$/;"	f
sml-prog-proc-switch-to	emacs.d/sml-mode/sml-mode.el	/^(defun sml-prog-proc-switch-to ()$/;"	f
sml-program-name	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-program-name "sml"$/;"	f
sml-prompt-regexp	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-prompt-regexp "^[-=>#] *"$/;"	f
sml-rightalign-and	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-rightalign-and t$/;"	f
sml-run	emacs.d/sml-mode/sml-mode.el	/^(defun sml-run (cmd arg &optional host)$/;"	f
sml-send-function	emacs.d/sml-mode/sml-mode.el	/^(defun sml-send-function (&optional and-go)$/;"	f
sml-skip-siblings	emacs.d/sml-mode/sml-mode.el	/^(defun sml-skip-siblings ()$/;"	f
sml-smie-backward-token	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-backward-token ()$/;"	f
sml-smie-backward-token-1	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-backward-token-1 ()$/;"	f
sml-smie-datatype-|-p	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-datatype-|-p ()$/;"	f
sml-smie-definitional-equal-p	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-definitional-equal-p ()$/;"	f
sml-smie-forward-token	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-forward-token ()$/;"	f
sml-smie-forward-token-1	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-forward-token-1 ()$/;"	f
sml-smie-grammar	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-smie-grammar$/;"	f
sml-smie-non-nested-of-p	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-non-nested-of-p ()$/;"	f
sml-smie-rules	emacs.d/sml-mode/sml-mode.el	/^(defun sml-smie-rules (kind token)$/;"	f
sml-starters-syms	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-starters-syms$/;"	f
sml-syms-re	emacs.d/sml-mode/sml-mode.el	/^(defun sml-syms-re (syms)$/;"	f
sml-syntax-prop-table	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-syntax-prop-table$/;"	f
sml-tyvarseq-re	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-tyvarseq-re$/;"	f
sml-use-command	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-use-command "use \\"%s\\""$/;"	f
sml-yacc-bnf-face	emacs.d/sml-mode/sml-mode.el	/^(defface sml-yacc-bnf-face$/;"	f
sml-yacc-bnf-face	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-yacc-bnf-face 'sml-yacc-bnf-face)$/;"	f
sml-yacc-font-lock-defaults	emacs.d/sml-mode/sml-mode.el	/^(defconst sml-yacc-font-lock-defaults$/;"	f
sml-yacc-font-lock-keywords	emacs.d/sml-mode/sml-mode.el	/^(defvar sml-yacc-font-lock-keywords$/;"	f
sml-yacc-indent-action	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-yacc-indent-action 16$/;"	f
sml-yacc-indent-line	emacs.d/sml-mode/sml-mode.el	/^(defun sml-yacc-indent-line ()$/;"	f
sml-yacc-indent-pipe	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-yacc-indent-pipe nil$/;"	f
sml-yacc-indent-term	emacs.d/sml-mode/sml-mode.el	/^(defcustom sml-yacc-indent-term nil$/;"	f
sml-yacc-indentation	emacs.d/sml-mode/sml-mode.el	/^(defun sml-yacc-indentation ()$/;"	f
sml-yacc-mode	emacs.d/sml-mode/sml-mode.el	/^(define-derived-mode sml-yacc-mode sml-mode "SML-Yacc"$/;"	f
snake_case_to_camel_case	vim/bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:snake_case_to_camel_case(text)$/;"	f
snippet_dict	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def snippet_dict(self, ft):$/;"	m	class:SnippetManager
snippets	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def snippets(self):$/;"	m	class:_SnippetDictionary
snippets	vim/bundle/ultisnips/test.py	/^        snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:.Transformation_SimpleCaseAsciiResult
snippets	vim/bundle/ultisnips/test.py	/^        snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:.Transformation_LowerCaseAsciiResult
snippets	vim/bundle/ultisnips/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	vim/bundle/ultisnips/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	vim/bundle/ultisnips/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	vim/bundle/ultisnips/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ( ("test", "Case1", "This is Case 1"),$/;"	v	class:_MultipleMatches
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ( ("testblah", "BLAAH", "Say BLAH"),$/;"	v	class:_ListAllSnippets
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("dummy", "donotdefine")$/;"	v	class:_VimTest
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("fold",$/;"	v	class:FoldOverwrite_Simple_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("fold",$/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("for",$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("hi",$/;"	v	class:_TabExpand_RealWorld
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("te'stâ", 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict3
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world" )$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_Leave
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"`!p snip.rv = t[2].upper()`${1:h${2:welt}o}`!p snip.rv = t[2].upper()`")$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"`!p snip.rv = t[2].upper()`${1:h${2:welt}o}`!p snip.rv = t[2].upper()`")$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("testme",$/;"	v	class:TestLangmapWithUtf8_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("testme",$/;"	v	class:TestNonEmptyLangmapWithSemi_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ("testme",$/;"	v	class:TestNonEmptyLangmap_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExceptCorrectResult
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OverwriteExisting_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OverwriteExisting_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OverwriteThenChoose_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OverwriteTwice_ECR
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('te"stâ', 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict2
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('testâ', 'abc123ά', '123\\'êabc')$/;"	v	class:VerifyVimDict1
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üü ${1:world} üü $1')$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	vim/bundle/ultisnips/test.py	/^    snippets = ('ül', 'üüüüüßßßß')$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test it", "Expand me!", "", "i"), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test it", "Expand me!", "", "i"), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test it", "Expand me!", "", "w"), )$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	vim/bundle/ultisnips/test.py	/^    snippets = (("test", "Expand me!", "", "w"), )$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts
snippets	vim/bundle/ultisnips/test.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts_List
snippets_test_file	vim/bundle/ultisnips/test.py	/^    snippets_test_file = ("", "", "")  # file type, file name, file content$/;"	v	class:_VimTest
snprintf	vim/bundle/vimproc/autoload/proc_w32.c	/^# define snprintf /;"	d	file:
sock	vim/bundle/vimproc/vest/test-socket.vim	/^  let sock = vimproc#socket_open('www.yahoo.com', 80)$/;"	v
sockets_number	vim/bundle/vimproc/autoload/proc_w32.c	/^static int sockets_number = 0;$/;"	v	file:
sort	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:sort(list, expr)$/;"	f
sort	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_lua	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_lua(candidates) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
source	vim/bundle/unite.vim/vest/test-source.vim	/^let source = {$/;"	v
source.action_table.call.func	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.call.func(candidate) "{{{$/;"	f
source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.do.func	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.action_table.do.func(candidate) "{{{$/;"	f
source.action_table.edit.func	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.edit.func(candidates) "{{{$/;"	f
source.action_table.edit.func	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.edit.func(candidate) "{{{$/;"	f
source.action_table.install.func	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.action_table.install.func(candidates) "{{{$/;"	f
source.action_table.narrow.func	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.sigint.func	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigint.func(candidates) "{{{$/;"	f
source.action_table.sigkill.func	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigkill.func(candidates) "{{{$/;"	f
source.action_table.sigterm.func	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigterm.func(candidates) "{{{$/;"	f
source.action_table.source.func	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! s:source.action_table.source.func(candidates) "{{{$/;"	f
source.action_table.undo.func	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:source.action_table.undo.func(candidate) "{{{$/;"	f
source.action_table.unite__new_candidate.func	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.unite__new_candidate.func(candidates) "{{{$/;"	f
source.action_table.unite__new_candidate.func	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source.action_table.yank.func	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.action_table.yank.func(candidates) "{{{$/;"	f
source.async_gather_candidates	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source.async_gather_candidates(args, context)$/;"	f
source.async_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.change_candidates	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.complete	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/neobundle/sources/vim_scripts_org.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source.gather_candidates(args, context)$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	vim/bundle/unite.vim/vest/test-source.vim	/^function! source.gather_candidates(args, context) "{{{$/;"	f
source.hooks.on_close	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source.hooks.on_init(args, context)$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source.hooks.on_syntax(args, context)$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.source__converter	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.source__converter(candidates, context) "{{{$/;"	f
source.source__converter	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.source__converter(candidates, context) "{{{$/;"	f
source.source__sorter	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.source__sorter(candidates, context) "{{{$/;"	f
source_buffer_all.complete	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_buffer_all.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_init(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_post_filter(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_syntax(args, context) "{{{$/;"	f
source_buffer_tab.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_tab.gather_candidates(args, context) "{{{$/;"	f
source_directory.change_candidates	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.change_candidates(args, context) "{{{$/;"	f
source_directory.complete	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_directory_async.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_init(args, context) "{{{$/;"	f
source_directory_new.change_candidates	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory_new.change_candidates(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_init(args, context) "{{{$/;"	f
source_file.change_candidates	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.change_candidates(args, context) "{{{$/;"	f
source_file.complete	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.vimfiler_check_filetype	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file.vimfiler_complete	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.vimfiler_dummy_candidates	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file.vimfiler_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.gather_candidates(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_init(args, context) "{{{$/;"	f
source_file_new.change_candidates	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_new.change_candidates(args, context) "{{{$/;"	f
source_file_new.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_new.hooks.on_init(args, context) "{{{$/;"	f
source_file_rec.async_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.async_gather_candidates(args, context) "{{{$/;"	f
source_file_rec.complete	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.gather_candidates(args, context) "{{{$/;"	f
source_file_rec.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.hooks.on_init(args, context) "{{{$/;"	f
source_file_rec.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.hooks.on_post_filter(args, context) "{{{$/;"	f
source_file_rec.vimfiler_check_filetype	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file_rec.vimfiler_complete	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.vimfiler_dummy_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file_rec.vimfiler_gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_files.gather_candidates	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source_files.gather_candidates(args, context)$/;"	f
source_include.gather_candidates	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source_include.gather_candidates(args, context)$/;"	f
source_include.hooks.on_init	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:source_include.hooks.on_init(args, context)$/;"	f
source_install.async_gather_candidates	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.async_gather_candidates(args, context) "{{{$/;"	f
source_install.complete	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_install.hooks.on_close	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_close(args, context) "{{{$/;"	f
source_install.hooks.on_init	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_init(args, context) "{{{$/;"	f
source_install.hooks.on_syntax	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.complete	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_line.gather_candidates	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.gather_candidates(args, context) "{{{$/;"	f
source_line.hooks.on_init	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_init(args, context) "{{{$/;"	f
source_line.hooks.on_post_filter	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_post_filter(args, context) "{{{$/;"	f
source_line.hooks.on_syntax	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.source__converter	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.source__converter(candidates, context) "{{{$/;"	f
source_update.hooks.on_init	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_update.hooks.on_init(args, context) "{{{$/;"	f
spaces_to_indent	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
span	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:span(f, xs)$/;"	f
split	vim/bundle/vimproc/autoload/vimproc.vim	/^  function! s:split(str, sep)$/;"	f
split	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:split(path)$/;"	f
split3	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split_leftright	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_rtp	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:split_rtp(...) "{{{$/;"	f
stage_info	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
start	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    start = property(start)$/;"	v	class:TextObject
start	vim/bundle/vimproc/tools/benchmark.vim	/^let start = reltime()$/;"	v
start_latency_measure	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:MirrorToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:PythonCodeToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:ShellCodeToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:TabStopToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:TransformationToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:VimLCodeToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:VisualToken
starts_here	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream, chars = '{}\\$`'):$/;"	m	class:EscapeCharToken
stat	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^import stat$/;"	i
statements	vim/bundle/vimproc/vest/test-parser.vim	/^    let statements =$/;"	v
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine1
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine2
stl	vim/bundle/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	vim/bundle/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
str2hd	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:str2hd(str)$/;"	f
str2list	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:str2list(str)$/;"	f
strchars	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^  function! s:strchars(str)$/;"	f
strchars	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^  function! s:strchars(str)$/;"	f
string	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^import string$/;"	i
string	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
strwidthpart	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart_reverse	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
sub	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vim/bundle/vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen2([cmd])$/;"	v
sub	vim/bundle/vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen2(cmd)$/;"	v
sub	vim/bundle/vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen3([cmd])$/;"	v
subprocess	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^import subprocess$/;"	i
subprocess	vim/bundle/ultisnips/test.py	/^import subprocess$/;"	i
substitute_last	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_path_separator	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
suite	vim/bundle/ultisnips/test.py	/^    suite = unittest.TestSuite()$/;"	v
supertab_close_preview	vim/bundle/supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
swap_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:swap_headings(outline_buffer_ids, new_bufnr)$/;"	f
switch	vim/bundle/switch.vim/spec/spec_helper.rb	/^    def vim.switch$/;"	F
switch#Switch	vim/bundle/switch.vim/autoload/switch.vim	/^function! switch#Switch(definitions)$/;"	f
switch#mapping#Match	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! switch#mapping#Match() dict$/;"	f
switch#mapping#New	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! switch#mapping#New(definition)$/;"	f
switch#mapping#Replace	vim/bundle/switch.vim/autoload/switch/mapping.vim	/^function! switch#mapping#Replace(match) dict$/;"	f
switch#match#IsBetter	vim/bundle/switch.vim/autoload/switch/match.vim	/^function! switch#match#IsBetter(other) dict$/;"	f
switch#match#IsNull	vim/bundle/switch.vim/autoload/switch/match.vim	/^function! switch#match#IsNull() dict$/;"	f
switch#match#New	vim/bundle/switch.vim/autoload/switch/match.vim	/^function! switch#match#New(mapping, pattern, start, end)$/;"	f
switch#match#Null	vim/bundle/switch.vim/autoload/switch/match.vim	/^function! switch#match#Null()$/;"	f
switch#match#Replace	vim/bundle/switch.vim/autoload/switch/match.vim	/^function! switch#match#Replace() dict$/;"	f
sync_active_winnr	vim/bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
synname	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
sys	vim/bundle/ultisnips/plugin/UltiSnips/_diff.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
sys	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import os.path as p, sys; sys.path.append(p.join(p.dirname(__file__), ".."))$/;"	i
sys	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/test.py	/^    import sys$/;"	i
sys	vim/bundle/ultisnips/test.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/utils/convert_snipmate_snippets.py	/^import sys$/;"	i
sys	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^    import sys$/;"	i
system	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:system(str, ...)$/;"	f
system	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) "{{{$/;"	f
tabular#DoGTabularize	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	vim/bundle/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
taglist_filter	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! s:taglist_filter(input)$/;"	f
take_while	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
tempfile	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^import tempfile$/;"	i
tempfile	vim/bundle/ultisnips/test.py	/^import tempfile$/;"	i
test_loader	vim/bundle/ultisnips/test.py	/^    test_loader = unittest.TestLoader()$/;"	v
text	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	vim/bundle/ultisnips/test.py	/^    text_after =  "\\n\\n --- some text after --- "$/;"	v	class:_VimTest
text_after	vim/bundle/ultisnips/test.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	vim/bundle/ultisnips/test.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:_VimTest
text_before	vim/bundle/ultisnips/test.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_to_vim	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def text_to_vim(start, end, text):$/;"	f
throw	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	vim/bundle/ultisnips/test.py	/^import time$/;"	i
tmux_target	vim/bundle/tslime.vim/plugin/tslime.vim	/^function! s:tmux_target()$/;"	f
to_vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
toggle_auto_highlight	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_highlight() "{{{$/;"	f
toggle_auto_preview	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_preview() "{{{$/;"	f
toggle_mark	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark(...) "{{{$/;"	f
toggle_mark_all_candidates	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_all_candidates() "{{{$/;"	f
toggle_mark_candidates	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_candidates(start, end) "{{{$/;"	f
toggle_off	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
toggle_transpose_window	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_transpose_window() "{{{$/;"	f
togglebg#map	vim/bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
tokenize	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def tokenize(text, indent, offset):$/;"	f
tokenize	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    VimLCodeToken, ShellCodeToken$/;"	i
top	vim/bundle/vimproc/autoload/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	file:
traceback	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^import traceback$/;"	i
traceback	vim/bundle/ultisnips/plugin/UltiSnips/debug.py	/^    import traceback$/;"	i
transform	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^def transform(a, cmds):$/;"	f
translate	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def translate(self, s):$/;"	m	class:_Real_LangMapTranslator
translate	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    translate = lambda self, s: s$/;"	v	class:_Dummy_LangMapTranslator
transparency	vim/colors/vimbrant.vim	/^let transparency="true"$/;"	v
trigger	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def trigger(self):$/;"	m	class:Snippet
trim	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:trim(str)$/;"	f
truncate	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate_skipping	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_smart	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
tsort_impl	vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:tsort_impl(target, bundles, mark, sorted) "{{{$/;"	f
type	vim/bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	vim/bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
type.detect	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.get_commit_date_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_commit_date_command(bundle) "{{{$/;"	f
type.get_log_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_log_command(bundle, new_rev, old_rev) "{{{$/;"	f
type.get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_number_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_pretty_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_pretty_command(bundle) "{{{$/;"	f
type.get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/types/nosync.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
types	vim/bundle/ultisnips/plugin/UltiSnips/util.py	/^import types$/;"	i
u	vim/bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> u     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
undo	vim/bundle/vim-commentary/plugin/commentary.vim	/^function! s:undo()$/;"	f
unescape	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def unescape(s):$/;"	f
unescape	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
unidecode	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^                import unidecode$/;"	i
unidecode	vim/bundle/ultisnips/test.py	/^    import unidecode$/;"	i
unify_separator	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path)$/;"	f
uniq	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:uniq(list, ...)$/;"	f
unit_seqnr_prefix	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^function! s:unit_seqnr_prefix(unit)$/;"	f
unite#action#_get_candidate_action_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#_get_candidate_action_table(candidate, sources) "{{{$/;"	f
unite#action#do	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do(action_name, ...) "{{{$/;"	f
unite#action#do_candidates	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do_candidates(action_name, candidates, ...) "{{{$/;"	f
unite#action#get_action_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_action_table(source_name, kind, self_func, ...) "{{{$/;"	f
unite#action#get_alias_table	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_alias_table(source_name, kind, ...) "{{{$/;"	f
unite#action#get_default_action	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_default_action(source_name, kind) "{{{$/;"	f
unite#action#take	vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#take(action_name, candidate, is_parent_action) "{{{$/;"	f
unite#add_previewed_buffer_list	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#all_quit_session	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#all_quit_session(...)  "{{{$/;"	f
unite#args_complete	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#args_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#candidates#_gather_pos	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_gather_pos(offset) "{{{$/;"	f
unite#candidates#_recache	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_recache(input, is_force) "{{{$/;"	f
unite#candidates#gather	vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#gather(...) "{{{$/;"	f
unite#clear_message	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#clear_message() "{{{$/;"	f
unite#complete#args	vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#args(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#buffer_name	vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#source	vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#vimfiler	vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#vimfiler(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_buffer_name	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_source	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#custom#action	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#action(kind, name, action) "{{{$/;"	f
unite#custom#alias	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#alias(kind, name, action) "{{{$/;"	f
unite#custom#default_action	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#default_action(kind, default_action) "{{{$/;"	f
unite#custom#get	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get() "{{{$/;"	f
unite#custom#get_profile	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get_profile(profile_name, option_name) "{{{$/;"	f
unite#custom#profile	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#profile(profile_name, option_name, value) "{{{$/;"	f
unite#custom#source	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#source(source_name, option_name, value) "{{{$/;"	f
unite#custom#substitute	vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#substitute(profile, pattern, subst, ...) "{{{$/;"	f
unite#custom_action	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_action(kind, name, action) "{{{$/;"	f
unite#custom_alias	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_alias(kind, name, action) "{{{$/;"	f
unite#custom_default_action	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_default_action(kind, default_action) "{{{$/;"	f
unite#custom_filters	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_filters(source_name, expr) "{{{$/;"	f
unite#custom_max_candidates	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_max_candidates(source_name, max) "{{{$/;"	f
unite#custom_source	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_source(source_name, option_name, value) "{{{$/;"	f
unite#define_filter	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_filter(filter) "{{{$/;"	f
unite#define_kind	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_kind(kind) "{{{$/;"	f
unite#define_source	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_source(source) "{{{$/;"	f
unite#do_action	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#do_action(action) "{{{$/;"	f
unite#dummy_completefunc	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#dummy_completefunc(findstart, base) "{{{$/;"	f
unite#filters#converter_default#define	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#define() "{{{$/;"	f
unite#filters#converter_default#get	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#get() "{{{$/;"	f
unite#filters#converter_default#use	vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#use(converters) "{{{$/;"	f
unite#filters#converter_file_directory#define	vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! unite#filters#converter_file_directory#define() "{{{$/;"	f
unite#filters#converter_full_path#define	vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! unite#filters#converter_full_path#define() "{{{$/;"	f
unite#filters#converter_nothing#define	vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! unite#filters#converter_nothing#define() "{{{$/;"	f
unite#filters#converter_relative_abbr#define	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! unite#filters#converter_relative_abbr#define() "{{{$/;"	f
unite#filters#converter_relative_word#define	vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#define() "{{{$/;"	f
unite#filters#converter_smart_path#define	vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! unite#filters#converter_smart_path#define() "{{{$/;"	f
unite#filters#converter_tail#define	vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! unite#filters#converter_tail#define() "{{{$/;"	f
unite#filters#escape	vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#escape(string) "{{{$/;"	f
unite#filters#filter_matcher	vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_matcher(list, expr, context) "{{{$/;"	f
unite#filters#fuzzy_escape	vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#fuzzy_escape(string) "{{{$/;"	f
unite#filters#lua_fuzzy_matcher	vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_fuzzy_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#lua_matcher	vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#matcher_context#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! unite#filters#matcher_context#define() "{{{$/;"	f
unite#filters#matcher_default#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#define() "{{{$/;"	f
unite#filters#matcher_default#get	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#get() "{{{$/;"	f
unite#filters#matcher_default#use	vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#use(matchers) "{{{$/;"	f
unite#filters#matcher_fuzzy#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#define() "{{{$/;"	f
unite#filters#matcher_glob#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#define() "{{{$/;"	f
unite#filters#matcher_glob#glob_matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#glob_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_hide_hidden_files#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! unite#filters#matcher_hide_hidden_files#define() "{{{$/;"	f
unite#filters#matcher_migemo#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! unite#filters#matcher_migemo#define() "{{{$/;"	f
unite#filters#matcher_regexp#define	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#define() "{{{$/;"	f
unite#filters#matcher_regexp#get_expr	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#get_expr(input, context) "{{{$/;"	f
unite#filters#matcher_regexp#regexp_matcher	vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#regexp_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#outline_formatter#define	vim/bundle/unite-outline/autoload/unite/filters/outline_formatter.vim	/^function! unite#filters#outline_formatter#define()$/;"	f
unite#filters#outline_matcher_glob#define	vim/bundle/unite-outline/autoload/unite/filters/outline_matcher_glob.vim	/^function! unite#filters#outline_matcher_glob#define()$/;"	f
unite#filters#sorter_default#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#define() "{{{$/;"	f
unite#filters#sorter_default#get	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#get() "{{{$/;"	f
unite#filters#sorter_default#use	vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#use(sorters) "{{{$/;"	f
unite#filters#sorter_ftime#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! unite#filters#sorter_ftime#define() "{{{$/;"	f
unite#filters#sorter_length#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! unite#filters#sorter_length#define() "{{{$/;"	f
unite#filters#sorter_nothing#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! unite#filters#sorter_nothing#define() "{{{$/;"	f
unite#filters#sorter_rank#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#define() "{{{$/;"	f
unite#filters#sorter_reverse#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! unite#filters#sorter_reverse#define() "{{{$/;"	f
unite#filters#sorter_word#define	vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! unite#filters#sorter_word#define() "{{{$/;"	f
unite#force_quit_session	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#force_quit_session()  "{{{$/;"	f
unite#force_redraw	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#force_redraw(...) "{{{$/;"	f
unite#get_all_sources	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_all_sources(...) "{{{$/;"	f
unite#get_candidates	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_candidates(...) "{{{$/;"	f
unite#get_context	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_context() "{{{$/;"	f
unite#get_cur_text	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_cur_text() "{{{$/;"	f
unite#get_current_unite	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_current_unite() "{{{$/;"	f
unite#get_filters	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_filters(...) "{{{$/;"	f
unite#get_input	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_input() "{{{$/;"	f
unite#get_kinds	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_kinds(...) "{{{$/;"	f
unite#get_marked_candidates	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_marked_candidates() "{{{$/;"	f
unite#get_profile	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_profile(profile_name, option_name) "{{{$/;"	f
unite#get_self_functions	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_self_functions() "{{{$/;"	f
unite#get_source_variables	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_source_variables(context) "{{{$/;"	f
unite#get_sources	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_sources(...) "{{{$/;"	f
unite#get_status_string	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_status_string() "{{{$/;"	f
unite#get_unite_candidates	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_unite_candidates() "{{{$/;"	f
unite#get_vimfiler_candidates	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_candidates(...) "{{{$/;"	f
unite#get_vimfiler_source_names	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_source_names() "{{{$/;"	f
unite#handlers#_on_buf_unload	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_buf_unload(bufname)  "{{{$/;"	f
unite#handlers#_on_bufwin_enter	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_bufwin_enter(bufnr)  "{{{$/;"	f
unite#handlers#_on_cursor_hold	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold()  "{{{$/;"	f
unite#handlers#_on_cursor_hold_i	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold_i()  "{{{$/;"	f
unite#handlers#_on_cursor_moved	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved()  "{{{$/;"	f
unite#handlers#_on_cursor_moved_i	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved_i()  "{{{$/;"	f
unite#handlers#_on_insert_char_pre	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_char_pre()  "{{{$/;"	f
unite#handlers#_on_insert_enter	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_enter()  "{{{$/;"	f
unite#handlers#_on_insert_leave	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_leave()  "{{{$/;"	f
unite#handlers#_restore_updatetime	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_restore_updatetime()  "{{{$/;"	f
unite#handlers#_save_updatetime	vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_save_updatetime()  "{{{$/;"	f
unite#helper#adjustments	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#adjustments(currentwinwidth, the_max_source_name, size) "{{{$/;"	f
unite#helper#call_filter	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_filter(filter_name, candidates, context) "{{{$/;"	f
unite#helper#call_hook	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_hook(sources, hook_name) "{{{$/;"	f
unite#helper#convert_source_name	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#convert_source_name(source_name) "{{{$/;"	f
unite#helper#get_current_candidate	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate(...) "{{{$/;"	f
unite#helper#get_current_candidate_linenr	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate_linenr(num) "{{{$/;"	f
unite#helper#get_input	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_input() "{{{$/;"	f
unite#helper#get_marked_candidates	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_marked_candidates() "{{{$/;"	f
unite#helper#get_postfix	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_postfix(prefix, is_create, ...) "{{{$/;"	f
unite#helper#get_source_args	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_args(sources) "{{{$/;"	f
unite#helper#get_source_names	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_names(sources) "{{{$/;"	f
unite#helper#get_substitute_input	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input(input) "{{{$/;"	f
unite#helper#get_substitute_input_loop	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input_loop(input, substitute_patterns) "{{{$/;"	f
unite#helper#get_unite_bufnr	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_bufnr(buffer_name) "{{{$/;"	f
unite#helper#get_unite_winnr	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#helper#invalidate_cache	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#invalidate_cache(source_name)  "{{{$/;"	f
unite#helper#loaded_source_names_with_args	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#loaded_source_names_with_args() "{{{$/;"	f
unite#helper#parse_options	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options(args) "{{{$/;"	f
unite#helper#parse_options_args	vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_args(args) "{{{$/;"	f
unite#init#_candidates	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates(candidates) "{{{$/;"	f
unite#init#_candidates_source	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates_source(candidates, source_name) "{{{$/;"	f
unite#init#_context	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_context(context, ...) "{{{$/;"	f
unite#init#_current_unite	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_current_unite(sources, context) "{{{$/;"	f
unite#init#_default_scripts	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_default_scripts(kind, names) "{{{$/;"	f
unite#init#_filters	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_filters() "{{{$/;"	f
unite#init#_kinds	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_kinds() "{{{$/;"	f
unite#init#_loaded_sources	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_loaded_sources(sources, context) "{{{$/;"	f
unite#init#_sources	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_sources(...) "{{{$/;"	f
unite#init#_tab_variables	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_tab_variables() "{{{$/;"	f
unite#init#_unite_buffer	vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_unite_buffer() "{{{$/;"	f
unite#is_win	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#is_win() "{{{$/;"	f
unite#kinds#buffer#define	vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! unite#kinds#buffer#define() "{{{$/;"	f
unite#kinds#cdable#define	vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! unite#kinds#cdable#define() "{{{$/;"	f
unite#kinds#command#define	vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! unite#kinds#command#define() "{{{$/;"	f
unite#kinds#common#define	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#define() "{{{$/;"	f
unite#kinds#common#insert_word	vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#insert_word(word, ...) "{{{$/;"	f
unite#kinds#completion#define	vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! unite#kinds#completion#define() "{{{$/;"	f
unite#kinds#directory#define	vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^function! unite#kinds#directory#define() "{{{$/;"	f
unite#kinds#file#complete_overwrite_method	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#complete_overwrite_method(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#kinds#file#define	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#define() "{{{$/;"	f
unite#kinds#file#do_action	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_action(candidates, dest_dir, action_name) "{{{$/;"	f
unite#kinds#file#do_rename	vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_rename(old_filename, new_filename) "{{{$/;"	f
unite#kinds#guicmd#define	vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! unite#kinds#guicmd#define() "{{{$/;"	f
unite#kinds#jump_list#define	vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! unite#kinds#jump_list#define() "{{{$/;"	f
unite#kinds#neobundle#define	vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! unite#kinds#neobundle#define() "{{{$/;"	f
unite#kinds#openable#define	vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! unite#kinds#openable#define() "{{{$/;"	f
unite#kinds#source#define	vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! unite#kinds#source#define() "{{{$/;"	f
unite#kinds#tab#define	vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! unite#kinds#tab#define() "{{{$/;"	f
unite#kinds#uri#define	vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! unite#kinds#uri#define() "{{{$/;"	f
unite#kinds#window#define	vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! unite#kinds#window#define() "{{{$/;"	f
unite#kinds#word#define	vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^function! unite#kinds#word#define() "{{{$/;"	f
unite#loaded_source_names	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names() "{{{$/;"	f
unite#loaded_source_names_string	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names_string() "{{{$/;"	f
unite#loaded_sources_list	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_sources_list() "{{{$/;"	f
unite#mappings#_choose_action	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_choose_action(candidates, ...) "{{{$/;"	f
unite#mappings#_quick_match	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_quick_match(is_choose) "{{{$/;"	f
unite#mappings#define_default_mappings	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#define_default_mappings() "{{{$/;"	f
unite#mappings#do_action	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#do_action(...) "{{{$/;"	f
unite#mappings#get_current_filters	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_filters() "{{{$/;"	f
unite#mappings#loop_cursor_up_call	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_up_call(is_skip_not_matched, mode) "{{{$/;"	f
unite#mappings#loop_cursor_up_expr	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_up_expr(is_skip_not_matched) "{{{$/;"	f
unite#mappings#narrowing	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#narrowing(word) "{{{$/;"	f
unite#mappings#set_current_filters	vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_filters(filters) "{{{$/;"	f
unite#path2directory	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#path2directory(path) "{{{$/;"	f
unite#print_error	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_error(message) "{{{$/;"	f
unite#print_message	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_message(message) "{{{$/;"	f
unite#print_source_error	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_error(message, source_name) "{{{$/;"	f
unite#print_source_message	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_message(message, source_name) "{{{$/;"	f
unite#quit_session	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#quit_session()  "{{{$/;"	f
unite#redraw	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#redraw(...) "{{{$/;"	f
unite#remove_previewed_buffer_list	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#resume	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#resume(...) "{{{$/;"	f
unite#set_buffer_name_option	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_buffer_name_option(buffer_name, option_name, value) "{{{$/;"	f
unite#set_context	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_context(context) "{{{$/;"	f
unite#set_current_unite	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_current_unite(unite) "{{{$/;"	f
unite#set_profile	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_profile(profile_name, option_name, value) "{{{$/;"	f
unite#set_substitute_pattern	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_substitute_pattern(buffer_name, pattern, subst, ...) "{{{$/;"	f
unite#smart_map	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#smart_map(narrow_map, select_map) "{{{$/;"	f
unite#sources#action#define	vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! unite#sources#action#define()$/;"	f
unite#sources#alias#define	vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! unite#sources#alias#define()$/;"	f
unite#sources#bookmark#_append	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#_append(filename) "{{{$/;"	f
unite#sources#bookmark#define	vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#define() "{{{$/;"	f
unite#sources#buffer#define	vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! unite#sources#buffer#define() "{{{$/;"	f
unite#sources#buffer#variables#append	vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#append() "{{{$/;"	f
unite#sources#buffer#variables#get_buffer_list	vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#get_buffer_list() "{{{$/;"	f
unite#sources#change#define	vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! unite#sources#change#define() "{{{$/;"	f
unite#sources#command#define	vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! unite#sources#command#define() "{{{$/;"	f
unite#sources#directory#define	vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! unite#sources#directory#define() "{{{$/;"	f
unite#sources#file#complete_directory	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_directory(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#complete_file	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_file(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#copy_files	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#copy_files(dest, srcs) "{{{$/;"	f
unite#sources#file#create_file_dict	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_file_dict(file, is_relative_path, ...) "{{{$/;"	f
unite#sources#file#create_vimfiler_dict	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_vimfiler_dict(candidate, exts) "{{{$/;"	f
unite#sources#file#define	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#define() "{{{$/;"	f
unite#sources#file#delete_files	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#delete_files(srcs) "{{{$/;"	f
unite#sources#file#move_files	vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#move_files(dest, srcs) "{{{$/;"	f
unite#sources#file_point#define	vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! unite#sources#file_point#define() "{{{$/;"	f
unite#sources#find#define	vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! unite#sources#find#define() "{{{$/;"	f
unite#sources#function#define	vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! unite#sources#function#define() "{{{$/;"	f
unite#sources#grep#define	vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! unite#sources#grep#define() "{{{$/;"	f
unite#sources#history_input#define	vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! unite#sources#history_input#define()$/;"	f
unite#sources#history_yank#_append	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#_append() "{{{$/;"	f
unite#sources#history_yank#define	vim/bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#define() "{{{$/;"	f
unite#sources#jump#define	vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! unite#sources#jump#define() "{{{$/;"	f
unite#sources#jump_point#define	vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! unite#sources#jump_point#define() "{{{$/;"	f
unite#sources#launcher#define	vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#define() "{{{$/;"	f
unite#sources#line#define	vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! unite#sources#line#define() "{{{$/;"	f
unite#sources#mapping#define	vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! unite#sources#mapping#define() "{{{$/;"	f
unite#sources#menu#define	vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! unite#sources#menu#define()$/;"	f
unite#sources#mru#_save	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! unite#sources#mru#_save(...) "{{{$/;"	f
unite#sources#mru#define	vim/bundle/unite.vim/autoload/unite/sources/mru.vim	/^function! unite#sources#mru#define() "{{{$/;"	f
unite#sources#mru#variables#append	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! unite#sources#mru#variables#append() "{{{$/;"	f
unite#sources#mru#variables#clear	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! unite#sources#mru#variables#clear(type) "{{{$/;"	f
unite#sources#mru#variables#get_mrus	vim/bundle/unite.vim/autoload/unite/sources/mru/variables.vim	/^function! unite#sources#mru#variables#get_mrus(type) "{{{$/;"	f
unite#sources#neobundle#define	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! unite#sources#neobundle#define() "{{{$/;"	f
unite#sources#neobundle_install#define	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! unite#sources#neobundle_install#define() "{{{$/;"	f
unite#sources#neobundle_lazy#define	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! unite#sources#neobundle_lazy#define() "{{{$/;"	f
unite#sources#neobundle_log#define	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! unite#sources#neobundle_log#define() "{{{$/;"	f
unite#sources#neobundle_search#complete_plugin_names	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! unite#sources#neobundle_search#complete_plugin_names(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#neobundle_search#define	vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! unite#sources#neobundle_search#define() "{{{$/;"	f
unite#sources#outline#alias	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#alias(alias, ftype)$/;"	f
unite#sources#outline#defaults#changelog#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/changelog.vim	/^function! unite#sources#outline#defaults#changelog#outline_info()$/;"	f
unite#sources#outline#defaults#coffee#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/coffee.vim	/^function! unite#sources#outline#defaults#coffee#outline_info()$/;"	f
unite#sources#outline#defaults#conf#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/conf.vim	/^function! unite#sources#outline#defaults#conf#outline_info()$/;"	f
unite#sources#outline#defaults#cpp#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/cpp.vim	/^function! unite#sources#outline#defaults#cpp#outline_info()$/;"	f
unite#sources#outline#defaults#css#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/css.vim	/^function! unite#sources#outline#defaults#css#outline_info()$/;"	f
unite#sources#outline#defaults#dosini#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/dosini.vim	/^function! unite#sources#outline#defaults#dosini#outline_info()$/;"	f
unite#sources#outline#defaults#haskell#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/haskell.vim	/^function! unite#sources#outline#defaults#haskell#outline_info()$/;"	f
unite#sources#outline#defaults#hatena#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/hatena.vim	/^function! unite#sources#outline#defaults#hatena#outline_info()$/;"	f
unite#sources#outline#defaults#help#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/help.vim	/^function! unite#sources#outline#defaults#help#outline_info()$/;"	f
unite#sources#outline#defaults#html#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/html.vim	/^function! unite#sources#outline#defaults#html#outline_info()$/;"	f
unite#sources#outline#defaults#jade#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/jade.vim	/^function! unite#sources#outline#defaults#jade#outline_info()$/;"	f
unite#sources#outline#defaults#java#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/java.vim	/^function! unite#sources#outline#defaults#java#outline_info()$/;"	f
unite#sources#outline#defaults#javascript#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/javascript.vim	/^function! unite#sources#outline#defaults#javascript#outline_info()$/;"	f
unite#sources#outline#defaults#lua#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/lua.vim	/^function! unite#sources#outline#defaults#lua#outline_info()$/;"	f
unite#sources#outline#defaults#man#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/man.vim	/^function! unite#sources#outline#defaults#man#outline_info()$/;"	f
unite#sources#outline#defaults#markdown#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/markdown.vim	/^function! unite#sources#outline#defaults#markdown#outline_info()$/;"	f
unite#sources#outline#defaults#perl#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/perl.vim	/^function! unite#sources#outline#defaults#perl#outline_info()$/;"	f
unite#sources#outline#defaults#php#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/php.vim	/^function! unite#sources#outline#defaults#php#outline_info()$/;"	f
unite#sources#outline#defaults#pir#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/pir.vim	/^function! unite#sources#outline#defaults#pir#outline_info()$/;"	f
unite#sources#outline#defaults#python#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/python.vim	/^function! unite#sources#outline#defaults#python#outline_info()$/;"	f
unite#sources#outline#defaults#review#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/review.vim	/^function! unite#sources#outline#defaults#review#outline_info()$/;"	f
unite#sources#outline#defaults#rst#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/rst.vim	/^function! unite#sources#outline#defaults#rst#outline_info()$/;"	f
unite#sources#outline#defaults#ruby#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby.vim	/^function! unite#sources#outline#defaults#ruby#outline_info(...)$/;"	f
unite#sources#outline#defaults#ruby#rspec#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/ruby/rspec.vim	/^function! unite#sources#outline#defaults#ruby#rspec#outline_info()$/;"	f
unite#sources#outline#defaults#scala#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scala.vim	/^function! unite#sources#outline#defaults#scala#outline_info()$/;"	f
unite#sources#outline#defaults#scheme#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/scheme.vim	/^function! unite#sources#outline#defaults#scheme#outline_info()$/;"	f
unite#sources#outline#defaults#sh#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/sh.vim	/^function! unite#sources#outline#defaults#sh#outline_info()$/;"	f
unite#sources#outline#defaults#tex#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/tex.vim	/^function! unite#sources#outline#defaults#tex#outline_info()$/;"	f
unite#sources#outline#defaults#text#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/misc/wzmemo_text.vim	/^function! unite#sources#outline#defaults#text#outline_info()$/;"	f
unite#sources#outline#defaults#textile#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/textile.vim	/^function! unite#sources#outline#defaults#textile#outline_info()$/;"	f
unite#sources#outline#defaults#unittest#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/unittest.vim	/^function! unite#sources#outline#defaults#unittest#outline_info()$/;"	f
unite#sources#outline#defaults#vim#outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline/defaults/vim.vim	/^function! unite#sources#outline#defaults#vim#outline_info()$/;"	f
unite#sources#outline#define	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#define()$/;"	f
unite#sources#outline#get_filetype_option	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#get_filetype_option(...)$/;"	f
unite#sources#outline#get_highlight	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#get_highlight(...)$/;"	f
unite#sources#outline#get_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#get_outline_data(...)$/;"	f
unite#sources#outline#get_outline_info	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#get_outline_info(...)$/;"	f
unite#sources#outline#has_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#has_outline_data(...)$/;"	f
unite#sources#outline#import	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#import(name, ...)$/;"	f
unite#sources#outline#modules#base#new	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/base.vim	/^function! unite#sources#outline#modules#base#new(name, sid)$/;"	f
unite#sources#outline#modules#ctags#import	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/ctags.vim	/^function! unite#sources#outline#modules#ctags#import()$/;"	f
unite#sources#outline#modules#file_cache#import	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/file_cache.vim	/^function! unite#sources#outline#modules#file_cache#import(dir)$/;"	f
unite#sources#outline#modules#tree#import	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/tree.vim	/^function! unite#sources#outline#modules#tree#import()$/;"	f
unite#sources#outline#modules#util#import	vim/bundle/unite-outline/autoload/unite/sources/outline/modules/util.vim	/^function! unite#sources#outline#modules#util#import()$/;"	f
unite#sources#outline#remove_cache_files	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#remove_cache_files()$/;"	f
unite#sources#outline#remove_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#remove_outline_data(...)$/;"	f
unite#sources#outline#set_outline_data	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! unite#sources#outline#set_outline_data(...)$/;"	f
unite#sources#outline#util#_cpp_is_in_comment	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#_cpp_is_in_comment(...)$/;"	f
unite#sources#outline#util#capitalize	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#capitalize(...)$/;"	f
unite#sources#outline#util#get_comment_heading_level	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#get_comment_heading_level(...)$/;"	f
unite#sources#outline#util#get_indent_level	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#get_indent_level(...)$/;"	f
unite#sources#outline#util#join_to	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#join_to(...)$/;"	f
unite#sources#outline#util#join_to_rparen	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#join_to_rparen(...)$/;"	f
unite#sources#outline#util#neighbor_match	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#neighbor_match(...)$/;"	f
unite#sources#outline#util#neighbor_matchstr	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#neighbor_matchstr(...)$/;"	f
unite#sources#outline#util#normalize_path	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#normalize_path(...)$/;"	f
unite#sources#outline#util#nr2roman	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#nr2roman(...)$/;"	f
unite#sources#outline#util#print_debug	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#print_debug(...)$/;"	f
unite#sources#outline#util#print_progress	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#print_progress(...)$/;"	f
unite#sources#outline#util#shared_pattern	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#shared_pattern(...)$/;"	f
unite#sources#outline#util#shellescape	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#shellescape(...)$/;"	f
unite#sources#outline#util#sort_by_lnum	vim/bundle/unite-outline/autoload/unite/sources/outline/util.vim	/^function! unite#sources#outline#util#sort_by_lnum(...)$/;"	f
unite#sources#output#define	vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! unite#sources#output#define() "{{{$/;"	f
unite#sources#process#define	vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! unite#sources#process#define() "{{{$/;"	f
unite#sources#rec#_append	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#_append() "{{{$/;"	f
unite#sources#rec#define	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#define() "{{{$/;"	f
unite#sources#register#define	vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! unite#sources#register#define() "{{{$/;"	f
unite#sources#resume#define	vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! unite#sources#resume#define() "{{{$/;"	f
unite#sources#runtimepath#define	vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! unite#sources#runtimepath#define() "{{{$/;"	f
unite#sources#source#define	vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! unite#sources#source#define() "{{{$/;"	f
unite#sources#tab#define	vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! unite#sources#tab#define() "{{{$/;"	f
unite#sources#tag#define	vim/bundle/unite-tag/autoload/unite/sources/tag.vim	/^function! unite#sources#tag#define()$/;"	f
unite#sources#undo#define	vim/bundle/unite.vim/autoload/unite/sources/undo.vim	/^function! unite#sources#undo#define()$/;"	f
unite#sources#vimgrep#define	vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! unite#sources#vimgrep#define() "{{{$/;"	f
unite#sources#window#define	vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! unite#sources#window#define() "{{{$/;"	f
unite#start	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start(...) "{{{$/;"	f
unite#start#complete	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#complete(sources, ...) "{{{$/;"	f
unite#start#get_candidates	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_candidates(sources, ...) "{{{$/;"	f
unite#start#get_vimfiler_candidates	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_vimfiler_candidates(sources, ...) "{{{$/;"	f
unite#start#resume	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume(buffer_name, ...) "{{{$/;"	f
unite#start#resume_from_temporary	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume_from_temporary(context)  "{{{$/;"	f
unite#start#script	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#script(sources, ...) "{{{$/;"	f
unite#start#standard	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#standard(sources, ...) "{{{$/;"	f
unite#start#temporary	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#temporary(sources, ...) "{{{$/;"	f
unite#start#vimfiler_check_filetype	vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#vimfiler_check_filetype(sources, ...) "{{{$/;"	f
unite#start_complete	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_complete(...) "{{{$/;"	f
unite#start_script	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_script(...) "{{{$/;"	f
unite#start_temporary	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_temporary(...) "{{{$/;"	f
unite#substitute_path_separator	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#substitute_path_separator(path) "{{{$/;"	f
unite#take_action	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#take_action(action_name, candidate) "{{{$/;"	f
unite#take_parents_action	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#take_parents_action(action_name, candidate, extend_candidate) "{{{$/;"	f
unite#undef_filter	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_filter(name) "{{{$/;"	f
unite#undef_kind	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_kind(name) "{{{$/;"	f
unite#undef_source	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_source(name) "{{{$/;"	f
unite#util#alternate_buffer	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#alternate_buffer() "{{{$/;"	f
unite#util#command_with_restore_cursor	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#command_with_restore_cursor(command)$/;"	f
unite#util#convert2list	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#convert2list(expr) "{{{$/;"	f
unite#util#escape_file_searching	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_file_searching(...)$/;"	f
unite#util#escape_match	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_match(str) "{{{$/;"	f
unite#util#escape_pattern	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_pattern(...)$/;"	f
unite#util#expand	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#expand(path) "{{{$/;"	f
unite#util#get_last_errmsg	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_errmsg()$/;"	f
unite#util#get_last_status	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_status(...)$/;"	f
unite#util#get_name	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_name(list, name, default) "{{{$/;"	f
unite#util#get_vital	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_vital() "{{{$/;"	f
unite#util#glob	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#glob(pattern, ...) "{{{$/;"	f
unite#util#has_lua	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_lua()$/;"	f
unite#util#has_vimproc	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_vimproc(...)$/;"	f
unite#util#iconv	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#iconv(...)$/;"	f
unite#util#index_name	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#index_name(list, name) "{{{$/;"	f
unite#util#input	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input(prompt, ...) "{{{$/;"	f
unite#util#input_directory	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_directory(message) "{{{$/;"	f
unite#util#input_yesno	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_yesno(message) "{{{$/;"	f
unite#util#is_cmdwin	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_cmdwin() "{{{$/;"	f
unite#util#is_mac	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_mac(...)$/;"	f
unite#util#is_win	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_win(...)$/;"	f
unite#util#is_windows	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_windows(...)$/;"	f
unite#util#path2directory	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2directory(...)$/;"	f
unite#util#path2project_directory	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2project_directory(...)$/;"	f
unite#util#print_error	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#print_error(...)$/;"	f
unite#util#set_default	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default(var, val, ...)  "{{{$/;"	f
unite#util#set_default_dictionary_helper	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#set_dictionary_helper	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_dictionary_helper(...)$/;"	f
unite#util#set_dictionary_helper	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#smart_execute_command	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_execute_command(action, word)$/;"	f
unite#util#sort_by	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#sort_by(...)$/;"	f
unite#util#strchars	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strchars(...)$/;"	f
unite#util#strwidthpart	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart(...)$/;"	f
unite#util#strwidthpart_reverse	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart_reverse(...)$/;"	f
unite#util#substitute_path_separator	vim/bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(...)$/;"	f
unite#util#substitute_path_separator	vim/bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(path)$/;"	f
unite#util#system	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system(...)$/;"	f
unite#util#system_passwd	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system_passwd(...)$/;"	f
unite#util#truncate	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate(...)$/;"	f
unite#util#truncate_smart	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_smart(...)$/;"	f
unite#util#truncate_wrap	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_wrap(str, max, footer_width, separator) "{{{$/;"	f
unite#util#uniq	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq(...)$/;"	f
unite#util#wcswidth	vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#wcswidth(...)$/;"	f
unite#variables#all_sources	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#all_sources(...) "{{{$/;"	f
unite#variables#current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#current_unite() "{{{$/;"	f
unite#variables#default_context	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#default_context() "{{{$/;"	f
unite#variables#disable_current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#disable_current_unite() "{{{$/;"	f
unite#variables#dynamic	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#dynamic() "{{{$/;"	f
unite#variables#enable_current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#enable_current_unite() "{{{$/;"	f
unite#variables#filters	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#filters(...) "{{{$/;"	f
unite#variables#get_source_variable	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#get_source_variable(source, variable, default) "{{{$/;"	f
unite#variables#kinds	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#kinds(...) "{{{$/;"	f
unite#variables#loaded_defaults	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_defaults() "{{{$/;"	f
unite#variables#loaded_sources	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_sources(...) "{{{$/;"	f
unite#variables#options	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#options() "{{{$/;"	f
unite#variables#set_current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#set_current_unite(unite) "{{{$/;"	f
unite#variables#sources	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#sources(...) "{{{$/;"	f
unite#variables#static	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#static() "{{{$/;"	f
unite#variables#use_current_unite	vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#use_current_unite() "{{{$/;"	f
unite#version	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#version() "{{{$/;"	f
unite#view#_add_previewed_buffer_list	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_clear_message	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_message() "{{{$/;"	f
unite#view#_close	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close(buffer_name)  "{{{$/;"	f
unite#view#_convert_lines	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_convert_lines(candidates, ...) "{{{$/;"	f
unite#view#_do_auto_highlight	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_highlight() "{{{$/;"	f
unite#view#_do_auto_preview	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_preview() "{{{$/;"	f
unite#view#_get_status_string	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_string() "{{{$/;"	f
unite#view#_init_cursor	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_init_cursor() "{{{$/;"	f
unite#view#_print_error	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_error(message) "{{{$/;"	f
unite#view#_print_message	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_message(message) "{{{$/;"	f
unite#view#_print_source_error	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_error(message, source_name) "{{{$/;"	f
unite#view#_print_source_message	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_message(message, source_name) "{{{$/;"	f
unite#view#_quick_match_redraw	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quick_match_redraw(quick_match_table) "{{{$/;"	f
unite#view#_quit	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quit(is_force, ...)  "{{{$/;"	f
unite#view#_redraw	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw(is_force, winnr, is_gather_all) "{{{$/;"	f
unite#view#_redraw_candidates	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_candidates(...) "{{{$/;"	f
unite#view#_redraw_line	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_line(...) "{{{$/;"	f
unite#view#_remove_previewed_buffer_list	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_resize_window	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_resize_window() "{{{$/;"	f
unite#view#_set_highlight	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_highlight() "{{{$/;"	f
unite#view#_switch_unite_buffer	vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_switch_unite_buffer(buffer_name, context) "{{{$/;"	f
unite#vimfiler_check_filetype	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_check_filetype(...) "{{{$/;"	f
unite#vimfiler_complete	vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unittest	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^import unittest$/;"	i
unittest	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^import unittest$/;"	i
unittest	vim/bundle/ultisnips/test.py	/^import unittest$/;"	i
unload	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! s:unload()$/;"	f
unshift	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unshift	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
update_buffer_changenr	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:update_buffer_changenr()$/;"	f
update_ftdetect	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:update_ftdetect()$/;"	f
update_headings	vim/bundle/unite-outline/autoload/unite/sources/outline.vim	/^function! s:update_headings(bufnr)$/;"	f
update_tags	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:update_tags()$/;"	f
update_textobjects	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self):$/;"	m	class:SnippetInstance
update_visual_markers	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
urllib	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^import urllib$/;"	i
v	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def v(self):$/;"	m	class:SnippetUtil
vim	vim/bundle/MatchTagAlways/python/mta_vim.py	/^import vim$/;"	i
vim	vim/bundle/ultisnips/plugin/UltiSnips/_vim.py	/^import vim$/;"	i
vim	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^import vim$/;"	i
vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^import vim$/;"	i
vim	vim/bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        self._code = "import re, os, vim, string, random\\n" + code$/;"	i
vimproc	vim/bundle/vimproc/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
vimproc#analyze_shebang	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) "{{{$/;"	f
vimproc#cmd#system	vim/bundle/vimproc/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr)$/;"	f
vimproc#decode_signal	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) "{{{$/;"	f
vimproc#delete_trash	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) "{{{$/;"	f
vimproc#dll_version	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#dll_version() "{{{$/;"	f
vimproc#filepath#which	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path)$/;"	f
vimproc#fopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#fopen(path, flags, ...) "{{{$/;"	f
vimproc#get_command_name	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) "{{{$/;"	f
vimproc#get_last_errmsg	vim/bundle/vimproc/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg()$/;"	f
vimproc#get_last_errmsg	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() "{{{$/;"	f
vimproc#get_last_status	vim/bundle/vimproc/autoload/vimproc.vim	/^  function! vimproc#get_last_status()$/;"	f
vimproc#get_last_status	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#get_last_status() "{{{$/;"	f
vimproc#host_exists	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#host_exists(host) "{{{$/;"	f
vimproc#kill	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) "{{{$/;"	f
vimproc#lexer#init_lexer	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text)$/;"	f
vimproc#lexer#init_reader	vim/bundle/vimproc/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text)$/;"	f
vimproc#open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#open(filename) "{{{$/;"	f
vimproc#parser#expand_wildcard	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) "{{{$/;"	f
vimproc#parser#parse_pipe	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) "{{{$/;"	f
vimproc#parser#parse_statements	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) "{{{$/;"	f
vimproc#parser#split_args	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) "{{{$/;"	f
vimproc#parser#split_args_through	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) "{{{$/;"	f
vimproc#parser#split_commands	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) "{{{$/;"	f
vimproc#parser#split_pipe	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) "{{{$/;"	f
vimproc#parser#split_statements	vim/bundle/vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) "{{{$/;"	f
vimproc#pgroup_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) "{{{$/;"	f
vimproc#plineopen2	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) "{{{$/;"	f
vimproc#plineopen3	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) "{{{$/;"	f
vimproc#popen2	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#popen2(args) "{{{$/;"	f
vimproc#popen3	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#popen3(args) "{{{$/;"	f
vimproc#ptyopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) "{{{$/;"	f
vimproc#readdir	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) "{{{$/;"	f
vimproc#shellescape	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#shellescape(string) "{{{$/;"	f
vimproc#socket_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) "{{{$/;"	f
vimproc#system	vim/bundle/vimproc/autoload/vimproc.vim	/^  function! vimproc#system(...)$/;"	f
vimproc#system	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) "{{{$/;"	f
vimproc#system2	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#system2(...) "{{{$/;"	f
vimproc#system_bg	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) "{{{$/;"	f
vimproc#system_gui	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) "{{{$/;"	f
vimproc#system_passwd	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) "{{{$/;"	f
vimproc#test_readdir	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) "{{{$/;"	f
vimproc#util#expand	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) "{{{$/;"	f
vimproc#util#has_lua	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() "{{{$/;"	f
vimproc#util#iconv	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) "{{{$/;"	f
vimproc#util#is_cygwin	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() "{{{$/;"	f
vimproc#util#is_mac	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() "{{{$/;"	f
vimproc#util#is_windows	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() "{{{$/;"	f
vimproc#util#set_default	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...)  "{{{$/;"	f
vimproc#util#stderrencoding	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() "{{{$/;"	f
vimproc#util#stdinencoding	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() "{{{$/;"	f
vimproc#util#stdoutencoding	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() "{{{$/;"	f
vimproc#util#substitute_path_separator	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) "{{{$/;"	f
vimproc#util#termencoding	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() "{{{$/;"	f
vimproc#util#uniq	vim/bundle/vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) "{{{$/;"	f
vimproc#version	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#version() "{{{$/;"	f
vimproc#write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) "{{{$/;"	f
visualmode	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def visualmode(self):$/;"	m	class:_VimPosition
vital#	vim/bundle/unite.vim/autoload/vital/_b6a796b.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	vim/bundle/unite.vim/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vp_checkpid	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
vp_close_handle	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_close_handle(char *args)$/;"	f
vp_decode	vim/bundle/vimproc/autoload/proc.c	/^vp_decode(char *args)$/;"	f
vp_decode	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_decode(char *args)$/;"	f
vp_delete_trash	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f
vp_dlclose	vim/bundle/vimproc/autoload/proc.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_dlclose(handle)$/;"	f
vp_dlopen	vim/bundle/vimproc/autoload/proc.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_dlopen(path)$/;"	f
vp_dlversion	vim/bundle/vimproc/autoload/proc.c	/^vp_dlversion(char *args)$/;"	f
vp_dlversion	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_dlversion(char *args)$/;"	f
vp_file_close	vim/bundle/vimproc/autoload/proc.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
vp_file_open	vim/bundle/vimproc/autoload/proc.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode)$/;"	f
vp_file_read	vim/bundle/vimproc/autoload/proc.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
vp_file_write	vim/bundle/vimproc/autoload/proc.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
vp_get_winsize	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
vp_host_exists	vim/bundle/vimproc/autoload/proc.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_host_exists(host)$/;"	f
vp_kill	vim/bundle/vimproc/autoload/proc.c	/^vp_kill(char *args)$/;"	f
vp_kill	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_kill(char *args)$/;"	f
vp_kill	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
vp_open	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_open(char *args)$/;"	f
vp_pgroup_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
vp_pgroup_kill	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
vp_pgroup_waitpid	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
vp_pipe_close	vim/bundle/vimproc/autoload/proc.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
vp_pipe_open	vim/bundle/vimproc/autoload/proc.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) "{{{$/;"	f
vp_pipe_read	vim/bundle/vimproc/autoload/proc.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
vp_pipe_write	vim/bundle/vimproc/autoload/proc.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
vp_pipes_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
vp_pty_close	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
vp_pty_get_winsize	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_get_winsize	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_open	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv)$/;"	f
vp_pty_read	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
vp_pty_set_winsize	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_set_winsize	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_write	vim/bundle/vimproc/autoload/proc.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
vp_readdir	vim/bundle/vimproc/autoload/proc.c	/^vp_readdir(char *args)$/;"	f
vp_readdir	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_readdir(char *args)$/;"	f
vp_set_winsize	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
vp_socket_close	vim/bundle/vimproc/autoload/proc.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
vp_socket_open	vim/bundle/vimproc/autoload/proc.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port)$/;"	f
vp_socket_read	vim/bundle/vimproc/autoload/proc.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
vp_socket_write	vim/bundle/vimproc/autoload/proc.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
vp_stack_free	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	file:
vp_stack_from_args	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	file:
vp_stack_pop_bin	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_pop_bin(vp_stack_t *stack, char **buf, size_t *size)$/;"	f	file:
vp_stack_pop_num	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	file:
vp_stack_pop_str	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	file:
vp_stack_push_bin	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_push_bin(vp_stack_t *stack, const char *buf, size_t size)$/;"	f	file:
vp_stack_push_num	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_push_str	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	file:
vp_stack_reserve	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	file:
vp_stack_return	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	file:
vp_stack_return_error	vim/bundle/vimproc/autoload/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_t	vim/bundle/vimproc/autoload/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	vim/bundle/vimproc/autoload/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_waitpid	vim/bundle/vimproc/autoload/proc.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	vim/bundle/vimproc/autoload/proc_w32.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:vp_waitpid() dict$/;"	f
wait_for_user_input	vim/bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
waitpid	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:waitpid(pid)$/;"	f
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:MatchIsTooCheap
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestCheapDelete
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestCommonCharacters
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestCrash
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_BackspaceOneChar
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_DeleteOneChar
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar1
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestNoSubstring
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife1
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestUltiSnipsProblem
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	vim/bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	vim/bundle/ultisnips/test.py	/^            " hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^            "superkallifragilistik some more"$/;"	v	class:Completion_SimpleExample_ECR
wanted	vim/bundle/ultisnips/test.py	/^            "test try\\nSeem to work World"$/;"	v	class:TabStopTestMultilineExpand_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^            "this is something\\nvery nice\\nnotmore text"$/;"	v	class:CursorMovement_Multiline_ECR
wanted	vim/bundle/ultisnips/test.py	/^        "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^        "This is a longer\\ntext that should\\nwrap as\\nformatoptions are\\nenabled\\n" + "end"$/;"	v	class:FOSimple_Break_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^        wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEU"$/;"	v	class:.Transformation_SimpleCaseAsciiResult
wanted	vim/bundle/ultisnips/test.py	/^        wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieu"$/;"	v	class:.Transformation_LowerCaseAsciiResult
wanted	vim/bundle/ultisnips/test.py	/^     wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	vim/bundle/ultisnips/test.py	/^     wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	vim/bundle/ultisnips/test.py	/^     wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	vim/bundle/ultisnips/test.py	/^     wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCode_MultilineIndented
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	vim/bundle/ultisnips/test.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	vim/bundle/ultisnips/test.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	vim/bundle/ultisnips/test.py	/^    wanted = ""$/;"	v	class:_VimTest
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "#include <foo>"$/;"	v
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	vim/bundle/ultisnips/test.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "We overwrite"$/;"	v	class:MultiWord_SnippetOptions_OverwriteExisting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetOptions_OverwriteExisting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetOptions_OverwriteThenChoose_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t"$/;"	v	class:DeleteSnippetInsertion1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnotend"$/;"	v	class:JumpForward_DefSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "again"$/;"	v	class:SnippetOptions_OverwriteTwice_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "first line\\n\\n\\nupsy\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "form_for user, namespace: some_namespace, html: {(id: |class: |title:  )d: "$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Blah Lets replace it again"$/;"	v	class:TabStopTestBackwardJumping2_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Blah mitteLets replace it again"$/;"	v	class:TabStopTestBackwardJumping_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Hidu Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExceptionShouldBeRaised
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello tab blub tab hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello tab\\nblub this\\ntesthallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hellohallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v	class:PythonCode_SimpleAppend
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v	class:PythonCode_MultiAppend
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi New End"$/;"	v	class:PythonCode_UseNewOverOld
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi" + 100*"a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hi" + 100*"a" + 100*"\\n" + 100*"a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "nothing"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test fedcab"$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "x first a bob b y"$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExceptCorrectResult
wanted	vim/bundle/ultisnips/test.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	vim/bundle/ultisnips/test.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = 'test41123\\'êabc0'$/;"	v	class:VerifyVimDict1
wanted	vim/bundle/ultisnips/test.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	vim/bundle/ultisnips/test.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	vim/bundle/ultisnips/test.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	vim/bundle/ultisnips/test.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	vim/bundle/ultisnips/test.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
warn	vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warnings	vim/bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    import warnings$/;"	i
wcswidth	vim/bundle/unite.vim/autoload/vital/_b6a796b/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
which	vim/bundle/vimproc/autoload/vimproc/filepath.vim	/^function! s:which(command, ...)$/;"	f
win32com	vim/bundle/ultisnips/test.py	/^        import win32com.client, win32gui$/;"	i
win32gui	vim/bundle/ultisnips/test.py	/^        import win32com.client, win32gui$/;"	i
with_index	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
wrap	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_a	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_accent	vim/bundle/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrap_i	vim/bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrap_name	vim/bundle/vim-airline/autoload/airline/extensions/tabline/formatters.vim	/^function! s:wrap_name(bufnr, buffer_name)$/;"	f
wrapper	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:err_to_scratch_buffer
wrapreg	vim/bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
wraps	vim/bundle/ultisnips/plugin/UltiSnips/__init__.py	/^from functools import wraps$/;"	i
write	vim/bundle/vimproc/autoload/proc_w32.c	/^#define write /;"	d	file:
write	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
write_cache	vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:write_cache(context, directory, files) "{{{$/;"	f
write_pgroup	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
write_pipes	vim/bundle/vimproc/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
write_snippets	vim/bundle/ultisnips/utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
writefile	vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:writefile(path, list)$/;"	f
writefile	vim/bundle/unite.vim/autoload/vital/_b6a796b/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
yS	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	vim/bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:zip(...)$/;"	f
zip_fill	vim/bundle/unite.vim/autoload/vital/_b6a796b/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
