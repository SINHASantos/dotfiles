# PATH
export PATH=$HOME/bin/git-standup:/Applications/Postgres.app/Contents/Versions/latest/bin:~/.local/bin/:/usr/local/go/bin:$HOME/.cargo/bin:/Library/TeX/texbin:/Applications/MAMP/bin/php/php5.4.26/bin:~/.bin.local:~/dotfiles/bin:/Users/davidpdrsn/.stack/snapshots/x86_64-osx/lts-3.11/7.10.2/bin:/Users/davidpdrsn/.local/bin:$HOME/.cabal/bin:/usr/texbin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

export PATH="$HOME/osm/bin:$PATH"
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$HOME/dev/bin
export PATH=~/.npm-global/bin:$PATH

export NVIM_TUI_ENABLE_TRUE_COLOR=1

export LC_ALL=en_US.UTF-8

# export RUST_SRC_PATH=$HOME/source/reference/rust/src

export RUST_BACKTRACE=0
# export CARGO_TARGET_DIR=$HOME/dev/rust_build_artifacts

export PG_INCLUDE_PATH=/Applications/Postgres.app/Contents/Versions/9.6/include/postgresql/server

export AIRTABLE_API_KEY="keyTSYt1ryMoZkVOH"

export TESSDATA_PREFIX="/Users/davidpdrsn/dev/major/turf/ocr_training_data/"

export PGHOST=localhost

export CODA_API_TOKEN="ca9180fb-6921-41ad-b1e8-d13156ae6f70"

export TONSSER_API_CIRCLE_CI_TOKEN=e8c30671017b1945a10bf376a625db4cbf53c3cb

# export RBENV_VERSION=2.6.0
# export RBENV_VERSION=2.6.3
export RBENV_VERSION=2.6.5

export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc

# for graphql-validate
# from https://github.com/rust-dev-tools/cargo-src/issues/138
export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib:$LD_LIBRARY_PATH

# export JAVA_HOME=/Library/Java/Home
# export JUNIT_HOME=/Users/davidpdrsn/Library/Junit
# export CLASSPATH=$JUNIT_HOME/junit-4.10.jar:$JUNIT_HOME/hamcrest-all-1.3.jar:.
# export CLASSPATH=/usr/share/java/junit.jar:/usr/share/java/hamcrest-core.jar:.

export EDITOR='nvim'

# Make openssl work with rust
export OPENSSL_DIR=/usr/local/opt/openssl
# (export OPENSSL_DIR=`brew --prefix openssl` &) > /dev/null
# (export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib &) > /dev/null

## History
HISTFILE=$HOME/.zhistory       # enable history saving on shell exit
setopt APPEND_HISTORY          # append rather than overwrite history file.
HISTSIZE=1200                  # lines of history to maintain memory
SAVEHIST=1000                  # lines of history to maintain in history file.

# Configure the `less` pager
export LESSOPEN="| /usr/local/Cellar/source-highlight/3.1.7/bin/src-hilite-lesspipe.sh %s"
export LESS=' -R '

## Completions
autoload -U compinit
compinit -C

stty -ixon -ixoff

# cdpath, to cd into often used directories quicker
unsetopt auto_cd # with cdpath enabled, auto_cd gives too many false positives
cdpath=($HOME $HOME/dev/major)

# Setup rbenv
if [ -d /usr/local/var/rbenv ]; then
  export RBENV_ROOT=/usr/local/var/rbenv
  if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
else
  export RBENV_ROOT="${HOME}/.rbenv"
  if [ -d "${RBENV_ROOT}" ]; then
    export PATH="${RBENV_ROOT}/bin:${PATH}"
    eval "$(rbenv init -)"
  fi
fi

fpath=(/usr/local/share/zsh-completions $fpath)

# Enable syntax highlighting for both OS X
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

bindkey -e

export PATH=".git/safe/../../bin:$PATH"

stty sane

# auto completion
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# completion menu
setopt auto_menu
setopt always_to_end
setopt complete_in_word
unsetopt flow_control
unsetopt menu_complete
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR
zstyle ':completion:*' list-colors ''
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

# vi: ft=sh
