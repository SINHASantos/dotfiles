# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-yank           \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.

# remap prefix to Control + a
set -g prefix C-space
bind C-space send-prefix

# Keep plenty of history for scrollback
set -g history-limit 10000

# force a reload of the config file
bind r source-file ~/.tmux.conf

# improve colors
set -g default-terminal "screen-256color"

# use VI
set-window-option -g mode-keys vi

# remove delay for enterting copy mode
set-option -sg escape-time 0

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# horizontal and vertical splits
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# resize panes using the arrow keys
# might as well use them for something
bind Right resize-pane -R 5
bind Left resize-pane -L 5
bind Up resize-pane -U 2
bind Down resize-pane -D 2

bind c new-window -c "#{pane_current_path}"

bind b break-pane -d

# status bar
set -g status-interval 2
set -g status-right-length 59
set -g renumber-windows on
set-option -g base-index 1
set-window-option -g pane-base-index 1

set -g status-left ''
# set -g status-right '#[default]#(tmux display-message -p "#S")#[default] #[fg=default]| #(acpi -b | cut -d "," -f 2 | sed "s/ //") #[fg=default]| #[default]%a %d %b %H:%M #[default]'
set -g status-right '#[default]#(tmux display-message -p "#S")'

set-option -g status-position bottom

# https://github.com/guns/xterm-color-table.vim/blob/master/README.markdown
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg colour240
set-window-option -g window-status-bg default
set-window-option -g window-status-fg colour235
set -g status-bg black
set -g status-fg colour240

setw -g utf8 on
set -g status-utf8 on

# Copy mode works as Vim
bind Escape copy-mode
bind C-[ copy-mode
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'V' rectangle-toggle

bind C-l split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key C-c command-prompt -p "command:" "split-window -c '#{pane_current_path}' -h 'stop-if-fail %%'"
bind-key C-g split-window -c "#{pane_current_path}" -h -p 50 gitsh
bind-key C-h split-window -h "htop"
bind-key C-i split-window -h -c "#{pane_current_path}" "irb"
bind-key C-i split-window -h -c ~/dotfiles "ghi open"
bind-key C-m command-prompt -p "command:" "split-window -h 'man %%'"
bind-key C-n split-window -h -c ~/Dropbox/Apps/notes/ "vim +CtrlP"
bind-key C-r split-window -h -c "#{pane_current_path}" "bin/rails console"
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Load local tmux config
source-file ~/.tmux.conf.local

# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
